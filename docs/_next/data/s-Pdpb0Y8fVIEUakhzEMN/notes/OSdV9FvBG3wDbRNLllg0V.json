{"pageProps":{"note":{"id":"OSdV9FvBG3wDbRNLllg0V","title":"Lambda","desc":"","updated":1639504567052,"created":1637621570142,"custom":{},"fname":"aws.svc.lambda","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"f8093451176c7a6dc2d14b57fb7d7839","links":[{"type":"wiki","from":{"fname":"aws.svc.lambda","id":"OSdV9FvBG3wDbRNLllg0V","vaultName":"tech"},"value":"docker.image","alias":"Docker image","position":{"start":{"line":33,"column":39,"offset":1658},"end":{"line":33,"column":68,"offset":1687},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"docker.image"}},{"type":"wiki","from":{"fname":"aws.svc.lambda","id":"OSdV9FvBG3wDbRNLllg0V","vaultName":"tech"},"value":"general.concurrency","alias":"Concurrency","position":{"start":{"line":40,"column":1,"offset":1899},"end":{"line":40,"column":36,"offset":1934},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.concurrency"}},{"type":"wiki","from":{"fname":"aws.svc.lambda","id":"OSdV9FvBG3wDbRNLllg0V","vaultName":"tech"},"value":"aws.svc.kinesis","alias":"Kinesis","position":{"start":{"line":47,"column":26,"offset":2605},"end":{"line":47,"column":53,"offset":2632},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.kinesis"}},{"type":"wiki","from":{"fname":"aws.svc.lambda","id":"OSdV9FvBG3wDbRNLllg0V","vaultName":"tech"},"value":"aws.svc.dynamo","alias":"Dynamoc","position":{"start":{"line":47,"column":55,"offset":2634},"end":{"line":47,"column":81,"offset":2660},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.dynamo"}},{"type":"wiki","from":{"fname":"aws.svc.lambda","id":"OSdV9FvBG3wDbRNLllg0V","vaultName":"tech"},"value":"aws.svc.SQS","alias":"SQS","position":{"start":{"line":47,"column":83,"offset":2662},"end":{"line":47,"column":102,"offset":2681},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.SQS"}},{"type":"wiki","from":{"fname":"aws.svc.lambda","id":"OSdV9FvBG3wDbRNLllg0V","vaultName":"tech"},"value":"general.patterns.messaging.DLQ","alias":"DLQ","position":{"start":{"line":56,"column":47,"offset":3278},"end":{"line":56,"column":85,"offset":3316},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.patterns.messaging.DLQ"}},{"type":"wiki","from":{"fname":"aws.svc.lambda","id":"OSdV9FvBG3wDbRNLllg0V","vaultName":"tech"},"value":"terraform","alias":"Terraform","position":{"start":{"line":74,"column":108,"offset":4648},"end":{"line":74,"column":131,"offset":4671},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"terraform"}},{"type":"wiki","from":{"fname":"aws.svc.lambda","id":"OSdV9FvBG3wDbRNLllg0V","vaultName":"tech"},"value":"aws.svc.cloud-formation","alias":"CloudFormation","position":{"start":{"line":87,"column":24,"offset":5301},"end":{"line":87,"column":66,"offset":5343},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.cloud-formation"}},{"type":"wiki","from":{"fname":"aws.svc.lambda","id":"OSdV9FvBG3wDbRNLllg0V","vaultName":"tech"},"value":"aws.svc.cloudwatch","alias":"Cloudwatch","position":{"start":{"line":109,"column":52,"offset":6662},"end":{"line":109,"column":85,"offset":6695},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.cloudwatch"}},{"type":"ref","from":{"fname":"aws.svc.lambda","id":"OSdV9FvBG3wDbRNLllg0V","vaultName":"tech"},"value":"aws.svc.lambda.fn","position":{"start":{"line":9,"column":1,"offset":288},"end":{"line":9,"column":23,"offset":310},"indent":[]},"xvault":false,"to":{"fname":"aws.svc.lambda.fn"}},{"type":"ref","from":{"fname":"aws.svc.lambda","id":"OSdV9FvBG3wDbRNLllg0V","vaultName":"tech"},"value":"aws.svc.lambda.event","position":{"start":{"line":21,"column":1,"offset":964},"end":{"line":21,"column":26,"offset":989},"indent":[]},"xvault":false,"to":{"fname":"aws.svc.lambda.event"}},{"type":"ref","from":{"fname":"aws.svc.lambda","id":"OSdV9FvBG3wDbRNLllg0V","vaultName":"tech"},"value":"aws.svc.lambda.extensions","position":{"start":{"line":37,"column":1,"offset":1851},"end":{"line":37,"column":31,"offset":1881},"indent":[]},"xvault":false,"to":{"fname":"aws.svc.lambda.extensions"}},{"from":{"fname":"aws.svc.EC2","vaultName":"tech"},"type":"backlink","position":{"start":{"line":6,"column":94,"offset":485},"end":{"line":6,"column":119,"offset":510},"indent":[]},"value":"aws.svc.lambda"},{"from":{"fname":"aws.svc.SNS","vaultName":"tech"},"type":"backlink","position":{"start":{"line":11,"column":72,"offset":635},"end":{"line":11,"column":107,"offset":670},"indent":[]},"value":"aws.svc.lambda"},{"from":{"fname":"aws.svc.api-gateway","vaultName":"tech"},"type":"backlink","position":{"start":{"line":17,"column":109,"offset":752},"end":{"line":17,"column":127,"offset":770},"indent":[]},"value":"aws.svc.lambda"},{"from":{"fname":"aws.svc.event-bridge","vaultName":"tech"},"type":"backlink","position":{"start":{"line":6,"column":120,"offset":491},"end":{"line":6,"column":146,"offset":517},"indent":[]},"value":"aws.svc.lambda"},{"from":{"fname":"aws.svc.event-bridge","vaultName":"tech"},"type":"backlink","position":{"start":{"line":17,"column":3,"offset":961},"end":{"line":17,"column":38,"offset":996},"indent":[]},"value":"aws.svc.lambda"},{"from":{"fname":"deploy.serverless.framework","vaultName":"tech"},"type":"backlink","position":{"start":{"line":7,"column":40,"offset":327},"end":{"line":7,"column":65,"offset":352},"indent":[]},"value":"aws.svc.lambda"},{"from":{"fname":"gitlab.CI-CD.artifact","vaultName":"tech"},"type":"backlink","position":{"start":{"line":50,"column":87,"offset":1535},"end":{"line":50,"column":113,"offset":1561},"indent":[]},"value":"aws.svc.lambda"},{"from":{"fname":"aws.svc.dynamo.streams","vaultName":"tech"},"type":"backlink","position":{"start":{"line":15,"column":40,"offset":911},"end":{"line":15,"column":70,"offset":941},"indent":[]},"value":"aws.svc.lambda"},{"from":{"fname":"aws.svc.lambda.fn","vaultName":"tech"},"type":"backlink","position":{"start":{"line":28,"column":5,"offset":1704},"end":{"line":28,"column":30,"offset":1729},"indent":[]},"value":"aws.svc.lambda"}],"anchors":{"concepts":{"type":"header","text":"Concepts","value":"concepts","line":13,"column":0,"depth":2},"function":{"type":"header","text":"Function","value":"function","line":14,"column":0,"depth":3},"triggers":{"type":"header","text":"Triggers","value":"triggers","line":17,"column":0,"depth":3},"event":{"type":"header","text":"Event","value":"event","line":24,"column":0,"depth":3},"execution-environment":{"type":"header","text":"Execution Environment","value":"execution-environment","line":29,"column":0,"depth":3},"deployment":{"type":"header","text":"Deployment","value":"deployment","line":36,"column":0,"depth":3},"lambda-extensions":{"type":"header","text":"Lambda Extensions","value":"lambda-extensions","line":41,"column":0,"depth":3},"concurrency":{"type":"header","text":"Concurrency","value":"concurrency","line":45,"column":0,"depth":3},"features":{"type":"header","text":"Features","value":"features","line":48,"column":0,"depth":2},"event-source-mapping":{"type":"header","text":"Event Source Mapping","value":"event-source-mapping","line":49,"column":0,"depth":3},"destination":{"type":"header","text":"Destination","value":"destination","line":59,"column":0,"depth":3},"how-it-works":{"type":"header","text":"How it works","value":"how-it-works","line":68,"column":0,"depth":3},"when-to-use":{"type":"header","text":"When to use","value":"when-to-use","line":77,"column":0,"depth":3},"limitations":{"type":"header","text":"Limitations","value":"limitations","line":85,"column":0,"depth":3},"lambda-application":{"type":"header","text":"Lambda Application","value":"lambda-application","line":91,"column":0,"depth":3},"misc":{"type":"header","text":"Misc","value":"misc","line":99,"column":0,"depth":2}},"children":["n6qNDv2CNZCf1Mkaat3Vf","sk9JvTdjqKG2LEMfkpf0j","7dGIPwR7D3fnuwYVCvFn7","Ag4RGxbqigmzcZAUS9FRv","mHVMjAHm9xjTEnRdsGi96"],"parent":"QukN1H4jrogOyBjotZd7U","data":{}},"body":"<h1 id=\"lambda\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#lambda\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Lambda</h1>\n<p>A Lambda is like an anonymous function (or a callback) that runs code in response to events.</p>\n<ul>\n<li>Think of them like event handlers, but for web services, not components within a webpage</li>\n</ul>\n<p>Effectively, everything is abstracted away aside from a function interface.</p>\n<h2 id=\"concepts\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#concepts\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Concepts</h2>\n<h3 id=\"function\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#function\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Function</h3>\n<p></p><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Lambda Function</span></div>\n<a href=\"/Digital-Garden/notes/Ag4RGxbqigmzcZAUS9FRv\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">â†’</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><p>A function is a resource that you can invoke to run your code in Lambda. A function has code to process the events that you pass into the function or that other AWS services send to the function.</p>\n<p>Functions can be invoked directly with...</p>\n<ul>\n<li>the Lambda console</li>\n<li>the Lambda API</li>\n<li>AWS SDK</li>\n<li>AWS CLI</li>\n<li>AWS toolkits</li>\n</ul>\n<p>Functions can also be invoked <em>indirectly</em>...</p>\n<ul>\n<li>by configuring other AWS services to invoke it\n<ul>\n<li>ex. invoke your function when an object is created in <a href=\"/Digital-Garden/notes/2Rtof8yGX9K2Tq6tLljBb\">S3</a></li>\n</ul>\n</li>\n<li>configuring Lambda to read from a stream or queue and invoke it.</li>\n</ul>\n<h3 id=\"sync-vs-async-invocation\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#sync-vs-async-invocation\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Sync vs Async Invocation</h3>\n<ul>\n<li>With synchronous invocation, you wait for the function to process the event and return a response.</li>\n<li>With asynchronous invocation, Lambda queues the event for processing and returns a response immediately.\n<ul>\n<li>Therefore, in <a href=\"/Digital-Garden/notes/5iC7cpurvsTcO6WDflzOZ\">Node</a> it returns a <a href=\"/Digital-Garden/notes/FVbSefFiCJPpdtkRRsogA\">Promise</a></li>\n</ul>\n</li>\n</ul>\n<p>When you invoke a function synchronously, you receive errors in the response and can retry. When you invoke asynchronously, use an event source mapping, or configure another service to invoke your function, the retry requirements and the way that your function scales to handle large numbers of events can vary.</p>\n<p>When you invoke a function asynchronously, you don't wait for a response from the function code. You hand off the event to Lambda and Lambda handles the rest. You can configure how Lambda handles errors, and can send invocation records to a downstream resource to chain together components of your application.</p>\n<p>You can also configure Lambda to send an invocation record to another service. Lambda supports the following destinations for asynchronous invocation.</p>\n<ul>\n<li>an <a href=\"/Digital-Garden/notes/Ha1umcNRHS8mEarVSMy5v\">SQS</a> queue</li>\n<li>an <a href=\"/Digital-Garden/notes/3E2oC3PsnDWowLW9hK0eZ\">SNS</a> topic</li>\n<li>a <a href=\"/Digital-Garden/notes/OSdV9FvBG3wDbRNLllg0V\">Lambda</a> function</li>\n<li>Amazon EventBridge â€“ An EventBridge event bus.</li>\n</ul>\n<p>Several AWS services, such as <a href=\"/Digital-Garden/notes/2Rtof8yGX9K2Tq6tLljBb\">S3</a> and <a href=\"/Digital-Garden/notes/3E2oC3PsnDWowLW9hK0eZ\">SNS</a> invoke functions asynchronously to process events.</p>\n</div></div><p></p><p></p>\n<h3 id=\"triggers\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#triggers\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Triggers</h3>\n<p>A trigger is a resource or configuration that invokes a Lambda function. Triggers include AWS services that you can configure to invoke a function and event source mappings.</p>\n<p>A trigger can be configured to invoke your function in response to lifecycle events, external requests, or on a schedule.</p>\n<p>Each trigger acts as a client invoking your function independently. Each event that Lambda passes to your function has data from only one client or trigger.</p>\n<h3 id=\"event\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#event\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Event</h3>\n<p>An event is a JSON-formatted document that contains data for a Lambda function to process. The runtime converts the event to an object and passes it to your function code.</p>\n<p></p><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Event</span></div>\n<a href=\"/Digital-Garden/notes/sk9JvTdjqKG2LEMfkpf0j\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">â†’</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><p>When we invoke a function, we determine the structure and contents of the event:</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"TemperatureK\"</span><span class=\"token operator\">:</span> <span class=\"token number\">281</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"WindKmh\"</span><span class=\"token operator\">:</span> <span class=\"token number\">-3</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"HumidityPct\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0.55</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"PressureHPa\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1020</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>When an AWS service invokes your function, the service defines the shape of the event:</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"Records\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"Sns\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Timestamp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2019-01-02T12:45:07.000Z\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Signature\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tcc6faL2yUC6dgZdmrwh1Y4cGa/ebXEkAi6RibDsvpi+tE/1+82j...65r==\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"MessageId\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"95df01b4-ee98-5cb9-9903-4c221d41eb5e\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"Message\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Hello from SNS!\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// ...</span>\n</code></pre></div></div><p></p><p></p>\n<h3 id=\"execution-environment\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#execution-environment\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Execution Environment</h3>\n<p>Lambda provides a secure and isolated runtime environment for your Lambda function. It manages the processes and resources that are required to run the function.</p>\n<p>The execution environment provides lifecycle support for the function and for any extensions associated with your function.</p>\n<p><a href=\"https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html\">more on Lambda Execution Environment</a></p>\n<h3 id=\"deployment\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#deployment\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Deployment</h3>\n<p>You deploy your Lambda function code using a deployment package. Lambda supports two types of deployment packages:</p>\n<ul>\n<li>A .zip file archive that contains your function code and its dependencies.</li>\n<li>Your Lambda + its dependencies as a <a href=\"/Digital-Garden/notes/SQwuv6ixxiQtYGEQnoSZo\">Docker image</a>. You can then load that container into something like AWS Elastic Container Registry (ECR)</li>\n</ul>\n<h3 id=\"lambda-extensions\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#lambda-extensions\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Lambda Extensions</h3>\n<p>We can include extensions to support our lambdas\n</p><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Extensions</span></div>\n<a href=\"/Digital-Garden/notes/7dGIPwR7D3fnuwYVCvFn7\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">â†’</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><p>Lambda Extensions API can be used to integrate Lambda with their preferred tools for monitoring, observability, security, and governance.</p>\n<p>Your extension can register for function and execution environment lifecycle events. In response to these events, you can start new processes, run logic, and control and participate in all phases of the Lambda lifecycle: initialization, invocation, and shutdown.</p>\n<p>An extension runs as an independent process in the execution environment and can continue to run after the function invocation is fully processed.</p>\n<ul>\n<li>Because extensions run as processes, you can write them in a different language than the function, though a compiled language is recommended so the extension is a self-contained binary.</li>\n</ul>\n</div></div><p></p><p></p>\n<h3 id=\"concurrency\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#concurrency\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Concurrency</h3>\n<p><a href=\"/Digital-Garden/notes/W5etsXYnFDHBWHEHSZKjp\">Concurrency</a> is the number of requests that your function is serving at any given time. When your function is invoked, Lambda provisions an instance of it to process the event. When the function code finishes running, it can handle another request. If the function is invoked again while a request is still being processed, another instance is provisioned, increasing the function's concurrency.</p>\n<h2 id=\"features\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#features\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Features</h2>\n<h3 id=\"event-source-mapping\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#event-source-mapping\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Event Source Mapping</h3>\n<p>An event source mapping is a resource in Lambda that reads items from a stream or queue and sends the items to your function in batches.</p>\n<ul>\n<li>Each event that your function processes can contain hundreds or thousands of items.</li>\n</ul>\n<p>Lambda reads events from <a href=\"/Digital-Garden/notes/mP0bWcHx4tIFklY9Ge8vh\">Kinesis</a>, <a href=\"/Digital-Garden/notes/gEztUcJYazBs8J8k0gi7o\">Dynamoc</a>, <a href=\"/Digital-Garden/notes/Ha1umcNRHS8mEarVSMy5v\">SQS</a>, among a few others.</p>\n<p>You can use event source mappings to process items from a stream or queue in services that don't invoke Lambda functions directly</p>\n<p>Event source mappings maintain a local queue of unprocessed items and handle retries if the function returns an error or is throttled.</p>\n<h3 id=\"destination\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#destination\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Destination</h3>\n<p>A destination is an AWS resource that receives invocation records for a function</p>\n<ul>\n<li>The invocation record contains details about the request and response in JSON format, including the function's response, and the reason that the record was sent.\n<ul>\n<li>this is something we'd want to send to the <a href=\"/Digital-Garden/notes/0pUoWXrTC07Z9B1ijwosK\">DLQ</a> in the event a message fails to be sent.</li>\n</ul>\n</li>\n</ul>\n<p>We can configure separate destinations depending on whether invocations pass or fail.</p>\n<hr>\n<h3 id=\"how-it-works\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#how-it-works\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>How it works</h3>\n<p>Lambda provides a Programming Model, which is common to all runtimes (Node, C# etc). It defines the interface between your code and the Lambda system:</p>\n<ul>\n<li>You tell Lambda the entry point to your function by defining a handler in the function configuration. The runtime passes in objects to the handler that contain the invocation event and the context (such as the function name and request ID).</li>\n</ul>\n<p>When the handler finishes processing the first event, the runtime sends it another.</p>\n<ul>\n<li>The function's class stays in memory, so clients and variables that are declared outside of the handler method in initialization code can be reused.</li>\n<li>Therefore, to save processing time on subsequent events, create reusable resources like AWS SDK clients during initialization. Once initialized, each instance of your function can process thousands of requests.</li>\n</ul>\n<h3 id=\"when-to-use\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#when-to-use\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>When to use</h3>\n<p>Unless going with a serverless architecture, Lambda is most suitable for small snippets of code that rarely change.</p>\n<ul>\n<li>think of Lambda functions as part of the infrastructure rather than part of the application\n<ul>\n<li>The justification for adhering to this principle diminishes when we consider advancements like IaC (ex. <a href=\"/Digital-Garden/notes/Ku1OgHMhELajzo61Gx7ye\">Terraform</a>).</li>\n</ul>\n</li>\n</ul>\n<p>Lambda can be used as a plugin system for other AWS services, for example:</p>\n<ul>\n<li>S3 doesnâ€™t come with an API to resize an image after uploading it to a bucket, but with Lambda, you can add that capability to S3.</li>\n</ul>\n<h3 id=\"limitations\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#limitations\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Limitations</h3>\n<ul>\n<li>Your functions will suffer a cold start when a function is invoked after a period of inactivity</li>\n<li>limit of 250 MB for your code bundle, including all your dependencies. This limit should not present an issue.</li>\n</ul>\n<hr>\n<h3 id=\"lambda-application\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#lambda-application\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Lambda Application</h3>\n<p>An AWS Lambda application is a combination of Lambda functions, event sources, and other resources that work together to perform tasks.</p>\n<ul>\n<li>With it, you can use <a href=\"/Digital-Garden/notes/NbGOJJpZuEbf0hXs2UvAB\">CloudFormation</a> and other tools to collect your application's components into a single package that can be deployed and managed as one resource.</li>\n</ul>\n<p>Applications make your Lambda projects portable</p>\n<hr>\n<h2 id=\"misc\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#misc\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Misc</h2>\n<p>Your function also has access to local storage in the /tmp directory. Instances of your function that are serving requests remain active for a few hours before being recycled.</p>\n<p>The runtime captures logs from your function and sends it to Amazon CloudWatch Logs. We get:</p>\n<ul>\n<li>the return value of the function.</li>\n<li>entries detailing when functions were invoked, and when they failed.</li>\n</ul>\n<p>Lambdas should be considered stateless, though we can use local storage and class-level objects to increase performance</p>\n<p>By default, Lambda runs your functions in a secure VPC. Lambda owns this VPC, which isn't connected to your account's default VPC.</p>\n<ul>\n<li>When you connect a function to a VPC in your account, the function can't access the internet unless your VPC provides access.</li>\n</ul>\n<p>You can configure a function to mount an Amazon Elastic File System (Amazon EFS) file system to a local directory. With Amazon EFS, your function code can access and modify shared resources safely and at high concurrency.</p>\n<p>Lambda provides runtimes for .NET (PowerShell, C#), Go, Java, Node.js, Python, and Ruby.</p>\n<p>It may take 5 to 10 minutes for logs to show up in <a href=\"/Digital-Garden/notes/gJBzCsQsFbZ0AESictJ8g\">Cloudwatch</a> after a Lambda function invocation.</p>\n<hr>\n<h2 id=\"backlinks\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#backlinks\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Backlinks</h2>\n<ul>\n<li><a href=\"/Digital-Garden/notes/T3myEQpNJczlAwIZCMpQB\">Elastic Compute Cloud</a></li>\n<li><a href=\"/Digital-Garden/notes/3E2oC3PsnDWowLW9hK0eZ\">SNS</a></li>\n<li><a href=\"/Digital-Garden/notes/o1Bu4i5kWHRsosQdOI2fR\">API Gateway</a></li>\n<li><a href=\"/Digital-Garden/notes/7n3tUhrwbvz8nNu0bTlWz\">Event Bridge</a></li>\n<li><a href=\"/Digital-Garden/notes/nRb6Im4Kcmc2ZWE7K1jZ1\">Serverlesss Framework</a></li>\n<li><a href=\"/Digital-Garden/notes/jqIxYA4fpGL6wIKJNkovK\">artifact</a></li>\n<li><a href=\"/Digital-Garden/notes/5uuohllUAxCmbMFJb8Pj9\">Dynamo Streams</a></li>\n<li><a href=\"/Digital-Garden/notes/Ag4RGxbqigmzcZAUS9FRv\">Lambda Function</a></li>\n</ul>\n<hr>\n<h2 id=\"children\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#children\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Children</h2>\n<ol>\n<li><a href=\"/Digital-Garden/notes/n6qNDv2CNZCf1Mkaat3Vf\">CLI</a></li>\n<li><a href=\"/Digital-Garden/notes/sk9JvTdjqKG2LEMfkpf0j\">Event</a></li>\n<li><a href=\"/Digital-Garden/notes/7dGIPwR7D3fnuwYVCvFn7\">Extensions</a></li>\n<li><a href=\"/Digital-Garden/notes/Ag4RGxbqigmzcZAUS9FRv\">Lambda Function</a></li>\n<li><a href=\"/Digital-Garden/notes/mHVMjAHm9xjTEnRdsGi96\">Layer</a></li>\n</ol>","noteIndex":{"id":"olZIVfSs2uLLr3BppFh4K","title":"Root","desc":"","updated":1618676699718,"created":1615482407722,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"777fb4dab9bcf63cbfe772245d7e4871","links":[],"anchors":{"digital-garden":{"type":"header","text":"Digital Garden","value":"digital-garden","line":8,"column":0,"depth":1}},"children":["zFMjbn3xihVNHjUIdZCD1","IK6NOKemuDjhfstJBovKL","RS8qp1GxwtiJopCUHTTtq","ZaTr28eWk1DrXOEsc1YVb","Vi0WYVLZunVM9iR8XZJn3","ngAbg7gluvbt1bY1UIRsi","RCPPXSakm5TvKka8kOmVp","MPx8ykTP57I40WTZvTP7f","ZU5WmdTG1bHoE8RcmZXZG","jqWiyYJff92RjXuUQt9PQ","KihijM8OQvZ4pASkkhqzL","F9vyqvls3OBCujtukqKhy","facc2b01-755a-409f-99f6-57bef2d1501f","m5ov42Vm6mR7RQWTvl1NW","YYt62mSW964cwb5nP0hva","PZxxZ4iESzSlbbHJKxuAZ","UDu62Pa6BaRqlG8uGoMhy","nMCtMXVvjBsJk3iw1zoIO","ANfx9Z4a6ZA0uJuSHtbIJ","BkG557LKUYbH1DnxprEVT","1TaH8zDTM98FZ9SYaeXLM","dc79799f-a55d-48ab-a8be-c48adb1b19c0","f6feef57-b8f5-451f-a09a-7b63f6a07183","4sz47Y0LKs1Si73rWtyyh","5a9fb1df-478e-4687-9be0-5cb97e61ec57","1374e9e9-1cbc-4e1f-b1ca-66b8569533dd","f529cc34-aba0-45ca-ad7e-02ddda318941","0zcauha3il2NqtxZazIo7","9bbd6f68-03b2-41f4-92e4-2ca313e8b450","5a2ab598-fa7e-4471-8bda-9f5831b679ae","uV6w4mZPoohWyZV4Xaad0","RgE0mZLaUjPftFPZsiAoe","mytCOts26Pidush65tdRW","fwUzxfLSPMH1eL8oBoLWx","TbW7PM9bg1y5TGkiWwQ8b","xiSIDeEtIc8X0lpUQlppI","0jxgntiLNHWFuCbzqtFGF","GkdMprLUe4QQULBxmGN6V","4SYc6v5hxY5g6Ip6kjpwO","fqVQpS9FBiXgKsZX3R3sJ","L5JUZlGAGvTxrsEBB7DY8","963c4b54-02bd-4943-a15f-52cf59ffd0f4","TeTedoeS2LdHPR632eCpM","e65188a1-177e-4ab2-99f9-75f85d537621","fajYnbVhCRDi74xn0H30R","bArGdGwqo3iFkyKMyE7qR","4Dcp7gbEVoLLgfu7bXFai","5d700782-fb81-416e-83f9-5dd88260e350","zubgzhNFE6KlTgXcjTz6O","8lpdfWa0cbSq1XJQbcYcY","17I8ZksXvqCH1mRtZDjHp","kF916Ow84qpJJeMRkWMIo","tMLkLcrIHHBz56xVmBLkP","CSePBQ6q7qhowKESqVwt7","laZ4OfLhZNK1Kuy6GaWUr","z5IJblOknQhMzZ5QZh4ye","N36FHxfxzwJfxDY3miWyX","3bb25f58-2b50-4fa3-af55-48ea9f88a081","aOqNcxZh8qN4MoBJcvGTc","u93Rz4fEWGu6VBR30Zraf","9hjMHnKvYT4jLKvuDSXaV","LgW7mTIALODoXc54B3p6S","UYPxfHBFWX7fb6hHU5bB6","qxSOd6SPN8qf9ZUojVFDX","WQoMTf6VXBaxCgksXAVsj","2Mw4XgfyCHXHNOX5yoCIY","UFrwsXzC1yr7Ge8FF8Vbo","a8edc4ac-028b-40ec-872a-e4a005b04b2a","0XJqmcdtcMZu66glBI5O8","lK8r8BXS4ThiUTe4xKIZe","93de42ca-53ea-460a-baa7-b9ec5c47cb1e","Rxs2jaGpdFzqYtP7lAJFJ","aO8W81Z0PyIb6Hs7nOHPW","I01hENHnh8Tqu3Ok8sLzG","evqsPNutOaZ8hcBCqxFQu","zhhxcjZUHdU8uRLwGb9Zh","G1aFACZB2ooWGMGwyd3ZW","YWy1C4tgoaCcw1m8JJsr7","Szj3o5iaNxPpesiCqwrbu","XhvCDW3fIw6h6MhY5ticq","Q70g7SusFZBQXzkuQifv4","AzfWDH3wp7jFpL2EYxBcW","y0fwpZ9qMqirsLiFyOciU","ZF8xj8wwDUqKlrwTrCFZ1","tAJvhqhdfyZZa87QHq1TU","4hRmipi8lxpBLyzWu5JVB","iTg0C7QjvnmqBZeEigJNs","3babc3d2-79ae-470a-9c06-ab8bba2e684e","bF3UsMFya3fMeXWDspVov","ULkfbL9WpktbVYnzhl6Jw","PpNOO8JYWe6dM8wruSa7x","di40pCxDn7IiqE8lFdD46","rmW0mkerqV35I8QPji6lM","3IFIK1ByzeIxZCByryGLN","iImkYAKfkw3beAl6pLbDn","tho65KN0ZpjQlVvP1fEzM","ecDe8DNWrkeQTwpTEvHje","Yqhdd9mSJGN7OJOeyoSD2","NEhsoOfR7J6o01ielAuUm","Ws5tah8tpeyn9tK8VBTg8","Bqpifx2HX3vjLhX9yvhTV","gWAg15uBJgkS2B0wcpMAa","l7V3v2ep1YdDCt7DOr7Ci","yM2PJBdqJnHpD63cPA6sW","qn0bre7eLbi3QMbCfWkUi","fSu0KxFL41IRouotqmbHs","0gtg24Mj1a1bQFPRGQNlO","7iQPBMltLPLbFEz2qbjPu","yoh4pwoXcfELInGKRdYf6","dCGCWXgAmiOZXbdULT1m6","jMavlje07sNa6hSEIE8WA","Xxm0JE4dKHxrQAaZfzvxD","PAEBZCyFBZJyR7OoMZ41E","PQ6km8RgRCuyICBPOYz8f","2bhftt8rGuxYu4pFgNqru","hjYIZpHQWuXfeEoGeJEKW","K2M9bQqVq2eQfm29eslKL","X8obW1iKwYsvNgKWGyCzy","yJwSC7hqYIezTFHf5i0Ev","c4Z7ETcOHUILRMH32Sfjw","qiR6dIu857b9M9kTqjOyK","8vflbCVkwZtYcqdDDTNAz","Ku1OgHMhELajzo61Gx7ye","LUrfhDWo8wuwZu7CN9TV8","osu6JGOnvXJ5gt3tpqWZY","1a6173cd-cf13-4b34-a522-8350bf9a364f","ZgCUp366YrF2Tyky2NT73","S2sBltrPfd8a7ICuD7CuH","oWCuBXOg6JWfZzjmKxmNl","jOmhZ8ovLYTPbpM1vqSDx","FraC6xzLy1ei91l1ICyc9","6ceBas2RE9Q4787GDngH7","734cd78d-0bc9-426b-803d-1efc84dfffe5","k4Bb09px6r0FxIRs49SXV","oaG3H1S9IUBO644nGZigu","Ka7agQJkUMRSWN0uFdkWK","si3z090WsiLasMhJBa1Az","ljKAVERmdEiKLK9hXGKBm","LIcuGYV0DDt1VWbvH6Sed","MgUSrpNCIwDOW4fX3vPOF","bZumdyapJ2H0wWWOmJ45i","QHXEIyeZGIGMVi5Q52UWI","i5Fya3Vzzm0rBT0ctByuo"],"parent":null,"data":{},"body":"\n# Digital Garden\n\nThis Wiki of Personal Information is organized according to domains and their\nsub-domains, along with specific implementation of those domains.\n\nFor instance, Git itself is a domain. Sub-domains of Git, would be `commit`,\n`tags`, `reflog` etc. implementations of each of those could be `cli`, `strat`\n(strategies), `inner` etc.\n\nThe goal of the wiki is to present data in a manner that is from the perspective\nof a querying user. Here, a user is a programmer wanting to get key information\nfrom a specific domain. For instance, if a user wants to use postgres functions\nand hasn't done them in a while, they should be able to query\n`postgres.functions` to see what information is available to them.\n\nThis wiki has been written with myself in mind. While learning each of these\ndomains, I have been sensitive to the \"aha\" moments and have noted down my\ninsights as they arose. I have refrained from capturing information that I\nconsidered obvious or otherwise non-beneficial to my own understanding.\n\nThe ability I hope to gain from this wiki is the ability to step away from any\ngiven domain for a long period of time, and be able to be passably useful for\nwhatever my goals are within a short period of time. Of course, this is all\nvague sounding, and really depends on the domain, along with the ends I am\ntrying to reach.\n\nTo achieve this, the system should be steadfast to:\n- be able to put information in relatively easily, without too much thought\n\trequired to make that determination.\n- be able to extract the information that we need, meaning there is a\n\thigh-degree in confidence in the location of the information. The idea is\n\tthat information loses a large amount of its value when it is unfindable.\n\tTherefore, a relatively strict ideology should be used when determining\n\twhere a piece of information belongs.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":3,"useFMTitle":true,"useNoteTitleForLink":true,"noLegacyNoteRef":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"assetsPrefix":"/Digital-Garden","siteUrl":"https://tycholiz.github.io","copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"Dendron","description":"Publishable tech notes","duplicateNoteBehavior":{"action":"useVault","payload":["tech"]},"siteLastModified":true,"gh_edit_branch":"main","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{}},"workspace":{"dendronVersion":"0.67.1","vaults":[{"fsPath":"../main/tech","name":"tech"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"enableUserTags":true,"enableHashTags":true},"usePrettyRefs":true}},"__N_SSG":true}