{"pageProps":{"note":{"id":"GDJoTJocO8OKbTtSjn2CW","title":"Domain-Driven Design","desc":"","updated":1642121011078,"created":1622567686760,"custom":{},"fname":"general.principles.DDD","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"80d9f1fd38892adb62fae22fb1926d65","links":[{"type":"wiki","from":{"fname":"general.principles.DDD","id":"GDJoTJocO8OKbTtSjn2CW","vaultName":"tech"},"value":"general.objects.value-object","alias":"value objects","position":{"start":{"line":30,"column":32,"offset":2760},"end":{"line":30,"column":78,"offset":2806},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.objects.value-object"}},{"type":"wiki","from":{"fname":"general.principles.DDD","id":"GDJoTJocO8OKbTtSjn2CW","vaultName":"tech"},"value":"general.principles.DDD.bounded-context","alias":"Bounded context","position":{"start":{"line":67,"column":3,"offset":4229},"end":{"line":67,"column":61,"offset":4287},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.principles.DDD.bounded-context"}},{"from":{"fname":"development-process.agile.BDD","vaultName":"tech"},"type":"backlink","position":{"start":{"line":29,"column":39,"offset":1482},"end":{"line":29,"column":69,"offset":1512},"indent":[]},"value":"general.principles.DDD"},{"from":{"fname":"general.objects.value-object","vaultName":"tech"},"type":"backlink","position":{"start":{"line":19,"column":48,"offset":1080},"end":{"line":19,"column":78,"offset":1110},"indent":[]},"value":"general.principles.DDD"}],"anchors":{"domain-primitives":{"type":"header","text":"Domain Primitives","value":"domain-primitives","line":35,"column":0,"depth":3},"domain-model":{"type":"header","text":"Domain Model","value":"domain-model","line":55,"column":0,"depth":3},"farmyard-domain-analogy":{"type":"header","text":"Farmyard Domain analogy","value":"farmyard-domain-analogy","line":59,"column":0,"depth":3},"tactical-design-tools":{"type":"header","text":"Tactical design tools","value":"tactical-design-tools","line":76,"column":0,"depth":2},"ue-resources":{"type":"header","text":"UE Resources","value":"ue-resources","line":80,"column":0,"depth":1}},"children":["wScGMNwmgoh1iNp4PYFCN","eJh8ewMkDq2LpJPqC6fX8"],"parent":"5vdsNZiyqUoIDkLzedrMm","data":{}},"body":"<h1 id=\"domain-driven-design\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#domain-driven-design\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Domain-Driven Design</h1>\n<p>Domain Driven Design is the concept that we should design our application code with heavy consideration into the business logic.</p>\n<ul>\n<li>ex. we don't know if it will always be the case that you must be a user to purchase a book. Therefore, we shouldn't design the system in a way where we can't accomplish that easily.</li>\n</ul>\n<p>DDD is about thinking about your software in terms of business application, instead of looking at it in terms of technology.</p>\n<ul>\n<li>ie. we are writing for the needs of the business</li>\n<li>we achieve this by defining models for our domain, and then writing software that conforms to it.</li>\n</ul>\n<p>DDD has nothing to do with writing code in a certain way. Rather, it's about understanding the underlying logic behind the problems you need to solve. It's the thinking about domains that drives the design of the code. In a way, DDD is the opposite of jumping right in with code and trying to solve something without thinking about it beforehand.</p>\n<ul>\n<li>\"The novice jumps in right away with code. The veteran ponders the problem they are solving, and thinks (in code) about the logic of that problem\"</li>\n</ul>\n<p>DDD is all about unifying all of the code in a way that is highly comprehensible to those uninvolved with the code's creation. That is, focus is placed on the high level business logic and domain delineations.</p>\n<ul>\n<li>At a trivial level, it’s all about the names you use for things.  </li>\n<li>at the level above that, it’s about the way that you combine and activate things to produce business value.  </li>\n<li>at the level above that, it’s the causal and relationship (semantic) model that keeps everything cohesive, coherent, and aligned with the business.  </li>\n<li>this alignment can’t come from an implementation-focused model. you must use a domain model.</li>\n</ul>\n<p>Why is this important?</p>\n<ul>\n<li>Centralizes (business) domain logic into the software to account for changes in understanding and business needs and to improve longevity </li>\n<li>Helps us understand where we should be investing (strategic) and how to build it (tactical) - investing in the parts of the business that are core </li>\n<li>Understanding the problem helps align everyone to produce better solutions and more effective communication</li>\n</ul>\n<p>Key ideas:</p>\n<ol>\n<li>Collaboratively model the domain so that your software reads like the problem it solves.</li>\n<li>Isolate your software and establish context in each part of it. There should be enough previously handled assertions that you have a good idea of what's going to happen while looking at any random line of code. (Not sure how to word this one)</li>\n<li>You don't have to model the domain <em>exactly</em>.\n(Use abstraction to get rid of unnecessary details, and sometimes it makes sense to model things as they are used rather than what they actually are)</li>\n</ol>\n<h3 id=\"domain-primitives\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#domain-primitives\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Domain Primitives</h3>\n<p>The building blocks of DDD are <a href=\"/Digital-Garden/notes/X9TyB7Fn9NNAUyakav5Pz\">value objects</a>.</p>\n<ul>\n<li>They can also be thought of as <em>domain primitives</em>.</li>\n</ul>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// without domain primitives</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">User</span></span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n    email<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n    mobile<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// with domain primitives</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\"><span class=\"token maybe-class-name\">User</span></span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Name</span>\n    email<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">Email</span>\n    mobile<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">PhoneNumber</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<h3 id=\"domain-model\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#domain-model\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Domain Model</h3>\n<p>a domain model is an abstraction of the subdomain. Not every aspect of the domain can be part of the model. It's the aspects chosen for implementation that constitute the model.</p>\n<ul>\n<li>this means that we don't just think in terms of what the object can do; we think of it in terms of what we <em>want</em> it to do.</li>\n</ul>\n<h3 id=\"farmyard-domain-analogy\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#farmyard-domain-analogy\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Farmyard Domain analogy</h3>\n<p>Imagine we wanted to build a house. We would first need to determine what type of house we are building. Detached? Condo? Duplex? Farmhouse?</p>\n<p>After determining this, we would talk to the domain expert, which would probably be a farmer. </p>\n<ul>\n<li>\n<p>Notably, it's not the architect, since they wouldn't have the in-depth domain knowledge required to design everything.\n<img src=\"/Digital-Garden/assets/images/2022-01-10-09-34-42.png\"></p>\n</li>\n<li>\n<p>Domain: Farmyard</p>\n</li>\n<li>\n<p>Sub-domains: Barn, Stables, Farmhouse, Garden gate, etc.</p>\n</li>\n<li>\n<p>Domain model: The layout/plans for each sub-domain (e.g. the layout of the farmhouse)</p>\n<ul>\n<li>analogous relationship:\n<ul>\n<li>classes -> objects</li>\n<li>domain model -> bounded contexts</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Ubiquitous language: in the layout, we have rooms like Family room, Bedroom, Bathroom. This is the ubiquitous language of the domain.</p>\n</li>\n<li>\n<p><a href=\"/Digital-Garden/notes/eJh8ewMkDq2LpJPqC6fX8\">Bounded context</a>: The parts circled in blue.</p>\n<ul>\n<li>language used in each bounded context is specific. For example, \"caretaker\" of the stables and \"caretaker\" of the farmhouse are two different things.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"tactical-design-tools\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#tactical-design-tools\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Tactical design tools</h2>\n<p>Tactical design tools are concerned with implementation details of the components inside a bounded context\ntactical design is expected to change over the process of development</p>\n<h1 id=\"ue-resources\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#ue-resources\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>UE Resources</h1>\n<p><a href=\"https://www.youtube.com/watch?v=b6D_NTgzmhs\">Event Storming: Brainstorming to arrive at DDD conclusions</a>\nDDD is not about writing code in a certain way. Rather, it's about understanding the underlying logic behind the problems you need to solve. It's the thinking about domains that drives the design of the code. In a way, DDD is the opposite of jumping right in with code and trying to solve something without thinking about it beforehand.</p>\n<ul>\n<li>\"The novice jumps in right away with code. The veteran ponders the problem they are solving, and thinks (in code) about the logic of that problem\"</li>\n</ul>\n<p>DDD is all about unifying all of the code in a way that is highly comprehensible to those uninvolved with the code's creation.</p>\n<hr>\n<h2 id=\"backlinks\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#backlinks\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Backlinks</h2>\n<ul>\n<li><a href=\"/Digital-Garden/notes/Io6ynzCU93aEuqY3g8opd\">Behaviour-Driven Development</a></li>\n<li><a href=\"/Digital-Garden/notes/X9TyB7Fn9NNAUyakav5Pz\">Value Object</a></li>\n</ul>\n<hr>\n<h2 id=\"children\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#children\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Children</h2>\n<ol>\n<li><a href=\"/Digital-Garden/notes/wScGMNwmgoh1iNp4PYFCN\">aggregate</a></li>\n<li><a href=\"/Digital-Garden/notes/eJh8ewMkDq2LpJPqC6fX8\">bounded-context</a></li>\n</ol>","noteIndex":{"id":"olZIVfSs2uLLr3BppFh4K","title":"Root","desc":"","updated":1618676699718,"created":1615482407722,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"777fb4dab9bcf63cbfe772245d7e4871","links":[],"anchors":{"digital-garden":{"type":"header","text":"Digital Garden","value":"digital-garden","line":8,"column":0,"depth":1}},"children":["zFMjbn3xihVNHjUIdZCD1","IK6NOKemuDjhfstJBovKL","RS8qp1GxwtiJopCUHTTtq","ZaTr28eWk1DrXOEsc1YVb","Vi0WYVLZunVM9iR8XZJn3","ngAbg7gluvbt1bY1UIRsi","RCPPXSakm5TvKka8kOmVp","MPx8ykTP57I40WTZvTP7f","ZU5WmdTG1bHoE8RcmZXZG","jqWiyYJff92RjXuUQt9PQ","KihijM8OQvZ4pASkkhqzL","F9vyqvls3OBCujtukqKhy","facc2b01-755a-409f-99f6-57bef2d1501f","m5ov42Vm6mR7RQWTvl1NW","YYt62mSW964cwb5nP0hva","PZxxZ4iESzSlbbHJKxuAZ","UDu62Pa6BaRqlG8uGoMhy","nMCtMXVvjBsJk3iw1zoIO","ANfx9Z4a6ZA0uJuSHtbIJ","BkG557LKUYbH1DnxprEVT","1TaH8zDTM98FZ9SYaeXLM","dc79799f-a55d-48ab-a8be-c48adb1b19c0","f6feef57-b8f5-451f-a09a-7b63f6a07183","4sz47Y0LKs1Si73rWtyyh","5a9fb1df-478e-4687-9be0-5cb97e61ec57","1374e9e9-1cbc-4e1f-b1ca-66b8569533dd","f529cc34-aba0-45ca-ad7e-02ddda318941","0zcauha3il2NqtxZazIo7","9bbd6f68-03b2-41f4-92e4-2ca313e8b450","5a2ab598-fa7e-4471-8bda-9f5831b679ae","uV6w4mZPoohWyZV4Xaad0","RgE0mZLaUjPftFPZsiAoe","mytCOts26Pidush65tdRW","fwUzxfLSPMH1eL8oBoLWx","TbW7PM9bg1y5TGkiWwQ8b","xiSIDeEtIc8X0lpUQlppI","0jxgntiLNHWFuCbzqtFGF","GkdMprLUe4QQULBxmGN6V","4SYc6v5hxY5g6Ip6kjpwO","fqVQpS9FBiXgKsZX3R3sJ","L5JUZlGAGvTxrsEBB7DY8","963c4b54-02bd-4943-a15f-52cf59ffd0f4","TeTedoeS2LdHPR632eCpM","e65188a1-177e-4ab2-99f9-75f85d537621","fajYnbVhCRDi74xn0H30R","bArGdGwqo3iFkyKMyE7qR","4Dcp7gbEVoLLgfu7bXFai","5d700782-fb81-416e-83f9-5dd88260e350","zubgzhNFE6KlTgXcjTz6O","8lpdfWa0cbSq1XJQbcYcY","17I8ZksXvqCH1mRtZDjHp","kF916Ow84qpJJeMRkWMIo","tMLkLcrIHHBz56xVmBLkP","CSePBQ6q7qhowKESqVwt7","laZ4OfLhZNK1Kuy6GaWUr","z5IJblOknQhMzZ5QZh4ye","N36FHxfxzwJfxDY3miWyX","3bb25f58-2b50-4fa3-af55-48ea9f88a081","aOqNcxZh8qN4MoBJcvGTc","u93Rz4fEWGu6VBR30Zraf","9hjMHnKvYT4jLKvuDSXaV","LgW7mTIALODoXc54B3p6S","UYPxfHBFWX7fb6hHU5bB6","qxSOd6SPN8qf9ZUojVFDX","WQoMTf6VXBaxCgksXAVsj","2Mw4XgfyCHXHNOX5yoCIY","UFrwsXzC1yr7Ge8FF8Vbo","a8edc4ac-028b-40ec-872a-e4a005b04b2a","0XJqmcdtcMZu66glBI5O8","lK8r8BXS4ThiUTe4xKIZe","93de42ca-53ea-460a-baa7-b9ec5c47cb1e","Rxs2jaGpdFzqYtP7lAJFJ","aO8W81Z0PyIb6Hs7nOHPW","I01hENHnh8Tqu3Ok8sLzG","evqsPNutOaZ8hcBCqxFQu","zhhxcjZUHdU8uRLwGb9Zh","G1aFACZB2ooWGMGwyd3ZW","YWy1C4tgoaCcw1m8JJsr7","Szj3o5iaNxPpesiCqwrbu","XhvCDW3fIw6h6MhY5ticq","Q70g7SusFZBQXzkuQifv4","AzfWDH3wp7jFpL2EYxBcW","y0fwpZ9qMqirsLiFyOciU","ZF8xj8wwDUqKlrwTrCFZ1","tAJvhqhdfyZZa87QHq1TU","4hRmipi8lxpBLyzWu5JVB","iTg0C7QjvnmqBZeEigJNs","3babc3d2-79ae-470a-9c06-ab8bba2e684e","bF3UsMFya3fMeXWDspVov","ULkfbL9WpktbVYnzhl6Jw","PpNOO8JYWe6dM8wruSa7x","di40pCxDn7IiqE8lFdD46","rmW0mkerqV35I8QPji6lM","3IFIK1ByzeIxZCByryGLN","iImkYAKfkw3beAl6pLbDn","tho65KN0ZpjQlVvP1fEzM","ecDe8DNWrkeQTwpTEvHje","Yqhdd9mSJGN7OJOeyoSD2","NEhsoOfR7J6o01ielAuUm","Ws5tah8tpeyn9tK8VBTg8","Bqpifx2HX3vjLhX9yvhTV","gWAg15uBJgkS2B0wcpMAa","l7V3v2ep1YdDCt7DOr7Ci","yM2PJBdqJnHpD63cPA6sW","qn0bre7eLbi3QMbCfWkUi","fSu0KxFL41IRouotqmbHs","0gtg24Mj1a1bQFPRGQNlO","7iQPBMltLPLbFEz2qbjPu","yoh4pwoXcfELInGKRdYf6","dCGCWXgAmiOZXbdULT1m6","jMavlje07sNa6hSEIE8WA","Xxm0JE4dKHxrQAaZfzvxD","PAEBZCyFBZJyR7OoMZ41E","PQ6km8RgRCuyICBPOYz8f","2bhftt8rGuxYu4pFgNqru","hjYIZpHQWuXfeEoGeJEKW","K2M9bQqVq2eQfm29eslKL","X8obW1iKwYsvNgKWGyCzy","yJwSC7hqYIezTFHf5i0Ev","c4Z7ETcOHUILRMH32Sfjw","qiR6dIu857b9M9kTqjOyK","8vflbCVkwZtYcqdDDTNAz","Ku1OgHMhELajzo61Gx7ye","LUrfhDWo8wuwZu7CN9TV8","osu6JGOnvXJ5gt3tpqWZY","1a6173cd-cf13-4b34-a522-8350bf9a364f","ZgCUp366YrF2Tyky2NT73","S2sBltrPfd8a7ICuD7CuH","oWCuBXOg6JWfZzjmKxmNl","jOmhZ8ovLYTPbpM1vqSDx","FraC6xzLy1ei91l1ICyc9","6ceBas2RE9Q4787GDngH7","734cd78d-0bc9-426b-803d-1efc84dfffe5","k4Bb09px6r0FxIRs49SXV","oaG3H1S9IUBO644nGZigu","Ka7agQJkUMRSWN0uFdkWK","si3z090WsiLasMhJBa1Az","ljKAVERmdEiKLK9hXGKBm","LIcuGYV0DDt1VWbvH6Sed","MgUSrpNCIwDOW4fX3vPOF","bZumdyapJ2H0wWWOmJ45i","QHXEIyeZGIGMVi5Q52UWI","i5Fya3Vzzm0rBT0ctByuo"],"parent":null,"data":{},"body":"\n# Digital Garden\n\nThis Wiki of Personal Information is organized according to domains and their\nsub-domains, along with specific implementation of those domains.\n\nFor instance, Git itself is a domain. Sub-domains of Git, would be `commit`,\n`tags`, `reflog` etc. implementations of each of those could be `cli`, `strat`\n(strategies), `inner` etc.\n\nThe goal of the wiki is to present data in a manner that is from the perspective\nof a querying user. Here, a user is a programmer wanting to get key information\nfrom a specific domain. For instance, if a user wants to use postgres functions\nand hasn't done them in a while, they should be able to query\n`postgres.functions` to see what information is available to them.\n\nThis wiki has been written with myself in mind. While learning each of these\ndomains, I have been sensitive to the \"aha\" moments and have noted down my\ninsights as they arose. I have refrained from capturing information that I\nconsidered obvious or otherwise non-beneficial to my own understanding.\n\nThe ability I hope to gain from this wiki is the ability to step away from any\ngiven domain for a long period of time, and be able to be passably useful for\nwhatever my goals are within a short period of time. Of course, this is all\nvague sounding, and really depends on the domain, along with the ends I am\ntrying to reach.\n\nTo achieve this, the system should be steadfast to:\n- be able to put information in relatively easily, without too much thought\n\trequired to make that determination.\n- be able to extract the information that we need, meaning there is a\n\thigh-degree in confidence in the location of the information. The idea is\n\tthat information loses a large amount of its value when it is unfindable.\n\tTherefore, a relatively strict ideology should be used when determining\n\twhere a piece of information belongs.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":3,"useFMTitle":true,"useNoteTitleForLink":true,"noLegacyNoteRef":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"assetsPrefix":"/Digital-Garden","siteUrl":"https://tycholiz.github.io","copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"Dendron","description":"Publishable tech notes","duplicateNoteBehavior":{"action":"useVault","payload":["tech"]},"siteLastModified":true,"gh_edit_branch":"main","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{}},"workspace":{"dendronVersion":"0.67.1","vaults":[{"fsPath":"../main/tech","name":"tech"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"enableUserTags":true,"enableHashTags":true},"usePrettyRefs":true}},"__N_SSG":true}