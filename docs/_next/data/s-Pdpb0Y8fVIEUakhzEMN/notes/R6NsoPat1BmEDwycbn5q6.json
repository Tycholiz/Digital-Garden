{"pageProps":{"note":{"id":"R6NsoPat1BmEDwycbn5q6","title":"Cook","desc":"","updated":1626732673232,"created":1618343306857,"custom":{},"fname":"git.cli.rebase.cook","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"973ed28ff0fd177f1d0f12b953a45dd2","links":[],"anchors":{"see-the-patch-of-the-current-commit":{"type":"header","text":"See the patch of the current commit","value":"see-the-patch-of-the-current-commit","line":8,"column":0,"depth":5},"status-of-rebase":{"type":"header","text":"Status of rebase","value":"status-of-rebase","line":11,"column":0,"depth":5},"cherry-pit-remove-a-specific-commit":{"type":"header","text":"Cherry-Pit: Remove a specific commit","value":"cherry-pit-remove-a-specific-commit","line":21,"column":0,"depth":4},"alias-cherry-pit":{"type":"header","text":"alias cherry-pit","value":"alias-cherry-pit","line":24,"column":0,"depth":5},"include-some-changes-as-part-of-a-previous-commit":{"type":"header","text":"Include some changes as part of a previous commit","value":"include-some-changes-as-part-of-a-previous-commit","line":27,"column":0,"depth":4},"stash-method":{"type":"header","text":"Stash method","value":"stash-method","line":31,"column":0,"depth":5},"autosquash-method":{"type":"header","text":"Autosquash method","value":"autosquash-method","line":44,"column":0,"depth":5},"fixup-manual":{"type":"header","text":"fixup (manual)","value":"fixup-manual","line":54,"column":0,"depth":5},"git-fixup-alias":{"type":"header","text":"git fixup alias","value":"git-fixup-alias","line":59,"column":0,"depth":5}},"children":[],"parent":"QyhBiiMo8hlLxdGY9WX7K","data":{}},"body":"<h1 id=\"cook\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#cook\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Cook</h1>\n<h5 id=\"see-the-patch-of-the-current-commit\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#see-the-patch-of-the-current-commit\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>See the patch of the current commit</h5>\n<p><code>git rebase --show-current-patch</code></p>\n<h5 id=\"status-of-rebase\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#status-of-rebase\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Status of rebase</h5>\n<p>Number of commits in this rebase\n<code>cat .git/rebase-apply/last</code></p>\n<p>Out of the number of commits in this rebase, which are we on?\n<code>cat .git/rebase-apply/next</code></p>\n<p>Which commit is currently being applied?\n<code>cat .git/rebase-apply/original-commit</code></p>\n<h4 id=\"cherry-pit-remove-a-specific-commit\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#cherry-pit-remove-a-specific-commit\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Cherry-Pit: Remove a specific commit</h4>\n<p><code>git rebase -p --onto SHA^ SHA</code></p>\n<h5 id=\"alias-cherry-pit\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#alias-cherry-pit\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>alias cherry-pit</h5>\n<p>usage: <code>git cherry-pit &#x3C;SHA-to-remove></code></p>\n<h4 id=\"include-some-changes-as-part-of-a-previous-commit\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#include-some-changes-as-part-of-a-previous-commit\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Include some changes as part of a previous commit</h4>\n<p>Imagine we realized that we should have included a change (perhaps deleting some old comments) as part of a previous \"cleaning commit\"\nOf course, we will have to change history to do so, with <code>rebase</code>:</p>\n<h5 id=\"stash-method\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#stash-method\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Stash method</h5>\n<p>Strategy: stash the desired changes, reset back to a commit, pop those changes and amend commit, then complete rebase</p>\n<ol>\n<li>Use <code>git stash</code> to store the changes you want to add.</li>\n<li>Use <code>git rebase -i HEAD~10</code> (or however many commits back you want to see).</li>\n<li>Mark the commit in question (a0865...) for edit by changing the word pick at the start of the line into edit. Don't delete the other lines as that would delete the commits.</li>\n<li>Save the rebase file, and git will drop back to the shell and wait for you to fix that commit.</li>\n<li>Pop the stash by using <code>git stash pop</code></li>\n<li>Add your file with <code>git add &#x3C;file></code>.</li>\n<li>Amend the commit with <code>git commit --amend --no-edit</code>.</li>\n<li>Do a <code>git rebase --continue</code> which will rewrite the rest of your commits against the new one.</li>\n<li>Repeat from step 2 onwards if you have marked more than one commit for edit.</li>\n</ol>\n<h5 id=\"autosquash-method\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#autosquash-method\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Autosquash method</h5>\n<ol>\n<li>Stage the changes that we want to include in a previous commit</li>\n<li>Create a new commit with an identical message of the original commit with the following command\n<code>git commit -c &#x3C;ORIGINAL-COMMIT-SHA></code>\n<pre><code>- pro-tip: use `HEAD~2` syntax for relative\n</code></pre>\n</li>\n<li>With the editor open, prepend the name of the new commit with <code>fixup! </code> (or <code>squash! </code> if we want to edit the commit message)\n<code>fixup! refactor: clean up payment methods</code></li>\n<li>run <code>git rebase -i --autosquash &#x3C;SHA></code>, where <code>&#x3C;SHA></code> is the commit immediately before the original commit we want to amend.</li>\n<li>Git will detect the <code>fixup! </code> directive, and will look for the commit with the same message. With this information, Git will perform the squash directive (combining the commits), and then continue to rebase the rest of the commits</li>\n</ol>\n<h5 id=\"fixup-manual\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#fixup-manual\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>fixup (manual)</h5>\n<ol>\n<li>make the commit <code>git commit -m fixup</code></li>\n<li>run <code>git rebase -i</code></li>\n<li>move the commit, and squash it into an earlier one</li>\n</ol>\n<h5 id=\"git-fixup-alias\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#git-fixup-alias\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>git fixup alias</h5>\n<pre><code>fixup = \"!fn() { git commit --fixup ${1} &#x26;&#x26; GIT_EDITOR=true git rebase --autosquash -i ${1}^; }; fn\"\n\n// then add staged changes to commit 3 before HEAD:\ngit fixup HEAD~3\n\n</code></pre>","noteIndex":{"id":"olZIVfSs2uLLr3BppFh4K","title":"Root","desc":"","updated":1618676699718,"created":1615482407722,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"777fb4dab9bcf63cbfe772245d7e4871","links":[],"anchors":{"digital-garden":{"type":"header","text":"Digital Garden","value":"digital-garden","line":8,"column":0,"depth":1}},"children":["zFMjbn3xihVNHjUIdZCD1","IK6NOKemuDjhfstJBovKL","RS8qp1GxwtiJopCUHTTtq","ZaTr28eWk1DrXOEsc1YVb","Vi0WYVLZunVM9iR8XZJn3","ngAbg7gluvbt1bY1UIRsi","RCPPXSakm5TvKka8kOmVp","MPx8ykTP57I40WTZvTP7f","ZU5WmdTG1bHoE8RcmZXZG","jqWiyYJff92RjXuUQt9PQ","KihijM8OQvZ4pASkkhqzL","F9vyqvls3OBCujtukqKhy","facc2b01-755a-409f-99f6-57bef2d1501f","m5ov42Vm6mR7RQWTvl1NW","YYt62mSW964cwb5nP0hva","PZxxZ4iESzSlbbHJKxuAZ","UDu62Pa6BaRqlG8uGoMhy","nMCtMXVvjBsJk3iw1zoIO","ANfx9Z4a6ZA0uJuSHtbIJ","BkG557LKUYbH1DnxprEVT","1TaH8zDTM98FZ9SYaeXLM","dc79799f-a55d-48ab-a8be-c48adb1b19c0","f6feef57-b8f5-451f-a09a-7b63f6a07183","4sz47Y0LKs1Si73rWtyyh","5a9fb1df-478e-4687-9be0-5cb97e61ec57","1374e9e9-1cbc-4e1f-b1ca-66b8569533dd","f529cc34-aba0-45ca-ad7e-02ddda318941","0zcauha3il2NqtxZazIo7","9bbd6f68-03b2-41f4-92e4-2ca313e8b450","5a2ab598-fa7e-4471-8bda-9f5831b679ae","uV6w4mZPoohWyZV4Xaad0","RgE0mZLaUjPftFPZsiAoe","mytCOts26Pidush65tdRW","fwUzxfLSPMH1eL8oBoLWx","TbW7PM9bg1y5TGkiWwQ8b","xiSIDeEtIc8X0lpUQlppI","0jxgntiLNHWFuCbzqtFGF","GkdMprLUe4QQULBxmGN6V","4SYc6v5hxY5g6Ip6kjpwO","fqVQpS9FBiXgKsZX3R3sJ","L5JUZlGAGvTxrsEBB7DY8","963c4b54-02bd-4943-a15f-52cf59ffd0f4","TeTedoeS2LdHPR632eCpM","e65188a1-177e-4ab2-99f9-75f85d537621","fajYnbVhCRDi74xn0H30R","bArGdGwqo3iFkyKMyE7qR","4Dcp7gbEVoLLgfu7bXFai","5d700782-fb81-416e-83f9-5dd88260e350","zubgzhNFE6KlTgXcjTz6O","8lpdfWa0cbSq1XJQbcYcY","17I8ZksXvqCH1mRtZDjHp","kF916Ow84qpJJeMRkWMIo","tMLkLcrIHHBz56xVmBLkP","CSePBQ6q7qhowKESqVwt7","laZ4OfLhZNK1Kuy6GaWUr","z5IJblOknQhMzZ5QZh4ye","N36FHxfxzwJfxDY3miWyX","3bb25f58-2b50-4fa3-af55-48ea9f88a081","aOqNcxZh8qN4MoBJcvGTc","u93Rz4fEWGu6VBR30Zraf","9hjMHnKvYT4jLKvuDSXaV","LgW7mTIALODoXc54B3p6S","UYPxfHBFWX7fb6hHU5bB6","qxSOd6SPN8qf9ZUojVFDX","WQoMTf6VXBaxCgksXAVsj","2Mw4XgfyCHXHNOX5yoCIY","UFrwsXzC1yr7Ge8FF8Vbo","a8edc4ac-028b-40ec-872a-e4a005b04b2a","0XJqmcdtcMZu66glBI5O8","lK8r8BXS4ThiUTe4xKIZe","93de42ca-53ea-460a-baa7-b9ec5c47cb1e","Rxs2jaGpdFzqYtP7lAJFJ","aO8W81Z0PyIb6Hs7nOHPW","I01hENHnh8Tqu3Ok8sLzG","evqsPNutOaZ8hcBCqxFQu","zhhxcjZUHdU8uRLwGb9Zh","G1aFACZB2ooWGMGwyd3ZW","YWy1C4tgoaCcw1m8JJsr7","Szj3o5iaNxPpesiCqwrbu","XhvCDW3fIw6h6MhY5ticq","Q70g7SusFZBQXzkuQifv4","AzfWDH3wp7jFpL2EYxBcW","y0fwpZ9qMqirsLiFyOciU","ZF8xj8wwDUqKlrwTrCFZ1","tAJvhqhdfyZZa87QHq1TU","4hRmipi8lxpBLyzWu5JVB","iTg0C7QjvnmqBZeEigJNs","3babc3d2-79ae-470a-9c06-ab8bba2e684e","bF3UsMFya3fMeXWDspVov","ULkfbL9WpktbVYnzhl6Jw","PpNOO8JYWe6dM8wruSa7x","di40pCxDn7IiqE8lFdD46","rmW0mkerqV35I8QPji6lM","3IFIK1ByzeIxZCByryGLN","iImkYAKfkw3beAl6pLbDn","tho65KN0ZpjQlVvP1fEzM","ecDe8DNWrkeQTwpTEvHje","Yqhdd9mSJGN7OJOeyoSD2","NEhsoOfR7J6o01ielAuUm","Ws5tah8tpeyn9tK8VBTg8","Bqpifx2HX3vjLhX9yvhTV","gWAg15uBJgkS2B0wcpMAa","l7V3v2ep1YdDCt7DOr7Ci","yM2PJBdqJnHpD63cPA6sW","qn0bre7eLbi3QMbCfWkUi","fSu0KxFL41IRouotqmbHs","0gtg24Mj1a1bQFPRGQNlO","7iQPBMltLPLbFEz2qbjPu","yoh4pwoXcfELInGKRdYf6","dCGCWXgAmiOZXbdULT1m6","jMavlje07sNa6hSEIE8WA","Xxm0JE4dKHxrQAaZfzvxD","PAEBZCyFBZJyR7OoMZ41E","PQ6km8RgRCuyICBPOYz8f","2bhftt8rGuxYu4pFgNqru","hjYIZpHQWuXfeEoGeJEKW","K2M9bQqVq2eQfm29eslKL","X8obW1iKwYsvNgKWGyCzy","yJwSC7hqYIezTFHf5i0Ev","c4Z7ETcOHUILRMH32Sfjw","qiR6dIu857b9M9kTqjOyK","8vflbCVkwZtYcqdDDTNAz","Ku1OgHMhELajzo61Gx7ye","LUrfhDWo8wuwZu7CN9TV8","osu6JGOnvXJ5gt3tpqWZY","1a6173cd-cf13-4b34-a522-8350bf9a364f","ZgCUp366YrF2Tyky2NT73","S2sBltrPfd8a7ICuD7CuH","oWCuBXOg6JWfZzjmKxmNl","jOmhZ8ovLYTPbpM1vqSDx","FraC6xzLy1ei91l1ICyc9","6ceBas2RE9Q4787GDngH7","734cd78d-0bc9-426b-803d-1efc84dfffe5","k4Bb09px6r0FxIRs49SXV","oaG3H1S9IUBO644nGZigu","Ka7agQJkUMRSWN0uFdkWK","si3z090WsiLasMhJBa1Az","ljKAVERmdEiKLK9hXGKBm","LIcuGYV0DDt1VWbvH6Sed","MgUSrpNCIwDOW4fX3vPOF","bZumdyapJ2H0wWWOmJ45i","QHXEIyeZGIGMVi5Q52UWI","i5Fya3Vzzm0rBT0ctByuo"],"parent":null,"data":{},"body":"\n# Digital Garden\n\nThis Wiki of Personal Information is organized according to domains and their\nsub-domains, along with specific implementation of those domains.\n\nFor instance, Git itself is a domain. Sub-domains of Git, would be `commit`,\n`tags`, `reflog` etc. implementations of each of those could be `cli`, `strat`\n(strategies), `inner` etc.\n\nThe goal of the wiki is to present data in a manner that is from the perspective\nof a querying user. Here, a user is a programmer wanting to get key information\nfrom a specific domain. For instance, if a user wants to use postgres functions\nand hasn't done them in a while, they should be able to query\n`postgres.functions` to see what information is available to them.\n\nThis wiki has been written with myself in mind. While learning each of these\ndomains, I have been sensitive to the \"aha\" moments and have noted down my\ninsights as they arose. I have refrained from capturing information that I\nconsidered obvious or otherwise non-beneficial to my own understanding.\n\nThe ability I hope to gain from this wiki is the ability to step away from any\ngiven domain for a long period of time, and be able to be passably useful for\nwhatever my goals are within a short period of time. Of course, this is all\nvague sounding, and really depends on the domain, along with the ends I am\ntrying to reach.\n\nTo achieve this, the system should be steadfast to:\n- be able to put information in relatively easily, without too much thought\n\trequired to make that determination.\n- be able to extract the information that we need, meaning there is a\n\thigh-degree in confidence in the location of the information. The idea is\n\tthat information loses a large amount of its value when it is unfindable.\n\tTherefore, a relatively strict ideology should be used when determining\n\twhere a piece of information belongs.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":3,"useFMTitle":true,"useNoteTitleForLink":true,"noLegacyNoteRef":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"assetsPrefix":"/Digital-Garden","siteUrl":"https://tycholiz.github.io","copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"Dendron","description":"Publishable tech notes","duplicateNoteBehavior":{"action":"useVault","payload":["tech"]},"siteLastModified":true,"gh_edit_branch":"main","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{}},"workspace":{"dendronVersion":"0.67.1","vaults":[{"fsPath":"../main/tech","name":"tech"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"enableUserTags":true,"enableHashTags":true},"usePrettyRefs":true}},"__N_SSG":true}