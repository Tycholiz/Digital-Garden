{"pageProps":{"note":{"id":"jqIxYA4fpGL6wIKJNkovK","title":"artifact","desc":"","updated":1640388752339,"created":1640385694376,"custom":{},"fname":"gitlab.CI-CD.artifact","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"346eb99ffd55cc7569ecebdb0e3586d0","links":[{"type":"wiki","from":{"fname":"gitlab.CI-CD.artifact","id":"jqIxYA4fpGL6wIKJNkovK","vaultName":"tech"},"value":"gitlab.CI-CD.jobs","alias":"jobs","position":{"start":{"line":7,"column":11,"offset":188},"end":{"line":7,"column":37,"offset":214},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"gitlab.CI-CD.jobs"}},{"type":"wiki","from":{"fname":"gitlab.CI-CD.artifact","id":"jqIxYA4fpGL6wIKJNkovK","vaultName":"tech"},"value":"gitlab.CI-CD.cache","alias":"cache","position":{"start":{"line":12,"column":16,"offset":590},"end":{"line":12,"column":44,"offset":618},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"gitlab.CI-CD.cache"}},{"type":"wiki","from":{"fname":"gitlab.CI-CD.artifact","id":"jqIxYA4fpGL6wIKJNkovK","vaultName":"tech"},"value":"deploy.serverless.framework","alias":"Serverless Framework","position":{"start":{"line":50,"column":22,"offset":1470},"end":{"line":50,"column":74,"offset":1522},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"deploy.serverless.framework"}},{"type":"wiki","from":{"fname":"gitlab.CI-CD.artifact","id":"jqIxYA4fpGL6wIKJNkovK","vaultName":"tech"},"value":"aws.svc.lambda","alias":"lambdas","position":{"start":{"line":50,"column":87,"offset":1535},"end":{"line":50,"column":113,"offset":1561},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.lambda"}}],"anchors":{"job-artifacts":{"type":"header","text":"Job Artifacts","value":"job-artifacts","line":10,"column":0,"depth":1},"how-to-view--download-artifacts":{"type":"header","text":"How to view + download Artifacts","value":"how-to-view--download-artifacts","line":58,"column":0,"depth":2},"pipeline-artifacts":{"type":"header","text":"Pipeline Artifacts","value":"pipeline-artifacts","line":61,"column":0,"depth":1}},"children":[],"parent":"SL4aNCgB1VUFCemqEumoQ","data":{}},"body":"<h1 id=\"artifact\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#artifact\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>artifact</h1>\n<p>Artifacts come in 2 flavors: Job Artifacts and Pipeline Artifacts</p>\n<h1 id=\"job-artifacts\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#job-artifacts\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Job Artifacts</h1>\n<p>Jobs can output an archive of files and directories. This output is known as a job artifact.</p>\n<p>Often our <a href=\"/Digital-Garden/notes/00Zg2MBUOK3gzRljklTOp\">jobs</a> generate files which are used by subsequent jobs/stages.</p>\n<ul>\n<li>ex. our deploy stage might generate libraries and files which are then used to deploy the application. These files are collectively known as the artifact\n<ul>\n<li>this can give us insight into how something was deployed</li>\n</ul>\n</li>\n</ul>\n<p>Artifacts can be uploaded and browsed by using the <code>artifact</code> property on the job.</p>\n<ul>\n<li>similar to a <a href=\"/Digital-Garden/notes/ltM0gjy87NV4go37RWkbd\">cache</a>, it is then available to other jobs (though they must be in the same pipeline).</li>\n</ul>\n<p>You may want to create artifacts only for tagged releases to avoid filling the build server storage with temporary build artifacts. For example, use rules to create artifacts only for tags:</p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">default-job</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> yarn test\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> $CI_COMMIT_BRANCH\n\n<span class=\"token key atrule\">release-job</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> yarn package <span class=\"token punctuation\">-</span>U\n  <span class=\"token key atrule\">artifacts</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"$CI_COMMIT_REF_NAME\"</span>\n    <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> target/<span class=\"token important\">*.war</span>\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> $CI_COMMIT_TAG\n</code></pre>\n<p>You can use wildcards for directories too. For example, if you want to get all the files inside the directories that end with xyz:</p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">job</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">artifacts</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> path/<span class=\"token important\">*xyz/*</span>\n</code></pre>\n<p>Save all Git untracked files and files in <code>binaries/</code>:</p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">artifacts</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">untracked</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> binaries/\n</code></pre>\n<p>Imagine we are using <a href=\"/Digital-Garden/notes/nRb6Im4Kcmc2ZWE7K1jZ1\">Serverless Framework</a> to create 3 <a href=\"/Digital-Garden/notes/OSdV9FvBG3wDbRNLllg0V\">lambdas</a>. Building this will result in us having 3 different directories, each with its own <code>node_modules/</code>. We may want to create this artifact (which is in effect a <code>dist/</code> folder with 3 subdirectories).</p>\n<h2 id=\"how-to-view--download-artifacts\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#how-to-view--download-artifacts\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>How to view + download Artifacts</h2>\n<p><a href=\"https://docs.gitlab.com/ee/ci/pipelines/job_artifacts.html#download-job-artifacts\">docs</a></p>\n<h1 id=\"pipeline-artifacts\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#pipeline-artifacts\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Pipeline Artifacts</h1>\n<p>Pipeline artifacts are files created by GitLab after a pipeline finishes. </p>\n<ul>\n<li>Pipeline artifacts are different to job artifacts because they are not explicitly managed by <code>.gitlab-ci.yml</code> definitions.</li>\n</ul>\n<p>ex. Pipeline artifacts are used by the <a href=\"https://docs.gitlab.com/ee/user/project/merge_requests/test_coverage_visualization.html\">test coverage visualization feature</a> to collect coverage information. It uses the artifacts: reports CI/CD keyword.</p>\n<p>The latest pipeline artifacts are kept forever. Once a new one comes in, old ones will live on for 7 days after creation date.</p>","noteIndex":{"id":"olZIVfSs2uLLr3BppFh4K","title":"Root","desc":"","updated":1618676699718,"created":1615482407722,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"777fb4dab9bcf63cbfe772245d7e4871","links":[],"anchors":{"digital-garden":{"type":"header","text":"Digital Garden","value":"digital-garden","line":8,"column":0,"depth":1}},"children":["zFMjbn3xihVNHjUIdZCD1","IK6NOKemuDjhfstJBovKL","RS8qp1GxwtiJopCUHTTtq","ZaTr28eWk1DrXOEsc1YVb","Vi0WYVLZunVM9iR8XZJn3","ngAbg7gluvbt1bY1UIRsi","RCPPXSakm5TvKka8kOmVp","MPx8ykTP57I40WTZvTP7f","ZU5WmdTG1bHoE8RcmZXZG","jqWiyYJff92RjXuUQt9PQ","KihijM8OQvZ4pASkkhqzL","F9vyqvls3OBCujtukqKhy","facc2b01-755a-409f-99f6-57bef2d1501f","m5ov42Vm6mR7RQWTvl1NW","YYt62mSW964cwb5nP0hva","PZxxZ4iESzSlbbHJKxuAZ","UDu62Pa6BaRqlG8uGoMhy","nMCtMXVvjBsJk3iw1zoIO","ANfx9Z4a6ZA0uJuSHtbIJ","BkG557LKUYbH1DnxprEVT","1TaH8zDTM98FZ9SYaeXLM","dc79799f-a55d-48ab-a8be-c48adb1b19c0","f6feef57-b8f5-451f-a09a-7b63f6a07183","4sz47Y0LKs1Si73rWtyyh","5a9fb1df-478e-4687-9be0-5cb97e61ec57","1374e9e9-1cbc-4e1f-b1ca-66b8569533dd","f529cc34-aba0-45ca-ad7e-02ddda318941","0zcauha3il2NqtxZazIo7","9bbd6f68-03b2-41f4-92e4-2ca313e8b450","5a2ab598-fa7e-4471-8bda-9f5831b679ae","uV6w4mZPoohWyZV4Xaad0","RgE0mZLaUjPftFPZsiAoe","mytCOts26Pidush65tdRW","fwUzxfLSPMH1eL8oBoLWx","TbW7PM9bg1y5TGkiWwQ8b","xiSIDeEtIc8X0lpUQlppI","0jxgntiLNHWFuCbzqtFGF","GkdMprLUe4QQULBxmGN6V","4SYc6v5hxY5g6Ip6kjpwO","fqVQpS9FBiXgKsZX3R3sJ","L5JUZlGAGvTxrsEBB7DY8","963c4b54-02bd-4943-a15f-52cf59ffd0f4","TeTedoeS2LdHPR632eCpM","e65188a1-177e-4ab2-99f9-75f85d537621","fajYnbVhCRDi74xn0H30R","bArGdGwqo3iFkyKMyE7qR","4Dcp7gbEVoLLgfu7bXFai","5d700782-fb81-416e-83f9-5dd88260e350","zubgzhNFE6KlTgXcjTz6O","8lpdfWa0cbSq1XJQbcYcY","17I8ZksXvqCH1mRtZDjHp","kF916Ow84qpJJeMRkWMIo","tMLkLcrIHHBz56xVmBLkP","CSePBQ6q7qhowKESqVwt7","laZ4OfLhZNK1Kuy6GaWUr","z5IJblOknQhMzZ5QZh4ye","N36FHxfxzwJfxDY3miWyX","3bb25f58-2b50-4fa3-af55-48ea9f88a081","aOqNcxZh8qN4MoBJcvGTc","u93Rz4fEWGu6VBR30Zraf","9hjMHnKvYT4jLKvuDSXaV","LgW7mTIALODoXc54B3p6S","UYPxfHBFWX7fb6hHU5bB6","qxSOd6SPN8qf9ZUojVFDX","WQoMTf6VXBaxCgksXAVsj","2Mw4XgfyCHXHNOX5yoCIY","UFrwsXzC1yr7Ge8FF8Vbo","a8edc4ac-028b-40ec-872a-e4a005b04b2a","0XJqmcdtcMZu66glBI5O8","lK8r8BXS4ThiUTe4xKIZe","93de42ca-53ea-460a-baa7-b9ec5c47cb1e","Rxs2jaGpdFzqYtP7lAJFJ","aO8W81Z0PyIb6Hs7nOHPW","I01hENHnh8Tqu3Ok8sLzG","evqsPNutOaZ8hcBCqxFQu","zhhxcjZUHdU8uRLwGb9Zh","G1aFACZB2ooWGMGwyd3ZW","YWy1C4tgoaCcw1m8JJsr7","Szj3o5iaNxPpesiCqwrbu","XhvCDW3fIw6h6MhY5ticq","Q70g7SusFZBQXzkuQifv4","AzfWDH3wp7jFpL2EYxBcW","y0fwpZ9qMqirsLiFyOciU","ZF8xj8wwDUqKlrwTrCFZ1","tAJvhqhdfyZZa87QHq1TU","4hRmipi8lxpBLyzWu5JVB","iTg0C7QjvnmqBZeEigJNs","3babc3d2-79ae-470a-9c06-ab8bba2e684e","bF3UsMFya3fMeXWDspVov","ULkfbL9WpktbVYnzhl6Jw","PpNOO8JYWe6dM8wruSa7x","di40pCxDn7IiqE8lFdD46","rmW0mkerqV35I8QPji6lM","3IFIK1ByzeIxZCByryGLN","iImkYAKfkw3beAl6pLbDn","tho65KN0ZpjQlVvP1fEzM","ecDe8DNWrkeQTwpTEvHje","Yqhdd9mSJGN7OJOeyoSD2","NEhsoOfR7J6o01ielAuUm","Ws5tah8tpeyn9tK8VBTg8","Bqpifx2HX3vjLhX9yvhTV","gWAg15uBJgkS2B0wcpMAa","l7V3v2ep1YdDCt7DOr7Ci","yM2PJBdqJnHpD63cPA6sW","qn0bre7eLbi3QMbCfWkUi","fSu0KxFL41IRouotqmbHs","0gtg24Mj1a1bQFPRGQNlO","7iQPBMltLPLbFEz2qbjPu","yoh4pwoXcfELInGKRdYf6","dCGCWXgAmiOZXbdULT1m6","jMavlje07sNa6hSEIE8WA","Xxm0JE4dKHxrQAaZfzvxD","PAEBZCyFBZJyR7OoMZ41E","PQ6km8RgRCuyICBPOYz8f","2bhftt8rGuxYu4pFgNqru","hjYIZpHQWuXfeEoGeJEKW","K2M9bQqVq2eQfm29eslKL","X8obW1iKwYsvNgKWGyCzy","yJwSC7hqYIezTFHf5i0Ev","c4Z7ETcOHUILRMH32Sfjw","qiR6dIu857b9M9kTqjOyK","8vflbCVkwZtYcqdDDTNAz","Ku1OgHMhELajzo61Gx7ye","LUrfhDWo8wuwZu7CN9TV8","osu6JGOnvXJ5gt3tpqWZY","1a6173cd-cf13-4b34-a522-8350bf9a364f","ZgCUp366YrF2Tyky2NT73","S2sBltrPfd8a7ICuD7CuH","oWCuBXOg6JWfZzjmKxmNl","jOmhZ8ovLYTPbpM1vqSDx","FraC6xzLy1ei91l1ICyc9","6ceBas2RE9Q4787GDngH7","734cd78d-0bc9-426b-803d-1efc84dfffe5","k4Bb09px6r0FxIRs49SXV","oaG3H1S9IUBO644nGZigu","Ka7agQJkUMRSWN0uFdkWK","si3z090WsiLasMhJBa1Az","ljKAVERmdEiKLK9hXGKBm","LIcuGYV0DDt1VWbvH6Sed","MgUSrpNCIwDOW4fX3vPOF","bZumdyapJ2H0wWWOmJ45i","QHXEIyeZGIGMVi5Q52UWI","i5Fya3Vzzm0rBT0ctByuo"],"parent":null,"data":{},"body":"\n# Digital Garden\n\nThis Wiki of Personal Information is organized according to domains and their\nsub-domains, along with specific implementation of those domains.\n\nFor instance, Git itself is a domain. Sub-domains of Git, would be `commit`,\n`tags`, `reflog` etc. implementations of each of those could be `cli`, `strat`\n(strategies), `inner` etc.\n\nThe goal of the wiki is to present data in a manner that is from the perspective\nof a querying user. Here, a user is a programmer wanting to get key information\nfrom a specific domain. For instance, if a user wants to use postgres functions\nand hasn't done them in a while, they should be able to query\n`postgres.functions` to see what information is available to them.\n\nThis wiki has been written with myself in mind. While learning each of these\ndomains, I have been sensitive to the \"aha\" moments and have noted down my\ninsights as they arose. I have refrained from capturing information that I\nconsidered obvious or otherwise non-beneficial to my own understanding.\n\nThe ability I hope to gain from this wiki is the ability to step away from any\ngiven domain for a long period of time, and be able to be passably useful for\nwhatever my goals are within a short period of time. Of course, this is all\nvague sounding, and really depends on the domain, along with the ends I am\ntrying to reach.\n\nTo achieve this, the system should be steadfast to:\n- be able to put information in relatively easily, without too much thought\n\trequired to make that determination.\n- be able to extract the information that we need, meaning there is a\n\thigh-degree in confidence in the location of the information. The idea is\n\tthat information loses a large amount of its value when it is unfindable.\n\tTherefore, a relatively strict ideology should be used when determining\n\twhere a piece of information belongs.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":3,"useFMTitle":true,"useNoteTitleForLink":true,"noLegacyNoteRef":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"assetsPrefix":"/Digital-Garden","siteUrl":"https://tycholiz.github.io","copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"Dendron","description":"Publishable tech notes","duplicateNoteBehavior":{"action":"useVault","payload":["tech"]},"siteLastModified":true,"gh_edit_branch":"main","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{}},"workspace":{"dendronVersion":"0.67.1","vaults":[{"fsPath":"../main/tech","name":"tech"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"enableUserTags":true,"enableHashTags":true},"usePrettyRefs":true}},"__N_SSG":true}