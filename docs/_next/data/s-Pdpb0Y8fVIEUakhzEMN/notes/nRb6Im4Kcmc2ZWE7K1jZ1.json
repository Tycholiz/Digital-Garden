{"pageProps":{"note":{"id":"nRb6Im4Kcmc2ZWE7K1jZ1","title":"Serverlesss Framework","desc":"","updated":1641319007631,"created":1637700703673,"custom":{},"fname":"deploy.serverless.framework","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"cce05f0ec460e1fc00a066b2dd8245c8","links":[{"type":"wiki","from":{"fname":"deploy.serverless.framework","id":"nRb6Im4Kcmc2ZWE7K1jZ1","vaultName":"tech"},"value":"aws.svc.lambda","alias":"Lambda","position":{"start":{"line":7,"column":40,"offset":327},"end":{"line":7,"column":65,"offset":352},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.lambda"}},{"type":"wiki","from":{"fname":"deploy.serverless.framework","id":"nRb6Im4Kcmc2ZWE7K1jZ1","vaultName":"tech"},"value":"aws.svc.event-bridge","alias":"event bus","position":{"start":{"line":8,"column":79,"offset":462},"end":{"line":8,"column":113,"offset":496},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.event-bridge"}},{"type":"wiki","from":{"fname":"deploy.serverless.framework","id":"nRb6Im4Kcmc2ZWE7K1jZ1","vaultName":"tech"},"value":"aws.svc.cloud-formation","alias":"CloudFormation","position":{"start":{"line":12,"column":227,"offset":947},"end":{"line":12,"column":269,"offset":989},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.cloud-formation"}},{"type":"wiki","from":{"fname":"deploy.serverless.framework","id":"nRb6Im4Kcmc2ZWE7K1jZ1","vaultName":"tech"},"value":"aws.svc.S3","alias":"S3","position":{"start":{"line":14,"column":111,"offset":1289},"end":{"line":14,"column":128,"offset":1306},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.S3"}},{"type":"wiki","from":{"fname":"deploy.serverless.framework","id":"nRb6Im4Kcmc2ZWE7K1jZ1","vaultName":"tech"},"value":"aws.CDK","alias":"CDK","position":{"start":{"line":37,"column":7,"offset":2390},"end":{"line":37,"column":22,"offset":2405},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.CDK"}},{"from":{"fname":"gitlab.CI-CD.artifact","vaultName":"tech"},"type":"backlink","position":{"start":{"line":50,"column":22,"offset":1470},"end":{"line":50,"column":74,"offset":1522},"indent":[]},"value":"deploy.serverless.framework"}],"anchors":{"":{"type":"header","text":"","value":"","line":23,"column":0,"depth":3},"-1":{"type":"header","text":"","value":"-1","line":26,"column":0,"depth":4},"stage":{"type":"header","text":"Stage","value":"stage","line":38,"column":0,"depth":3},"alternatives":{"type":"header","text":"Alternatives","value":"alternatives","line":41,"column":0,"depth":3},"example":{"type":"header","text":"Example","value":"example","line":46,"column":0,"depth":2}},"children":[],"parent":"aOfHQ6odySXLBhQgkOtOp","data":{}},"body":"<h1 id=\"serverlesss-framework\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#serverlesss-framework\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Serverlesss Framework</h1>\n<p>The idea with Serverless Framework is \"let's think of our application in terms of events and functions. We recognize when events happen, and we know which functions to run when they do.\"</p>\n<p>Serverless is an IaC tool</p>\n<p>To accomplish this philosophy, the framework defined a <code>serverless.yml</code></p>\n<ul>\n<li>handles the logic of which function (<a href=\"/Digital-Garden/notes/OSdV9FvBG3wDbRNLllg0V\">Lambda</a>) to call, and when to call it.\n<ul>\n<li>ex. we made decide to call that function when a particular event enters an <a href=\"/Digital-Garden/notes/7n3tUhrwbvz8nNu0bTlWz\">event bus</a>. In this case, all we need to do in the <code>serverless.yml</code> is to specify the aws resourceId (ARN) of the event bus, and it will be subscribed to.</li>\n</ul>\n</li>\n</ul>\n<p>Serverless framework is cloud-provider agnostic; all examples just assume AWS</p>\n<p>What the Serverless framework does is that it automates the process of creating all the necessary services on the cloud provider. Once you run sls deploy the config file, which is called <code>serverless.yml</code> is transformed into a <a href=\"/Digital-Garden/notes/NbGOJJpZuEbf0hXs2UvAB\">CloudFormation</a> template.</p>\n<ul>\n<li>once the <code>serverless.yml</code> has been transformed into a CloudFormation template it gets sent to AWS to create the services you specified; all API Gateway routes, all Lambdas etc.</li>\n<li>Apart from that, the Serverless framework also packages up all the code you have written and sends it to an <a href=\"/Digital-Garden/notes/2Rtof8yGX9K2Tq6tLljBb\">S3</a> bucket.\n<ul>\n<li>This bucket will have all the versions of the code you have ever deployed. Effectively, the Serverless framework grabs the latest version from the bucket and sends it to the Lambda it created.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"serverlessyml\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#serverlessyml\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a><code>serverless.yml</code></h3>\n<p>The yml file is a configuration file that declaratively describes all the necessary services that should be deployed to the cloud provider.</p>\n<h4 id=\"functions\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#functions\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a><code>functions</code></h4>\n<p>Each function in this object basically says: \"when an event comes through with these header properties, run this function.\"</p>\n<hr>\n<p>The serverless framework is just one of many ways to use serverless architectures. Alternatives include:</p>\n<ul>\n<li>Managing lambdas yourself in AWS's console (or equivalent for other platforms like Azure, etc)</li>\n<li>Building &#x26; deploying your application with chalice AWS Lambda &#x26; Python ONLY</li>\n<li>deploying your application with apex (AWS ONLY)</li>\n<li>deploy a traditional Python WSGI app to AWS using Zappa</li>\n<li>lots of other options.</li>\n</ul>\n<h3 id=\"stage\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#stage\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Stage</h3>\n<p>using this to map to environments, resulting in a different environment variables that we have our build in.</p>\n<h3 id=\"alternatives\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#alternatives\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Alternatives</h3>\n<ul>\n<li>AWS SAM</li>\n<li>AWS <a href=\"/Digital-Garden/notes/KutlqQVGLBAdLTslz3D9A\">CDK</a>\n<ul>\n<li>essentially the same thing, but using a code language instead of Yaml</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"example\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#example\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Example</h2>\n<p>serverless.yml</p>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span> The name of my app\n\n<span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> aws\n\t<span class=\"token key atrule\">runtime</span><span class=\"token punctuation\">:</span> nodejs14.x\n\n<span class=\"token key atrule\">functions</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">MyLambda</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> src/my<span class=\"token punctuation\">-</span>lambda.handler\n\t\t<span class=\"token key atrule\">events</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n\t\t\t\t<span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> hello/world\n\t\t\t\t<span class=\"token key atrule\">method</span><span class=\"token punctuation\">:</span> get\n</code></pre>\n<p>src/my-lambda.ts</p>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> <span class=\"token maybe-class-name\">APIGatewayProxyEvent</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'aws-lambda'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> <span class=\"token maybe-class-name\">APIGatewayProxyEvent</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n\t\tstatusCode<span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n\t\tbody<span class=\"token operator\">:</span> <span class=\"token string\">'Hello world'</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>Then run <code>serverless deploy</code></p>\n<hr>\n<h2 id=\"backlinks\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#backlinks\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Backlinks</h2>\n<ul>\n<li><a href=\"/Digital-Garden/notes/jqIxYA4fpGL6wIKJNkovK\">artifact</a></li>\n</ul>","noteIndex":{"id":"olZIVfSs2uLLr3BppFh4K","title":"Root","desc":"","updated":1618676699718,"created":1615482407722,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"777fb4dab9bcf63cbfe772245d7e4871","links":[],"anchors":{"digital-garden":{"type":"header","text":"Digital Garden","value":"digital-garden","line":8,"column":0,"depth":1}},"children":["zFMjbn3xihVNHjUIdZCD1","IK6NOKemuDjhfstJBovKL","RS8qp1GxwtiJopCUHTTtq","ZaTr28eWk1DrXOEsc1YVb","Vi0WYVLZunVM9iR8XZJn3","ngAbg7gluvbt1bY1UIRsi","RCPPXSakm5TvKka8kOmVp","MPx8ykTP57I40WTZvTP7f","ZU5WmdTG1bHoE8RcmZXZG","jqWiyYJff92RjXuUQt9PQ","KihijM8OQvZ4pASkkhqzL","F9vyqvls3OBCujtukqKhy","facc2b01-755a-409f-99f6-57bef2d1501f","m5ov42Vm6mR7RQWTvl1NW","YYt62mSW964cwb5nP0hva","PZxxZ4iESzSlbbHJKxuAZ","UDu62Pa6BaRqlG8uGoMhy","nMCtMXVvjBsJk3iw1zoIO","ANfx9Z4a6ZA0uJuSHtbIJ","BkG557LKUYbH1DnxprEVT","1TaH8zDTM98FZ9SYaeXLM","dc79799f-a55d-48ab-a8be-c48adb1b19c0","f6feef57-b8f5-451f-a09a-7b63f6a07183","4sz47Y0LKs1Si73rWtyyh","5a9fb1df-478e-4687-9be0-5cb97e61ec57","1374e9e9-1cbc-4e1f-b1ca-66b8569533dd","f529cc34-aba0-45ca-ad7e-02ddda318941","0zcauha3il2NqtxZazIo7","9bbd6f68-03b2-41f4-92e4-2ca313e8b450","5a2ab598-fa7e-4471-8bda-9f5831b679ae","uV6w4mZPoohWyZV4Xaad0","RgE0mZLaUjPftFPZsiAoe","mytCOts26Pidush65tdRW","fwUzxfLSPMH1eL8oBoLWx","TbW7PM9bg1y5TGkiWwQ8b","xiSIDeEtIc8X0lpUQlppI","0jxgntiLNHWFuCbzqtFGF","GkdMprLUe4QQULBxmGN6V","4SYc6v5hxY5g6Ip6kjpwO","fqVQpS9FBiXgKsZX3R3sJ","L5JUZlGAGvTxrsEBB7DY8","963c4b54-02bd-4943-a15f-52cf59ffd0f4","TeTedoeS2LdHPR632eCpM","e65188a1-177e-4ab2-99f9-75f85d537621","fajYnbVhCRDi74xn0H30R","bArGdGwqo3iFkyKMyE7qR","4Dcp7gbEVoLLgfu7bXFai","5d700782-fb81-416e-83f9-5dd88260e350","zubgzhNFE6KlTgXcjTz6O","8lpdfWa0cbSq1XJQbcYcY","17I8ZksXvqCH1mRtZDjHp","kF916Ow84qpJJeMRkWMIo","tMLkLcrIHHBz56xVmBLkP","CSePBQ6q7qhowKESqVwt7","laZ4OfLhZNK1Kuy6GaWUr","z5IJblOknQhMzZ5QZh4ye","N36FHxfxzwJfxDY3miWyX","3bb25f58-2b50-4fa3-af55-48ea9f88a081","aOqNcxZh8qN4MoBJcvGTc","u93Rz4fEWGu6VBR30Zraf","9hjMHnKvYT4jLKvuDSXaV","LgW7mTIALODoXc54B3p6S","UYPxfHBFWX7fb6hHU5bB6","qxSOd6SPN8qf9ZUojVFDX","WQoMTf6VXBaxCgksXAVsj","2Mw4XgfyCHXHNOX5yoCIY","UFrwsXzC1yr7Ge8FF8Vbo","a8edc4ac-028b-40ec-872a-e4a005b04b2a","0XJqmcdtcMZu66glBI5O8","lK8r8BXS4ThiUTe4xKIZe","93de42ca-53ea-460a-baa7-b9ec5c47cb1e","Rxs2jaGpdFzqYtP7lAJFJ","aO8W81Z0PyIb6Hs7nOHPW","I01hENHnh8Tqu3Ok8sLzG","evqsPNutOaZ8hcBCqxFQu","zhhxcjZUHdU8uRLwGb9Zh","G1aFACZB2ooWGMGwyd3ZW","YWy1C4tgoaCcw1m8JJsr7","Szj3o5iaNxPpesiCqwrbu","XhvCDW3fIw6h6MhY5ticq","Q70g7SusFZBQXzkuQifv4","AzfWDH3wp7jFpL2EYxBcW","y0fwpZ9qMqirsLiFyOciU","ZF8xj8wwDUqKlrwTrCFZ1","tAJvhqhdfyZZa87QHq1TU","4hRmipi8lxpBLyzWu5JVB","iTg0C7QjvnmqBZeEigJNs","3babc3d2-79ae-470a-9c06-ab8bba2e684e","bF3UsMFya3fMeXWDspVov","ULkfbL9WpktbVYnzhl6Jw","PpNOO8JYWe6dM8wruSa7x","di40pCxDn7IiqE8lFdD46","rmW0mkerqV35I8QPji6lM","3IFIK1ByzeIxZCByryGLN","iImkYAKfkw3beAl6pLbDn","tho65KN0ZpjQlVvP1fEzM","ecDe8DNWrkeQTwpTEvHje","Yqhdd9mSJGN7OJOeyoSD2","NEhsoOfR7J6o01ielAuUm","Ws5tah8tpeyn9tK8VBTg8","Bqpifx2HX3vjLhX9yvhTV","gWAg15uBJgkS2B0wcpMAa","l7V3v2ep1YdDCt7DOr7Ci","yM2PJBdqJnHpD63cPA6sW","qn0bre7eLbi3QMbCfWkUi","fSu0KxFL41IRouotqmbHs","0gtg24Mj1a1bQFPRGQNlO","7iQPBMltLPLbFEz2qbjPu","yoh4pwoXcfELInGKRdYf6","dCGCWXgAmiOZXbdULT1m6","jMavlje07sNa6hSEIE8WA","Xxm0JE4dKHxrQAaZfzvxD","PAEBZCyFBZJyR7OoMZ41E","PQ6km8RgRCuyICBPOYz8f","2bhftt8rGuxYu4pFgNqru","hjYIZpHQWuXfeEoGeJEKW","K2M9bQqVq2eQfm29eslKL","X8obW1iKwYsvNgKWGyCzy","yJwSC7hqYIezTFHf5i0Ev","c4Z7ETcOHUILRMH32Sfjw","qiR6dIu857b9M9kTqjOyK","8vflbCVkwZtYcqdDDTNAz","Ku1OgHMhELajzo61Gx7ye","LUrfhDWo8wuwZu7CN9TV8","osu6JGOnvXJ5gt3tpqWZY","1a6173cd-cf13-4b34-a522-8350bf9a364f","ZgCUp366YrF2Tyky2NT73","S2sBltrPfd8a7ICuD7CuH","oWCuBXOg6JWfZzjmKxmNl","jOmhZ8ovLYTPbpM1vqSDx","FraC6xzLy1ei91l1ICyc9","6ceBas2RE9Q4787GDngH7","734cd78d-0bc9-426b-803d-1efc84dfffe5","k4Bb09px6r0FxIRs49SXV","oaG3H1S9IUBO644nGZigu","Ka7agQJkUMRSWN0uFdkWK","si3z090WsiLasMhJBa1Az","ljKAVERmdEiKLK9hXGKBm","LIcuGYV0DDt1VWbvH6Sed","MgUSrpNCIwDOW4fX3vPOF","bZumdyapJ2H0wWWOmJ45i","QHXEIyeZGIGMVi5Q52UWI","i5Fya3Vzzm0rBT0ctByuo"],"parent":null,"data":{},"body":"\n# Digital Garden\n\nThis Wiki of Personal Information is organized according to domains and their\nsub-domains, along with specific implementation of those domains.\n\nFor instance, Git itself is a domain. Sub-domains of Git, would be `commit`,\n`tags`, `reflog` etc. implementations of each of those could be `cli`, `strat`\n(strategies), `inner` etc.\n\nThe goal of the wiki is to present data in a manner that is from the perspective\nof a querying user. Here, a user is a programmer wanting to get key information\nfrom a specific domain. For instance, if a user wants to use postgres functions\nand hasn't done them in a while, they should be able to query\n`postgres.functions` to see what information is available to them.\n\nThis wiki has been written with myself in mind. While learning each of these\ndomains, I have been sensitive to the \"aha\" moments and have noted down my\ninsights as they arose. I have refrained from capturing information that I\nconsidered obvious or otherwise non-beneficial to my own understanding.\n\nThe ability I hope to gain from this wiki is the ability to step away from any\ngiven domain for a long period of time, and be able to be passably useful for\nwhatever my goals are within a short period of time. Of course, this is all\nvague sounding, and really depends on the domain, along with the ends I am\ntrying to reach.\n\nTo achieve this, the system should be steadfast to:\n- be able to put information in relatively easily, without too much thought\n\trequired to make that determination.\n- be able to extract the information that we need, meaning there is a\n\thigh-degree in confidence in the location of the information. The idea is\n\tthat information loses a large amount of its value when it is unfindable.\n\tTherefore, a relatively strict ideology should be used when determining\n\twhere a piece of information belongs.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":3,"useFMTitle":true,"useNoteTitleForLink":true,"noLegacyNoteRef":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"assetsPrefix":"/Digital-Garden","siteUrl":"https://tycholiz.github.io","copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"Dendron","description":"Publishable tech notes","duplicateNoteBehavior":{"action":"useVault","payload":["tech"]},"siteLastModified":true,"gh_edit_branch":"main","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{}},"workspace":{"dendronVersion":"0.67.1","vaults":[{"fsPath":"../main/tech","name":"tech"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"enableUserTags":true,"enableHashTags":true},"usePrettyRefs":true}},"__N_SSG":true}