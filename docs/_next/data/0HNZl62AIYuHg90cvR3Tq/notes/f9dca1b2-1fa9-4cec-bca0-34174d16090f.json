{"pageProps":{"note":{"id":"f9dca1b2-1fa9-4cec-bca0-34174d16090f","title":"Json","vault":{"fsPath":"../main/tech","name":"tech"},"type":"note","desc":"","links":[],"anchors":{"row_to_json":{"type":"header","text":"row_to_json","value":"row_to_json","line":8,"column":0},"array_agg":{"type":"header","text":"array_agg","value":"array_agg","line":16,"column":0},"json_agg":{"type":"header","text":"json_agg","value":"json_agg","line":27,"column":0},"json_build_object":{"type":"header","text":"json_build_object","value":"json_build_object","line":61,"column":0},"json_strip_nulls":{"type":"header","text":"json_strip_nulls","value":"json_strip_nulls","line":84,"column":0},"json_populate_record":{"type":"header","text":"json_populate_record","value":"json_populate_record","line":91,"column":0},"jsonb_pretty":{"type":"header","text":"jsonb_pretty","value":"jsonb_pretty","line":95,"column":0},"jsonb-manipulation-methods":{"type":"header","text":"jsonb manipulation methods","value":"jsonb-manipulation-methods","line":98,"column":0},"jsonb_set--jsonb_insert":{"type":"header","text":"jsonb_set & jsonb_insert","value":"jsonb_set--jsonb_insert","line":100,"column":0},"jsonb_insert":{"type":"header","text":"jsonb_insert","value":"jsonb_insert","line":110,"column":0}},"fname":"pg.lang.func.agg.json","updated":1621351780192,"created":1621351748155,"parent":"4780a23f-7e92-4f4c-ae85-ac5f6fe6c02c","children":[],"data":{},"contentHash":"fe4f4e857d0bc2d7358178afd1508d71","custom":{}},"body":"<h1 id=\"json\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#json\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Json</h1>\n<h3 id=\"row_to_json\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#row_to_json\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>row_to_json</h3>\n<p>turns the table into json</p>\n<ul>\n<li>each row becomes a json object, and the cumulative of these rows makes up the json array</li>\n<li>If the query <code>select * from nugget</code> gives us the data, then the whole below query gives us that same data as json</li>\n</ul>\n<pre><code>select row_to_json(nugget)\nfrom (select * from \"nugget\") as nugget\n</code></pre>\n<h3 id=\"array_agg\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#array_agg\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>array_agg</h3>\n<p>It aggregates its argument into a PostgreSQL array</p>\n<ul>\n<li>accepts a set of values and returns an array. Each arg becomes an element in the array\n<ul>\n<li>we can determine the order of the array with ORDER BY</li>\n</ul>\n</li>\n<li>ex. Imagine we had 2 many:many tables (<code>actors</code> and <code>movies</code>) connected through a junction table <code>movies_actors</code>.\n<pre><code>- We are interested in viewing which actors were in which movie.\n- Assuming that the `movies` table is the table we are joining from, if we were to query the movies, we'd get duplicate rows with the same movie and actor names (since each row is a combination of the two, effectively having the same amount of rows as the junction table).\n</code></pre>\n<img src=\"/Digital-Garden/:/20ede76c8a314c528f1b4716c372db0d\" alt=\"d26ee15403ed820f7c410d859e7c5e56.png\">\n<pre><code>- What we want instead is to show a different movie in each row, and consolidate the actors appearing in that movie into an array\n</code></pre>\n<img src=\"/Digital-Garden/:/9d7a1c247b064dc285cd0597a477d28a\" alt=\"939e260f1cc0aab3f7f7e6477164e5ac.png\"></li>\n</ul>\n<h3 id=\"json_agg\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#json_agg\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>json_agg</h3>\n<ul>\n<li>similar to <code>array_agg</code>, except that it puts the elements into a json array</li>\n<li>we could use <code>json_agg(json_build_object())</code> if we wanted to build an array of objects</li>\n</ul>\n<p>Before</p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">Select</span>\n    title<span class=\"token punctuation\">,</span>\n    first_name <span class=\"token operator\">||</span> <span class=\"token string\">' '</span> <span class=\"token operator\">||</span> last_name <span class=\"token keyword\">as</span> name\n<span class=\"token keyword\">from</span> film\n<span class=\"token keyword\">join</span> film_actor <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span>film_id<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">join</span> actor <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span>actor_id<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> title<span class=\"token punctuation\">,</span> first_name<span class=\"token punctuation\">,</span> last_name\n<span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> title<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>After</p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n     title<span class=\"token punctuation\">,</span>\n     ARRAY_AGG <span class=\"token punctuation\">(</span>\n\t     first_name <span class=\"token operator\">||</span> <span class=\"token string\">' '</span> <span class=\"token operator\">||</span> last_name\n\t     <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> first_name\n     <span class=\"token punctuation\">)</span> actors\n <span class=\"token keyword\">FROM</span>\n     film\n <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> film_actor <span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span>film_id<span class=\"token punctuation\">)</span>\n <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> actor <span class=\"token keyword\">USING</span> <span class=\"token punctuation\">(</span>actor_id<span class=\"token punctuation\">)</span>\n <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span>\n     title\n <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span>\n     title<span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"json_build_object\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#json_build_object\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>json_build_object</h3>\n<p>Allows us to provide key-value pairs, thereby returning us an object</p>\n<ul>\n<li>if we want to provide an array as the value of a key (ex. <code>buckets</code> property of a <code>nuggets</code> object), we can provide a SELECT statement in place of the value</li>\n</ul>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n    json_build_object<span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span>id<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'comments'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">SELECT</span> json_agg<span class=\"token punctuation\">(</span>json_build_object<span class=\"token punctuation\">(</span>\n                <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> comments<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'mood'</span><span class=\"token punctuation\">,</span> comments<span class=\"token punctuation\">.</span>mood<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'subject'</span><span class=\"token punctuation\">,</span> comments<span class=\"token punctuation\">.</span>subject<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'content'</span><span class=\"token punctuation\">,</span> comments<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">,</span>\n                <span class=\"token string\">'created_at'</span><span class=\"token punctuation\">,</span> comments<span class=\"token punctuation\">.</span>created_at\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">FROM</span> user_comment_map <span class=\"token keyword\">JOIN</span> comments <span class=\"token keyword\">ON</span> comment_id<span class=\"token operator\">=</span>comments<span class=\"token punctuation\">.</span>id\n            <span class=\"token keyword\">WHERE</span> user_id<span class=\"token operator\">=</span>users<span class=\"token punctuation\">.</span>id\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n</code></pre>\n<p>this works because</p>\n<h3 id=\"json_strip_nulls\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#json_strip_nulls\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>json_strip_nulls</h3>\n<ul>\n<li>lets us exclude fields where the value is null</li>\n</ul>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> json_strip_nulls<span class=\"token punctuation\">(</span>json_build_object<span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token string\">'birthday'</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>birthday<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> person p<span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"json_populate_record\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#json_populate_record\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>json_populate_record</h3>\n<ul>\n<li>allows us to give postgres a string of json, which it will then convert into SQL row-format.</li>\n<li>the first arg we pass to</li>\n</ul>\n<h3 id=\"jsonb_pretty\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#jsonb_pretty\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>jsonb_pretty</h3>\n<p>print json pretty in output</p>\n<h2 id=\"jsonb-manipulation-methods\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#jsonb-manipulation-methods\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>jsonb manipulation methods</h2>\n<h3 id=\"jsonb_set--jsonb_insert\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#jsonb_set--jsonb_insert\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>jsonb_set &#x26; jsonb_insert</h3>\n<p>With these methods, it is not possible to add values at the root of the json object.</p>\n<p>signature:</p>\n<pre><code>jsonb_set/jsonb_insert(target         jsonb,\n          path           text[],\n          new_value      jsonb,\n          create_missing boolean default true)\n</code></pre>\n<h4 id=\"jsonb_insert\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#jsonb_insert\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>jsonb_insert</h4>\n<p>Allows us to insert into JSON array (while preserving all of the original values)</p>","noteIndex":{"id":"0e1ca097-be9f-4e4c-a7ed-d6dfb05cd4e8","title":"Root","vault":{"fsPath":"../main/tech","name":"tech"},"type":"note","desc":"","links":[],"anchors":{"digital-garden":{"type":"header","text":"Digital Garden","value":"digital-garden","line":8,"column":0}},"fname":"root","updated":1618676699718,"created":1615482407722,"parent":null,"children":["723b0cf7-a5f3-4c71-a811-2c782faa4cc4","mcq7ZV8MBAMVYrXg","dMS8QtNyJCwovtfh6ERrp","ZaTr28eWk1DrXOEsc1YVb","WH8jEz5lviqlnG5f","a19c5ab0-fd8c-4bd0-9aed-da5abefabc45","4586ac41-3af7-4176-aaf0-440ad1773bc9","610b951b-7363-471f-acd5-210710b9d104","f29f31f3-7235-41ad-83a1-b64f3f466916","3445f14b-9f67-412d-9762-dc14ee7c90e4","c3304982-eb1c-45ec-8556-4599d2286b5c","facc2b01-755a-409f-99f6-57bef2d1501f","b965d9fa-c200-4a8d-9323-73b9c2565812","4d5aab64-f4a4-40a0-9155-f28aaf49d38a","a95e8592-84c0-4698-a0d9-07e8e130b322","234faa4d-432f-43f4-99fb-08ac4c01bf9b","105fd41a-910d-4b94-8686-98c3933931f2","f3bcc3d9-7232-41f4-aaaf-86a99b56dc65","ANfx9Z4a6ZA0uJuSHtbIJ","4668ac41-f2d5-40c0-9144-efb456d8663b","j8xePJ5wfKsznvM5DP5q6","dc79799f-a55d-48ab-a8be-c48adb1b19c0","f6feef57-b8f5-451f-a09a-7b63f6a07183","12797f4e-92d0-447e-adc7-e5cb4ff4c883","5a9fb1df-478e-4687-9be0-5cb97e61ec57","1374e9e9-1cbc-4e1f-b1ca-66b8569533dd","f529cc34-aba0-45ca-ad7e-02ddda318941","0zcauha3il2NqtxZazIo7","9bbd6f68-03b2-41f4-92e4-2ca313e8b450","5a2ab598-fa7e-4471-8bda-9f5831b679ae","3b7ffbbf-762e-411f-8fad-5e2b1b95e384","81e5a201-c843-49d1-b291-f99d818cee0c","295ca45b-6851-4d38-9ecb-1d7e4a885849","vdjkh6890a6Ye6vvbN0CD","b3b7587a-fbd2-48a9-aef1-4efc90458e82","znCO2WghOAWC8nBGb4Ooa","7cc5d9c3-20d8-4fef-aca2-7d6dcdc7b3d7","f32fab12-3c92-4e91-8d61-01e17e734910","fqVQpS9FBiXgKsZX3R3sJ","53b47d5a-542b-4fab-8f6c-c70574ab7a48","963c4b54-02bd-4943-a15f-52cf59ffd0f4","739907b4-b36d-4ad1-866d-c9f8050de776","e65188a1-177e-4ab2-99f9-75f85d537621","fajYnbVhCRDi74xn0H30R","bArGdGwqo3iFkyKMyE7qR","ffYYlFAOinMkMeUg","5d700782-fb81-416e-83f9-5dd88260e350","w3MsVswhiuHRpAOQ","s2PhLzio3pcBg3bQ","d8118e61-b25f-4a6f-8f88-4e7ddd69827f","e1c5eaef-0205-4e6d-ab9f-5a207d58cc12","55a2161d-d415-4fbd-98cb-ff8aed19e6ee","67265fd9-7fbd-4bf7-b3c9-ced802b8a830","dvxpt2xKPsfCOTR4lY8Qp","a68b9a8c-a9c9-4133-8230-2671b2d8d86b","3bb25f58-2b50-4fa3-af55-48ea9f88a081","egctyVUjVesp2xA5t0ZYt","76420b75-f886-43ad-a876-c4fd4ad09ff2","1310c9cf-0160-4ad5-aad7-cf355c9313ac","6c54da8e-be6f-4ce3-b642-ef3108533df9","77ebb3d5-30b3-44e0-badc-02314bfd4f12","0e4f1336-2037-42e7-a854-054718e9359f","6412cc53-4648-46c1-8be6-c6d1c301baa1","c56bb2bc-4c2b-4bce-87e7-f1e655aa449a","UFrwsXzC1yr7Ge8FF8Vbo","a8edc4ac-028b-40ec-872a-e4a005b04b2a","38d933b3-770f-49df-b1ac-f2ae4f6061fd","vqPq_S-Il3EV72fUR41r6","93de42ca-53ea-460a-baa7-b9ec5c47cb1e","3bcd5b24-cdfa-45ad-b249-55ae92119ed3","aO8W81Z0PyIb6Hs7nOHPW","27f2c279-9420-4375-9487-5493c1dbbefc","Xt8o0SFdV1BIvmCKb1Ign","05537701-5721-425c-a0d5-8ec5da941220","1b6e8550-252e-4f9f-a586-05044cb97f0a","4866aa20-2068-47f0-afd1-c2b96a24f951","PXd6hUzi0wF7oPnT","f7c590dc-921d-4b6f-8f8e-e075b0c16035","f4355062-fdda-4c6f-a969-3f8a10c15475","c299d2dd-7cbd-4b81-976a-37b808ee41a8","9c56d34a-84ee-481e-ac5a-13fa56750a3c","60f0e948-b809-40de-aac1-180423cbebcd","dfab2e99-6155-482d-a598-8b8cc11f7ddc","e6ff7608-3de4-46e3-93a7-24ba07f70f42","bb4b4e79-9835-4284-bcac-d3de9b203e1a","3babc3d2-79ae-470a-9c06-ab8bba2e684e","4eeb4df6-2842-4db4-84ce-1992975f36a5","dff06309-f792-4ee2-a0ef-529972167027","d1aaf074-9c4c-4926-9106-44b71fd92529","20206ec8-0739-464e-b41d-65307a0c5aa6","3IFIK1ByzeIxZCByryGLN","0ba5c14a-800b-4614-ad5b-0ae7102e269e","db9cdb23-f02b-426c-b27e-baafb72916bd","7a81c659-7511-48c0-a78f-552d0e6cfff7","8e83deb1-8f7c-439e-b991-70e544645bfb","ubXzUle7zxv25VkjiLmpR","fb9dbfa7-978e-4f56-aeb7-3c97fb6c9e93","b6226bd4-551d-4670-a956-158bdce3f5a6","f691cb23-bc18-4b33-b454-155b1e785d62","a02e32ca-2839-46bc-a452-684f01a4e671","887233a2-8653-46ef-adce-2e482007942b","b6746509-f9f8-4823-b3b9-0d6d5f1fdb69","vlb4ItR9EQCCw9ACUA5h7","f39cc3a8-8357-49e5-8cdb-04450d05d913","1426c9b1-f3c1-4c01-8efd-a732c782c48c","dCGCWXgAmiOZXbdULT1m6","e02953c0-95d2-4101-a117-f8e0221800f0","GL8aMKtYOxcE560XF4HUK","9cc2f536-ad6d-49d2-bf6a-30284dfa1158","f9503aa6-bceb-4b11-89cd-d7e6f50d5cb0","e9bf14ec-5801-4be8-ba1e-3034dc742fa6","fee6c25b-8ea8-45bf-89d5-8c6d036b03b6","b28d278d-4fa0-4eac-9d26-dd6b10eb169d","yJwSC7hqYIezTFHf5i0Ev","5B2iI6ltu8TF5LJWAfXUE","4db45135-9630-4554-8ad4-6ca853621fca","MA3EsQQpV6iMx8j3hkJPK","84143a1b-aa79-40ff-bcae-6d9858fec127","osu6JGOnvXJ5gt3tpqWZY","1a6173cd-cf13-4b34-a522-8350bf9a364f","xRWsry32YkvSjs2Z","39SlH3nIiO6oQSwmZaMXT","TJrAQeEG6EjrEarYyIbYK","240d9848-b03d-445a-8787-090d79024b6a","5730411b-fefa-49e0-aced-451f5b148299","63a922b8-2d60-4ea7-9f47-bcfaa0caef7e","734cd78d-0bc9-426b-803d-1efc84dfffe5","3baf3651-9e5a-46bd-bba1-f0c0caf7385c","6733cf80-f2b1-41eb-8ddf-e2fa947f6b43","si3z090WsiLasMhJBa1Az","3577d6e8-1437-4f7b-9da2-c353ed232038"],"data":{},"contentHash":"b5a875cede0b3b4abe401df717960205","custom":{"nav_order":0,"permalink":"/"},"body":"\n# Digital Garden\n\nThis Wiki of Personal Information is organized according to domains and their\nsub-domains, along with specific implementation of those domains.\n\nFor instance, Git itself is a domain. Sub-domains of Git, would be `commit`,\n`tags`, `reflog` etc. implementations of each of those could be `cli`, `strat`\n(strategies), `inner` etc.\n\nThe goal of the wiki is to present data in a manner that is from the perspective\nof a querying user. Here, a user is a programmer wanting to get key information\nfrom a specific domain. For instance, if a user wants to use postgres functions\nand hasn't done them in a while, they should be able to query\n`postgres.functions` to see what information is available to them.\n\nThis wiki has been written with myself in mind. While learning each of these\ndomains, I have been sensitive to the aha moments and have noted down my\ninsights as they arose. I have refrained from capturing information that I\nconsidered obvious or otherwise non-beneficial to my own understanding.\n\nThe ability I hope to gain from this wiki is the ability to step away from any\ngiven domain for a long period of time, and be able to be passably useful for\nwhatever my goals are within a short period of time. Of course, this is all\nvague sounding, and really depends on the domain, along with the ends I am\ntrying to reach.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":3,"useFMTitle":true,"useNoteTitleForLink":true,"noLegacyNoteRef":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"assetsPrefix":"/Digital-Garden","siteUrl":"https://tycholiz.github.io","copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"Dendron","description":"Publishable tech notes","duplicateNoteBehavior":{"action":"useVault","payload":["tech"]},"siteLastModified":true,"gh_edit_branch":"main","usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{}},"workspace":{"dendronVersion":"0.67.1","vaults":[{"fsPath":"../main/tech","name":"tech"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"enableUserTags":true,"enableHashTags":true},"usePrettyRefs":true}},"__N_SSG":true}