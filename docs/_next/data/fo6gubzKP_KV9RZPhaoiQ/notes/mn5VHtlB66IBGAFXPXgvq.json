{"pageProps":{"note":{"id":"mn5VHtlB66IBGAFXPXgvq","title":"HTTP Methods","desc":"","updated":1699805362390,"created":1615528139803,"custom":{},"fname":"protocol.http.methods","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"c8061c386bb50fc88172574b3c976a8f","links":[{"type":"wiki","from":{"fname":"protocol.http.methods","id":"mn5VHtlB66IBGAFXPXgvq","vaultName":"tech"},"value":"general.terms.idempotent","alias":"main note","position":{"start":{"line":77,"column":1,"offset":3274},"end":{"line":77,"column":39,"offset":3312},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.terms.idempotent"}},{"from":{"fname":"api.REST","id":"vdrlg4e7sdnza4h5h9zythh","vaultName":"tech"},"type":"backlink","position":{"start":{"line":9,"column":246,"offset":610},"end":{"line":9,"column":283,"offset":647},"indent":[]},"value":"protocol.http.methods"},{"from":{"fname":"json.patch","id":"wgfov5g4fh7cnji0a1ho70c","vaultName":"tech"},"type":"backlink","position":{"start":{"line":5,"column":44,"offset":266},"end":{"line":5,"column":91,"offset":313},"indent":[]},"value":"protocol.http.methods"},{"from":{"fname":"web.api.fetch","id":"h160fafboo30ix91n52wfky","vaultName":"tech"},"type":"backlink","position":{"start":{"line":3,"column":5,"offset":74},"end":{"line":3,"column":37,"offset":106},"indent":[]},"value":"protocol.http.methods"}],"anchors":{"get":{"type":"header","text":"GET","value":"get","line":11,"column":0,"depth":2},"return-codes":{"type":"header","text":"Return codes","value":"return-codes","line":19,"column":0,"depth":3},"post":{"type":"header","text":"POST","value":"post","line":24,"column":0,"depth":2},"status-codes":{"type":"header","text":"Status codes","value":"status-codes","line":34,"column":0,"depth":3},"put":{"type":"header","text":"PUT","value":"put","line":40,"column":0,"depth":2},"status-codes-1":{"type":"header","text":"Status codes","value":"status-codes-1","line":50,"column":0,"depth":3},"patch":{"type":"header","text":"PATCH","value":"patch","line":55,"column":0,"depth":2},"status-codes-2":{"type":"header","text":"Status codes","value":"status-codes-2","line":61,"column":0,"depth":3},"delete":{"type":"header","text":"Delete","value":"delete","line":67,"column":0,"depth":2},"status-codes-3":{"type":"header","text":"Status codes","value":"status-codes-3","line":69,"column":0,"depth":3},"properties-of-http-methods":{"type":"header","text":"Properties of HTTP methods","value":"properties-of-http-methods","line":76,"column":0,"depth":2},"safe":{"type":"header","text":"Safe","value":"safe","line":77,"column":0,"depth":3},"idempotent":{"type":"header","text":"Idempotent","value":"idempotent","line":82,"column":0,"depth":3}},"children":[],"parent":"a6448e8a-d962-4e22-b70c-154121a95cd3","data":{}},"body":"<h1 id=\"http-methods\">HTTP Methods<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#http-methods\"></a></h1>\n<p>When deciding on which HTTP method to use, always consider it from the client's perspective.</p>\n<ul>\n<li>ex. if the UI of a webapp has an option to delete content, you may decide that your backend will only soft-delete that content (ie. it will keep the data in the database, but give it a flag such as <code>isDeleted: true</code>). This implementation detail is of no concern to the client, and therefore while we may be tempted to implement this functionality as a <code>PATCH</code> (since we are modifying data instead of actually deleting it), because the client has no knowledge of that, we should use the <code>DELETE</code> HTTP method.</li>\n</ul>\n<h2 id=\"get\">GET<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#get\"></a></h2>\n<ul>\n<li>GET requests can be cached</li>\n<li>GET requests remain in the browser history</li>\n<li>GET requests can be bookmarked</li>\n<li>GET requests should never be used when dealing with sensitive data</li>\n<li>GET requests have length restrictions</li>\n<li>GET requests should be used only to retrieve data</li>\n</ul>\n<h3 id=\"return-codes\">Return codes<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#return-codes\"></a></h3>\n<ul>\n<li>200 (OK)</li>\n<li>400 (Bad Request)</li>\n<li>404 (Not found)</li>\n</ul>\n<h2 id=\"post\">POST<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#post\"></a></h2>\n<p>Use POST when you want to create resources <em>without</em> knowing the URI for the new resource</p>\n<ul>\n<li>\n<p>however, a POST does not necessarily have to result in a resource that can be identified by a URI.</p>\n</li>\n<li>\n<p>POST requests are never cached</p>\n</li>\n<li>\n<p>POST requests do not remain in the browser history</p>\n</li>\n<li>\n<p>POST requests cannot be bookmarked</p>\n</li>\n<li>\n<p>POST requests have no restrictions on data length</p>\n</li>\n<li>\n<p>POST requests are not idempotent</p>\n</li>\n</ul>\n<h3 id=\"status-codes\">Status codes<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#status-codes\"></a></h3>\n<ul>\n<li>200 (OK) - more than 1 resource created</li>\n<li>201 (Created) - only 1 resource created</li>\n<li>204 (No Content) - no new resource created (or if a resource was created, but the response doesn't include an entity that describes the result)</li>\n<li>400 (Bad Request)</li>\n</ul>\n<h2 id=\"put\">PUT<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#put\"></a></h2>\n<p>For PUT requests the client <em>needs</em> to know the exact URI of the resource.</p>\n<ul>\n<li>ex. We cannot send a PUT request to <code>/projects</code> and expect a new resource to be created at <code>/projects/123</code></li>\n<li>this doesn't mean we can't create new resources with PUT; but it does mean the client needs to know how to generate the URI/ID of the new resource.\n<ul>\n<li>In cases where this ID is knowable by the client, PUT should actually be preferred over POST, since PUT is idempotent.</li>\n</ul>\n</li>\n<li>Therefore, PUT can be thought of as \"create or update\" resource.</li>\n</ul>\n<p>PUT should replace the existing resource with the new one. This means we cannot do partial updates.</p>\n<ul>\n<li>if we want to mimic a partial update, then we'd have to send the whole resource (with the modified field).</li>\n</ul>\n<h3 id=\"status-codes-1\">Status codes<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#status-codes-1\"></a></h3>\n<ul>\n<li>201 (Created) - a new resource is created</li>\n<li>200 (OK) - an existing resource is modified</li>\n<li>204 (No Content) - an existing resource is modified, but the entity isn't included in the response</li>\n</ul>\n<h2 id=\"patch\">PATCH<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#patch\"></a></h2>\n<p>PATCH allows us to perform partial modifications to an existing resource.</p>\n<p>PATCH requests are neither safe nor idempotent</p>\n<p>For document-oriented databases, <a href=\"https://jsonpatch.com/\">JSON PATCH</a> is a good way to make changes only to fields that have changed.</p>\n<h3 id=\"status-codes-2\">Status codes<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#status-codes-2\"></a></h3>\n<ul>\n<li>200 (OK)</li>\n<li>400 (Bad Request) </li>\n<li>404 (Not found)</li>\n<li>422 (Unprocessable Entity)</li>\n</ul>\n<h2 id=\"delete\">Delete<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#delete\"></a></h2>\n<h3 id=\"status-codes-3\">Status codes<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#status-codes-3\"></a></h3>\n<ul>\n<li>204 (No Content)</li>\n<li>400 (Bad Request)</li>\n<li>404 (Not found)</li>\n</ul>\n<hr>\n<h2 id=\"properties-of-http-methods\">Properties of HTTP methods<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#properties-of-http-methods\"></a></h2>\n<h3 id=\"safe\">Safe<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#safe\"></a></h3>\n<p>HTTP methods are considered safe if they do not alter the server state, so safe methods can only be used for read-only operations.</p>\n<p>Safe HTTP methods are GET, HEAD, OPTIONS and TRACE</p>\n<h3 id=\"idempotent\">Idempotent<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#idempotent\"></a></h3>\n<p><a href=\"/notes/ViJXhvpmoU53iSK9Wr4nG\">main note</a></p>\n<p>The idempotent methods are GET, HEAD, OPTIONS, TRACE, PUT and DELETE.</p>\n<p>All safe HTTP methods are idempotent but PUT and DELETE are idempotent but not safe.</p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/vdrlg4e7sdnza4h5h9zythh\">REST</a></li>\n<li><a href=\"/notes/wgfov5g4fh7cnji0a1ho70c\">JSON Patch</a></li>\n<li><a href=\"/notes/h160fafboo30ix91n52wfky\">Fetch</a></li>\n</ul>","noteIndex":{"id":"olZIVfSs2uLLr3BppFh4K","title":"Digital Garden","desc":"","updated":1674517603573,"created":1615482407722,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"effb007003ca6a91d7fd0c293e1d2436","links":[{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"testing.method.unit","alias":"unit testing","position":{"start":{"line":18,"column":121,"offset":1146},"end":{"line":18,"column":157,"offset":1182},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"testing.method.unit"}},{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"general.arch.microservice","alias":"microservices","position":{"start":{"line":18,"column":188,"offset":1213},"end":{"line":18,"column":231,"offset":1256},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.arch.microservice"}},{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"paradigm.oop","alias":"OOP","position":{"start":{"line":36,"column":227,"offset":2718},"end":{"line":36,"column":247,"offset":2738},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm.oop"}}],"anchors":{"tags":{"type":"header","text":"Tags","value":"tags","line":46,"column":0,"depth":3},"resources":{"type":"header","text":"Resources","value":"resources","line":55,"column":0,"depth":2},"ue-unexamined-resources":{"type":"header","text":"UE (Unexamined) Resources","value":"ue-unexamined-resources","line":56,"column":0,"depth":3},"e-examined-resources":{"type":"header","text":"E (Examined) Resources","value":"e-examined-resources","line":59,"column":0,"depth":3},"resources-1":{"type":"header","text":"Resources","value":"resources-1","line":62,"column":0,"depth":3}},"children":["40ubf88tephzbdjte8cdsa0","zFMjbn3xihVNHjUIdZCD1","IK6NOKemuDjhfstJBovKL","ZaTr28eWk1DrXOEsc1YVb","Vi0WYVLZunVM9iR8XZJn3","ngAbg7gluvbt1bY1UIRsi","RCPPXSakm5TvKka8kOmVp","LIcuGYV0DDt1VWbvH6Sed","MPx8ykTP57I40WTZvTP7f","ZU5WmdTG1bHoE8RcmZXZG","jqWiyYJff92RjXuUQt9PQ","KihijM8OQvZ4pASkkhqzL","F9vyqvls3OBCujtukqKhy","k6jxm2b3edgkhbordpuz6v1","facc2b01-755a-409f-99f6-57bef2d1501f","bZumdyapJ2H0wWWOmJ45i","elqpgoe2r951si4xrhujppj","m5ov42Vm6mR7RQWTvl1NW","cw8cerc0cos8lh871oz8rtf","PZxxZ4iESzSlbbHJKxuAZ","UDu62Pa6BaRqlG8uGoMhy","u3zcndycwqessho5h6x0nz9","ZgCUp366YrF2Tyky2NT73","DVpVUmavSoVDA7UIlPzLX","nMCtMXVvjBsJk3iw1zoIO","ANfx9Z4a6ZA0uJuSHtbIJ","BkG557LKUYbH1DnxprEVT","1TaH8zDTM98FZ9SYaeXLM","02v7ymc144e5c4pv3edkud7","dc79799f-a55d-48ab-a8be-c48adb1b19c0","f6feef57-b8f5-451f-a09a-7b63f6a07183","4sz47Y0LKs1Si73rWtyyh","g7ulqi8no93ezeocbesc3ll","5a9fb1df-478e-4687-9be0-5cb97e61ec57","1374e9e9-1cbc-4e1f-b1ca-66b8569533dd","D8Z3rjXkSj2EOymXQXF4Z","np3c1ykvnjqv5xoombpfwqz","f529cc34-aba0-45ca-ad7e-02ddda318941","0zcauha3il2NqtxZazIo7","9bbd6f68-03b2-41f4-92e4-2ca313e8b450","5a2ab598-fa7e-4471-8bda-9f5831b679ae","uV6w4mZPoohWyZV4Xaad0","QHXEIyeZGIGMVi5Q52UWI","RgE0mZLaUjPftFPZsiAoe","mytCOts26Pidush65tdRW","fwUzxfLSPMH1eL8oBoLWx","wazdsda6h25x66edvfmeuiv","TbW7PM9bg1y5TGkiWwQ8b","xiSIDeEtIc8X0lpUQlppI","0jxgntiLNHWFuCbzqtFGF","GkdMprLUe4QQULBxmGN6V","4SYc6v5hxY5g6Ip6kjpwO","czi7ilt2i1uoqm1f2otbntj","fqVQpS9FBiXgKsZX3R3sJ","L5JUZlGAGvTxrsEBB7DY8","ttyri4pwfyn5lcx0vp9804o","TeTedoeS2LdHPR632eCpM","ulicRRwo3lSFzh3tMfWH9","p7d24vyb8m00ombzn34t50c","e65188a1-177e-4ab2-99f9-75f85d537621","fajYnbVhCRDi74xn0H30R","bArGdGwqo3iFkyKMyE7qR","4Dcp7gbEVoLLgfu7bXFai","5d700782-fb81-416e-83f9-5dd88260e350","zubgzhNFE6KlTgXcjTz6O","8lpdfWa0cbSq1XJQbcYcY","2psluywdc416t7vrql0m058","17I8ZksXvqCH1mRtZDjHp","kF916Ow84qpJJeMRkWMIo","tMLkLcrIHHBz56xVmBLkP","CSePBQ6q7qhowKESqVwt7","laZ4OfLhZNK1Kuy6GaWUr","z5IJblOknQhMzZ5QZh4ye","N36FHxfxzwJfxDY3miWyX","3bb25f58-2b50-4fa3-af55-48ea9f88a081","7x07qjgbitozdfszqzuy7ix","u93Rz4fEWGu6VBR30Zraf","9hjMHnKvYT4jLKvuDSXaV","qC5GxCZBmNb4Ip6c0kU8x","LgW7mTIALODoXc54B3p6S","UYPxfHBFWX7fb6hHU5bB6","74lYtC8NKpCzcyFOZTfR1","sEoBNAEuaTxwSmTXDonZt","dj0jr9mpvs62e2pkg3zc3yy","z8ie0xjogb6ht7gzowav5xr","qxSOd6SPN8qf9ZUojVFDX","WQoMTf6VXBaxCgksXAVsj","2Mw4XgfyCHXHNOX5yoCIY","qcdt2f7jo51muquo5r95dpo","0XJqmcdtcMZu66glBI5O8","lK8r8BXS4ThiUTe4xKIZe","93de42ca-53ea-460a-baa7-b9ec5c47cb1e","Rxs2jaGpdFzqYtP7lAJFJ","aO8W81Z0PyIb6Hs7nOHPW","lhzisalkebu4w5n01np07i0","7b5l4b6fi65n7sv9org5q1l","I01hENHnh8Tqu3Ok8sLzG","03o3n0hz9v9jtb7j889zpd4","evqsPNutOaZ8hcBCqxFQu","zhhxcjZUHdU8uRLwGb9Zh","G1aFACZB2ooWGMGwyd3ZW","YWy1C4tgoaCcw1m8JJsr7","Szj3o5iaNxPpesiCqwrbu","613syb18hb3v0u1ydvor7ru","XhvCDW3fIw6h6MhY5ticq","Q70g7SusFZBQXzkuQifv4","AzfWDH3wp7jFpL2EYxBcW","y0fwpZ9qMqirsLiFyOciU","ZF8xj8wwDUqKlrwTrCFZ1","tAJvhqhdfyZZa87QHq1TU","4hRmipi8lxpBLyzWu5JVB","iTg0C7QjvnmqBZeEigJNs","3babc3d2-79ae-470a-9c06-ab8bba2e684e","bF3UsMFya3fMeXWDspVov","ULkfbL9WpktbVYnzhl6Jw","PpNOO8JYWe6dM8wruSa7x","di40pCxDn7IiqE8lFdD46","rmW0mkerqV35I8QPji6lM","3IFIK1ByzeIxZCByryGLN","iImkYAKfkw3beAl6pLbDn","ecDe8DNWrkeQTwpTEvHje","i2it5id8qwtg27n4usg8bo1","Yqhdd9mSJGN7OJOeyoSD2","Ws5tah8tpeyn9tK8VBTg8","gWAg15uBJgkS2B0wcpMAa","l7V3v2ep1YdDCt7DOr7Ci","yM2PJBdqJnHpD63cPA6sW","qn0bre7eLbi3QMbCfWkUi","fSu0KxFL41IRouotqmbHs","0gtg24Mj1a1bQFPRGQNlO","7iQPBMltLPLbFEz2qbjPu","yoh4pwoXcfELInGKRdYf6","dCGCWXgAmiOZXbdULT1m6","jMavlje07sNa6hSEIE8WA","Xxm0JE4dKHxrQAaZfzvxD","nRb6Im4Kcmc2ZWE7K1jZ1","PAEBZCyFBZJyR7OoMZ41E","PQ6km8RgRCuyICBPOYz8f","x5tm1nfjzyawwzedy3yitgd","2bhftt8rGuxYu4pFgNqru","hjYIZpHQWuXfeEoGeJEKW","K2M9bQqVq2eQfm29eslKL","X8obW1iKwYsvNgKWGyCzy","yJwSC7hqYIezTFHf5i0Ev","c4Z7ETcOHUILRMH32Sfjw","qiR6dIu857b9M9kTqjOyK","fc2coz74cnfy5czzofx4h5x","Ku1OgHMhELajzo61Gx7ye","LUrfhDWo8wuwZu7CN9TV8","osu6JGOnvXJ5gt3tpqWZY","1a6173cd-cf13-4b34-a522-8350bf9a364f","S2sBltrPfd8a7ICuD7CuH","GLQ2pmkJUNUa93THBDVsD","md6xitz4exia2joa06i490b","oWCuBXOg6JWfZzjmKxmNl","jOmhZ8ovLYTPbpM1vqSDx","p9bov84s0isgkl1ysaw93kk","FraC6xzLy1ei91l1ICyc9","6ceBas2RE9Q4787GDngH7","734cd78d-0bc9-426b-803d-1efc84dfffe5","k4Bb09px6r0FxIRs49SXV","oaG3H1S9IUBO644nGZigu","Ka7agQJkUMRSWN0uFdkWK","si3z090WsiLasMhJBa1Az","hs6rwzt4mogiicoc4gcykbi","ljKAVERmdEiKLK9hXGKBm","zxt3lhonfdhglvijd17ua8c","dd7dopve1dudqkoibkqvti4","923tgifqf59ovv5yldtyi0a","vrjwp01goqw47fqctm4f4lo","c99gdmmppju3r1tth8cb2jx","z2pvn5qxdz84zgygqzxage8"],"parent":null,"data":{},"body":"This Dendron vault of tech knowledge is organized according to domains and their sub-domains, along with specific implementation of those domains.\n\nFor instance, Git itself is a domain. Sub-domains of Git would include things like `commit`,\n`tags`, `reflog` etc. implementations of each of those could be `cli`, `strat`\n(strategies), `inner`, and so on.\n\nThe goal of the wiki is to present data in a manner that is from the perspective\nof a querying user. Here, a user is a programmer wanting to get key information\nfrom a specific domain. For instance, if a user wants to use postgres functions\nand hasn't done them in a while, they should be able to query\n`postgres.functions` to see what information is available to them.\n\nThis wiki has been written with myself in mind. While learning each of these\ndomains, I have been sensitive to the \"aha\" moments and have noted down my\ninsights as they arose. I have refrained from capturing information that I\nconsidered obvious or otherwise non-beneficial to my own understanding.\n\nAs a result, I have allowed myself to use potentially arcane concepts to explain other ones. For example, in my note on [[unit testing|testing.method.unit]], I have made reference to the [[microservices|general.arch.microservice]] note. If these notes were made with the public in mind, this would be a very bad strategy, given that you'd have to understand microservices to be able to draw that same parallel that I've already drawn. Since these notes are written for myself, I have been fine with taking these liberties.\n\nWhat I hope to gain from this wiki is the ability to step away from any\ngiven domain for a long period of time, and be able to be passably useful for\nwhatever my goals are within a short period of time. Of course this is all\nvague sounding, and really depends on the domain along with the ends I am\ntrying to reach.\n\nTo achieve this, the system should be steadfast to:\n- be able to put information in relatively easily, without too much thought\n\trequired to its location. While location is important, Dendron makes it easy\n\tto relocate notes, if it becomes apparent that a different place makes more\n\tsense.\n- be able to extract the information that is needed, meaning there is a\n\thigh-degree in confidence in the location of the information. The idea is\n\tthat information loses a large amount of its value when it is unfindable.\n\tTherefore, a relatively strict ideology should be used when determining\n\twhere a piece of information belongs.\n\t- Some concepts might realistically belong to multiple domains. For instance, the concept of *access modifiers* can be found in both `C#` and `Typescript`. Therefore, this note should be abstracted to a common place, such as [[OOP|paradigm.oop]].\n\nThis Dendron vault is the sister component to the [General Second Brain](https://tech.kyletycholiz.com).\n\n### Tags\nThroughout the garden, I have made use of tags, which give semantic meaning to the pieces of information.\n\n- `ex.` - Denotes an *example* of the preceding piece of information\n- `spec:` - Specifies that the preceding information has some degree of *speculation* to it, and may not be 100% factual. Ideally this gets clarified over time as my understanding develops.\n- `anal:` - Denotes an *analogy* of the preceding information. Often I will attempt to link concepts to others that I have previously learned.\n- `mn:` - Denotes a *mnemonic*\n- `expl:` - Denotes an *explanation*\n\n## Resources\n### UE (Unexamined) Resources\nOften, I come across sources of information that I believe to be high-quality. They may be recommendations or found in some other way. No matter their origin, I may be in a position where I don't have the time to fully examine them (and properly extract notes), or I may not require the information at that moment in time. In cases like these, I will add reference to a section of the note called **UE Resources**. The idea is that in the future when I am ready to examine them, I have a list of resources that I can start with. This is an alternative strategy to compiling browser bookmarks, which I've found can quickly become untenable.\n\n### E (Examined) Resources\nOnce a resource has been thoroughly examined and has been mined for notes, it will be moved from *UE Resources* to *E Resources*. This is to indicate that (in my own estimation), there is nothing more to be gained from the resource that is not already in the note.\n\n### Resources\nThis heading is for inexhaustible resources. \n- A prime example would be a quality website that continually posts articles.  - Another example would be a tool, such as software that measures frequencies in a room to help acoustically treat it.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"../main/tech","name":"tech"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"The Tech Digital Garden of Kyle Tycholiz"},"github":{"cname":"tech.kyletycholiz.com","enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://tech.kyletycholiz.com","duplicateNoteBehavior":{"action":"useVault","payload":["tech"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}