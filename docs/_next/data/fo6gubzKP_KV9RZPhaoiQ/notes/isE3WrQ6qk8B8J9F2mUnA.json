{"pageProps":{"note":{"id":"isE3WrQ6qk8B8J9F2mUnA","title":"Game Development","desc":"","updated":1629411723254,"created":1627932481245,"custom":{},"fname":"game.development","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"516e22f91db2b0386a512c84c3d39ee3","links":[],"anchors":{"production-process":{"type":"header","text":"Production process","value":"production-process","line":8,"column":0,"depth":2},"pre-production":{"type":"header","text":"Pre-production","value":"pre-production","line":9,"column":0,"depth":3},"production":{"type":"header","text":"Production","value":"production","line":13,"column":0,"depth":3},"post-production":{"type":"header","text":"Post-production","value":"post-production","line":17,"column":0,"depth":3},"development-team":{"type":"header","text":"Development team","value":"development-team","line":21,"column":0,"depth":2},"designer":{"type":"header","text":"Designer","value":"designer","line":22,"column":0,"depth":3},"artist":{"type":"header","text":"Artist","value":"artist","line":28,"column":0,"depth":3},"programmer":{"type":"header","text":"Programmer","value":"programmer","line":33,"column":0,"depth":3},"level-designer":{"type":"header","text":"Level designer","value":"level-designer","line":48,"column":0,"depth":3},"domain":{"type":"header","text":"Domain","value":"domain","line":51,"column":0,"depth":2},"design":{"type":"header","text":"Design","value":"design","line":54,"column":0,"depth":3},"programming":{"type":"header","text":"Programming","value":"programming","line":65,"column":0,"depth":3},"resources":{"type":"header","text":"Resources","value":"resources","line":81,"column":0,"depth":1}},"children":[],"parent":"fajYnbVhCRDi74xn0H30R","data":{}},"body":"<h1 id=\"game-development\">Game Development<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#game-development\"></a></h1>\n<h2 id=\"production-process\">Production process<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#production-process\"></a></h2>\n<h3 id=\"pre-production\">Pre-production<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#pre-production\"></a></h3>\n<ul>\n<li>studios produce a design document; a single source of truth for its creative direction (for a film, this would be roughly adjacent to a script or storyboard)\n<ul>\n<li>includes information about the story, gameplay, art direction, intended target audience and accessibility.</li>\n</ul>\n</li>\n<li>purpose is to iterate quickly while costs to do so are low. This is no different than designing a website mocks/designs/user testing before actually building the website.</li>\n</ul>\n<h3 id=\"production\">Production<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#production\"></a></h3>\n<p>Roles involved in production (overseen by the Producer):\n<img src=\"/assets/images/2021-08-18-14-27-37.png\"></p>\n<h3 id=\"post-production\">Post-production<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#post-production\"></a></h3>\n<p>project is evaluated, edited, polished, and fixed.</p>\n<ul>\n<li>includes alpha and beta testing</li>\n</ul>\n<h2 id=\"development-team\">Development team<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#development-team\"></a></h2>\n<h3 id=\"designer\">Designer<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#designer\"></a></h3>\n<ul>\n<li>conceives of gameplay and the structure/rules of the game</li>\n<li>often the main visionary of the game</li>\n<li>One of the roles of a designer is being a writer, often employed part-time to conceive game's narrative, dialogue, commentary, cutscene narrative, journals, video game packaging content, hint system, etc.</li>\n<li>they are responsible for various parts of the game, such as, game mechanics, user interface, characters, dialogue, graphics, etc</li>\n</ul>\n<h3 id=\"artist\">Artist<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#artist\"></a></h3>\n<ul>\n<li>designs video game art</li>\n<li>An artists work may be 2d oriented or 3D oriented</li>\n<li>2D artists may produce concept art, sprites, textures, environmental backdrops or terrain images, and user interface. 3D artists may produce models or meshes, animation, 3D environment, and cinematics. Artists sometimes occupy both roles.</li>\n</ul>\n<h3 id=\"programmer\">Programmer<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#programmer\"></a></h3>\n<p>The programmer develops video games or related software (such as game development tools).</p>\n<p>Individual programming disciplines roles include:</p>\n<ul>\n<li>Physics – the programming of the game engine, including simulating physics, collision, object movement, etc.;</li>\n<li>AI – producing computer agents using game AI techniques, such as scripting, planning, rule-based decisions, etc.</li>\n<li>Graphics – the managing of graphical content utilization and memory considerations; the production of graphics engine, integration of models, textures to work along the physics engine.</li>\n<li>Sound – integration of music, speech, effect sounds into the proper locations and times.</li>\n<li>Gameplay – implementation of various games rules and features (sometimes called a generalist);</li>\n<li>Scripting – development and maintenance of high-level command system for various in-game tasks, such as AI, level editor triggers, etc.</li>\n<li>UI – production of user interface elements, like option menus, HUDs, help and feedback systems, etc.</li>\n<li>Input processing – processing and compatibility correlation of various input devices, such as keyboard, mouse, gamepad, etc.</li>\n<li>Network communications – the managing of data inputs and outputs for local and internet gameplay.</li>\n<li>Game tools – the production of tools to accompany the development of the game, especially for designers and scripters.</li>\n</ul>\n<h3 id=\"level-designer\">Level designer<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#level-designer\"></a></h3>\n<ul>\n<li>a person who creates levels, challenges or missions for video games using a specific set of programs. These programs may be commonly available commercial 3D or 2D design programs, or specially designed and tailored level editors made for a specific game (like Wowedit)</li>\n</ul>\n<h2 id=\"domain\">Domain<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#domain\"></a></h2>\n<p>As far as the actual development of the game goes, there are 2 main routes: programming and designing.</p>\n<h3 id=\"design\">Design<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#design\"></a></h3>\n<ul>\n<li>3D artist: create 3D objects and backgrounds; optimize graphics performance</li>\n<li>2D artist: create 2D objects and backgrounds; optimize graphics performance; create storyboards and concept images</li>\n<li>Lighting artist: develop optimized lighting effects; create post-processing effects such as bloom, ambient occlusion, depth of field, and color correction</li>\n<li>Audio designer: create and implement sound effects, voice overs, and music</li>\n<li>Character artist: sculpt and model characters and their assets such as hair, accessories, armor, and weapons</li>\n<li>Technical artist: work with artists and programmers to implement their work within the final product</li>\n<li>Visual Effects artist: create realistic and stylized visual effects, such as lava, smoke, and fire; implement physical properties such as collisions and falling</li>\n<li>Animator: create and optimize high-quality animation of all moving characters and objects; ensure that lighting and visual effects operate well in motion</li>\n<li>Game / Level Designer: construct and implement gameplay; conduct playtesting and implement feedback; validate playability with the testers, level artists, and gameplay programmers</li>\n</ul>\n<h3 id=\"programming\">Programming<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#programming\"></a></h3>\n<ul>\n<li>Quality assurance technician: find and report bugs; write test cases and plans</li>\n<li>Programmer analyst: write code based on documented design; modify applications to maintain functionality</li>\n<li>C# developer: develop new features and applications; manage the release of products </li>\n<li>Unity engineer: develop new features and applications using Unity</li>\n<li>Research engineer: design, implement, analyze, and optimize state-of-the-art algorithms</li>\n<li>Software developer: design, develop, test, and release new features and tools</li>\n<li>VR / AR developer: prototype and build next generation VR/AR products; deploy and maintain VR/AR applications; stay current on the latest trends in VR/AR</li>\n<li>Mobile developer: develop new mobile features and applications; stay current on mobile technologies </li>\n<li>UI / interface programmer: code user interfaces to meet the intent of the project's design and flow; integrate UI systems into features</li>\n<li>Gameplay programmer: analyze and understand the game design documents; develop gameplay systems such player’s action, character’s behavior, game elements, and game progression</li>\n</ul>\n<hr>\n<p>Only top 20 percentile of games make profit</p>\n<h1 id=\"resources\">Resources<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#resources\"></a></h1>\n<p><a href=\"https://connect-prd-cdn.unity.com/20190524/19ad3c2b-506e-46c9-9700-07180536a9d2_Project_Design_Doc__PDF_.pdf\">Project design document</a>\n<a href=\"https://learn.unity.com/tutorial/lab-1-personal-project-plan?uv=2020.3&#x26;courseId=5cf96c41edbc2a2ca6e8810f&#x26;projectId=5caccdfbedbc2a3cef0efe63\">Unity design document tutorials</a></p>","noteIndex":{"id":"olZIVfSs2uLLr3BppFh4K","title":"Digital Garden","desc":"","updated":1674517603573,"created":1615482407722,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"effb007003ca6a91d7fd0c293e1d2436","links":[{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"testing.method.unit","alias":"unit testing","position":{"start":{"line":18,"column":121,"offset":1146},"end":{"line":18,"column":157,"offset":1182},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"testing.method.unit"}},{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"general.arch.microservice","alias":"microservices","position":{"start":{"line":18,"column":188,"offset":1213},"end":{"line":18,"column":231,"offset":1256},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.arch.microservice"}},{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"paradigm.oop","alias":"OOP","position":{"start":{"line":36,"column":227,"offset":2718},"end":{"line":36,"column":247,"offset":2738},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm.oop"}}],"anchors":{"tags":{"type":"header","text":"Tags","value":"tags","line":46,"column":0,"depth":3},"resources":{"type":"header","text":"Resources","value":"resources","line":55,"column":0,"depth":2},"ue-unexamined-resources":{"type":"header","text":"UE (Unexamined) Resources","value":"ue-unexamined-resources","line":56,"column":0,"depth":3},"e-examined-resources":{"type":"header","text":"E (Examined) Resources","value":"e-examined-resources","line":59,"column":0,"depth":3},"resources-1":{"type":"header","text":"Resources","value":"resources-1","line":62,"column":0,"depth":3}},"children":["40ubf88tephzbdjte8cdsa0","zFMjbn3xihVNHjUIdZCD1","IK6NOKemuDjhfstJBovKL","ZaTr28eWk1DrXOEsc1YVb","Vi0WYVLZunVM9iR8XZJn3","ngAbg7gluvbt1bY1UIRsi","RCPPXSakm5TvKka8kOmVp","LIcuGYV0DDt1VWbvH6Sed","MPx8ykTP57I40WTZvTP7f","ZU5WmdTG1bHoE8RcmZXZG","jqWiyYJff92RjXuUQt9PQ","KihijM8OQvZ4pASkkhqzL","F9vyqvls3OBCujtukqKhy","k6jxm2b3edgkhbordpuz6v1","facc2b01-755a-409f-99f6-57bef2d1501f","bZumdyapJ2H0wWWOmJ45i","elqpgoe2r951si4xrhujppj","m5ov42Vm6mR7RQWTvl1NW","cw8cerc0cos8lh871oz8rtf","PZxxZ4iESzSlbbHJKxuAZ","UDu62Pa6BaRqlG8uGoMhy","u3zcndycwqessho5h6x0nz9","ZgCUp366YrF2Tyky2NT73","DVpVUmavSoVDA7UIlPzLX","nMCtMXVvjBsJk3iw1zoIO","ANfx9Z4a6ZA0uJuSHtbIJ","BkG557LKUYbH1DnxprEVT","1TaH8zDTM98FZ9SYaeXLM","02v7ymc144e5c4pv3edkud7","dc79799f-a55d-48ab-a8be-c48adb1b19c0","f6feef57-b8f5-451f-a09a-7b63f6a07183","4sz47Y0LKs1Si73rWtyyh","g7ulqi8no93ezeocbesc3ll","5a9fb1df-478e-4687-9be0-5cb97e61ec57","1374e9e9-1cbc-4e1f-b1ca-66b8569533dd","D8Z3rjXkSj2EOymXQXF4Z","np3c1ykvnjqv5xoombpfwqz","f529cc34-aba0-45ca-ad7e-02ddda318941","0zcauha3il2NqtxZazIo7","9bbd6f68-03b2-41f4-92e4-2ca313e8b450","5a2ab598-fa7e-4471-8bda-9f5831b679ae","uV6w4mZPoohWyZV4Xaad0","QHXEIyeZGIGMVi5Q52UWI","RgE0mZLaUjPftFPZsiAoe","mytCOts26Pidush65tdRW","fwUzxfLSPMH1eL8oBoLWx","wazdsda6h25x66edvfmeuiv","TbW7PM9bg1y5TGkiWwQ8b","xiSIDeEtIc8X0lpUQlppI","0jxgntiLNHWFuCbzqtFGF","GkdMprLUe4QQULBxmGN6V","4SYc6v5hxY5g6Ip6kjpwO","czi7ilt2i1uoqm1f2otbntj","fqVQpS9FBiXgKsZX3R3sJ","L5JUZlGAGvTxrsEBB7DY8","ttyri4pwfyn5lcx0vp9804o","TeTedoeS2LdHPR632eCpM","ulicRRwo3lSFzh3tMfWH9","p7d24vyb8m00ombzn34t50c","e65188a1-177e-4ab2-99f9-75f85d537621","fajYnbVhCRDi74xn0H30R","bArGdGwqo3iFkyKMyE7qR","4Dcp7gbEVoLLgfu7bXFai","5d700782-fb81-416e-83f9-5dd88260e350","zubgzhNFE6KlTgXcjTz6O","8lpdfWa0cbSq1XJQbcYcY","2psluywdc416t7vrql0m058","17I8ZksXvqCH1mRtZDjHp","kF916Ow84qpJJeMRkWMIo","tMLkLcrIHHBz56xVmBLkP","CSePBQ6q7qhowKESqVwt7","laZ4OfLhZNK1Kuy6GaWUr","z5IJblOknQhMzZ5QZh4ye","N36FHxfxzwJfxDY3miWyX","3bb25f58-2b50-4fa3-af55-48ea9f88a081","7x07qjgbitozdfszqzuy7ix","u93Rz4fEWGu6VBR30Zraf","9hjMHnKvYT4jLKvuDSXaV","qC5GxCZBmNb4Ip6c0kU8x","LgW7mTIALODoXc54B3p6S","UYPxfHBFWX7fb6hHU5bB6","74lYtC8NKpCzcyFOZTfR1","sEoBNAEuaTxwSmTXDonZt","dj0jr9mpvs62e2pkg3zc3yy","z8ie0xjogb6ht7gzowav5xr","qxSOd6SPN8qf9ZUojVFDX","WQoMTf6VXBaxCgksXAVsj","2Mw4XgfyCHXHNOX5yoCIY","qcdt2f7jo51muquo5r95dpo","0XJqmcdtcMZu66glBI5O8","lK8r8BXS4ThiUTe4xKIZe","93de42ca-53ea-460a-baa7-b9ec5c47cb1e","Rxs2jaGpdFzqYtP7lAJFJ","aO8W81Z0PyIb6Hs7nOHPW","lhzisalkebu4w5n01np07i0","7b5l4b6fi65n7sv9org5q1l","I01hENHnh8Tqu3Ok8sLzG","03o3n0hz9v9jtb7j889zpd4","evqsPNutOaZ8hcBCqxFQu","zhhxcjZUHdU8uRLwGb9Zh","G1aFACZB2ooWGMGwyd3ZW","YWy1C4tgoaCcw1m8JJsr7","Szj3o5iaNxPpesiCqwrbu","613syb18hb3v0u1ydvor7ru","XhvCDW3fIw6h6MhY5ticq","Q70g7SusFZBQXzkuQifv4","AzfWDH3wp7jFpL2EYxBcW","y0fwpZ9qMqirsLiFyOciU","ZF8xj8wwDUqKlrwTrCFZ1","tAJvhqhdfyZZa87QHq1TU","4hRmipi8lxpBLyzWu5JVB","iTg0C7QjvnmqBZeEigJNs","3babc3d2-79ae-470a-9c06-ab8bba2e684e","bF3UsMFya3fMeXWDspVov","ULkfbL9WpktbVYnzhl6Jw","PpNOO8JYWe6dM8wruSa7x","di40pCxDn7IiqE8lFdD46","rmW0mkerqV35I8QPji6lM","3IFIK1ByzeIxZCByryGLN","iImkYAKfkw3beAl6pLbDn","ecDe8DNWrkeQTwpTEvHje","i2it5id8qwtg27n4usg8bo1","Yqhdd9mSJGN7OJOeyoSD2","Ws5tah8tpeyn9tK8VBTg8","gWAg15uBJgkS2B0wcpMAa","l7V3v2ep1YdDCt7DOr7Ci","yM2PJBdqJnHpD63cPA6sW","qn0bre7eLbi3QMbCfWkUi","fSu0KxFL41IRouotqmbHs","0gtg24Mj1a1bQFPRGQNlO","7iQPBMltLPLbFEz2qbjPu","yoh4pwoXcfELInGKRdYf6","dCGCWXgAmiOZXbdULT1m6","jMavlje07sNa6hSEIE8WA","Xxm0JE4dKHxrQAaZfzvxD","nRb6Im4Kcmc2ZWE7K1jZ1","PAEBZCyFBZJyR7OoMZ41E","PQ6km8RgRCuyICBPOYz8f","x5tm1nfjzyawwzedy3yitgd","2bhftt8rGuxYu4pFgNqru","hjYIZpHQWuXfeEoGeJEKW","K2M9bQqVq2eQfm29eslKL","X8obW1iKwYsvNgKWGyCzy","yJwSC7hqYIezTFHf5i0Ev","c4Z7ETcOHUILRMH32Sfjw","qiR6dIu857b9M9kTqjOyK","fc2coz74cnfy5czzofx4h5x","Ku1OgHMhELajzo61Gx7ye","LUrfhDWo8wuwZu7CN9TV8","osu6JGOnvXJ5gt3tpqWZY","1a6173cd-cf13-4b34-a522-8350bf9a364f","S2sBltrPfd8a7ICuD7CuH","GLQ2pmkJUNUa93THBDVsD","md6xitz4exia2joa06i490b","oWCuBXOg6JWfZzjmKxmNl","jOmhZ8ovLYTPbpM1vqSDx","p9bov84s0isgkl1ysaw93kk","FraC6xzLy1ei91l1ICyc9","6ceBas2RE9Q4787GDngH7","734cd78d-0bc9-426b-803d-1efc84dfffe5","k4Bb09px6r0FxIRs49SXV","oaG3H1S9IUBO644nGZigu","Ka7agQJkUMRSWN0uFdkWK","si3z090WsiLasMhJBa1Az","hs6rwzt4mogiicoc4gcykbi","ljKAVERmdEiKLK9hXGKBm","zxt3lhonfdhglvijd17ua8c","dd7dopve1dudqkoibkqvti4","923tgifqf59ovv5yldtyi0a","vrjwp01goqw47fqctm4f4lo","c99gdmmppju3r1tth8cb2jx","z2pvn5qxdz84zgygqzxage8"],"parent":null,"data":{},"body":"This Dendron vault of tech knowledge is organized according to domains and their sub-domains, along with specific implementation of those domains.\n\nFor instance, Git itself is a domain. Sub-domains of Git would include things like `commit`,\n`tags`, `reflog` etc. implementations of each of those could be `cli`, `strat`\n(strategies), `inner`, and so on.\n\nThe goal of the wiki is to present data in a manner that is from the perspective\nof a querying user. Here, a user is a programmer wanting to get key information\nfrom a specific domain. For instance, if a user wants to use postgres functions\nand hasn't done them in a while, they should be able to query\n`postgres.functions` to see what information is available to them.\n\nThis wiki has been written with myself in mind. While learning each of these\ndomains, I have been sensitive to the \"aha\" moments and have noted down my\ninsights as they arose. I have refrained from capturing information that I\nconsidered obvious or otherwise non-beneficial to my own understanding.\n\nAs a result, I have allowed myself to use potentially arcane concepts to explain other ones. For example, in my note on [[unit testing|testing.method.unit]], I have made reference to the [[microservices|general.arch.microservice]] note. If these notes were made with the public in mind, this would be a very bad strategy, given that you'd have to understand microservices to be able to draw that same parallel that I've already drawn. Since these notes are written for myself, I have been fine with taking these liberties.\n\nWhat I hope to gain from this wiki is the ability to step away from any\ngiven domain for a long period of time, and be able to be passably useful for\nwhatever my goals are within a short period of time. Of course this is all\nvague sounding, and really depends on the domain along with the ends I am\ntrying to reach.\n\nTo achieve this, the system should be steadfast to:\n- be able to put information in relatively easily, without too much thought\n\trequired to its location. While location is important, Dendron makes it easy\n\tto relocate notes, if it becomes apparent that a different place makes more\n\tsense.\n- be able to extract the information that is needed, meaning there is a\n\thigh-degree in confidence in the location of the information. The idea is\n\tthat information loses a large amount of its value when it is unfindable.\n\tTherefore, a relatively strict ideology should be used when determining\n\twhere a piece of information belongs.\n\t- Some concepts might realistically belong to multiple domains. For instance, the concept of *access modifiers* can be found in both `C#` and `Typescript`. Therefore, this note should be abstracted to a common place, such as [[OOP|paradigm.oop]].\n\nThis Dendron vault is the sister component to the [General Second Brain](https://tech.kyletycholiz.com).\n\n### Tags\nThroughout the garden, I have made use of tags, which give semantic meaning to the pieces of information.\n\n- `ex.` - Denotes an *example* of the preceding piece of information\n- `spec:` - Specifies that the preceding information has some degree of *speculation* to it, and may not be 100% factual. Ideally this gets clarified over time as my understanding develops.\n- `anal:` - Denotes an *analogy* of the preceding information. Often I will attempt to link concepts to others that I have previously learned.\n- `mn:` - Denotes a *mnemonic*\n- `expl:` - Denotes an *explanation*\n\n## Resources\n### UE (Unexamined) Resources\nOften, I come across sources of information that I believe to be high-quality. They may be recommendations or found in some other way. No matter their origin, I may be in a position where I don't have the time to fully examine them (and properly extract notes), or I may not require the information at that moment in time. In cases like these, I will add reference to a section of the note called **UE Resources**. The idea is that in the future when I am ready to examine them, I have a list of resources that I can start with. This is an alternative strategy to compiling browser bookmarks, which I've found can quickly become untenable.\n\n### E (Examined) Resources\nOnce a resource has been thoroughly examined and has been mined for notes, it will be moved from *UE Resources* to *E Resources*. This is to indicate that (in my own estimation), there is nothing more to be gained from the resource that is not already in the note.\n\n### Resources\nThis heading is for inexhaustible resources. \n- A prime example would be a quality website that continually posts articles.  - Another example would be a tool, such as software that measures frequencies in a room to help acoustically treat it.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"../main/tech","name":"tech"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"The Tech Digital Garden of Kyle Tycholiz"},"github":{"cname":"tech.kyletycholiz.com","enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://tech.kyletycholiz.com","duplicateNoteBehavior":{"action":"useVault","payload":["tech"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}