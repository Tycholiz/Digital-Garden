{"pageProps":{"note":{"id":"g7ulqi8no93ezeocbesc3ll","title":"CouchDB","desc":"","updated":1652335515526,"created":1648065820430,"custom":{},"fname":"couchdb","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"aac56c389bd7fec0307515a321799f65","links":[{"type":"wiki","from":{"fname":"couchdb","id":"g7ulqi8no93ezeocbesc3ll","vaultName":"tech"},"value":"db.type.document","alias":"document database","position":{"start":{"line":3,"column":14,"offset":29},"end":{"line":3,"column":52,"offset":67},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"db.type.document"}},{"type":"wiki","from":{"fname":"couchdb","id":"g7ulqi8no93ezeocbesc3ll","vaultName":"tech"},"value":"couchdb.design-doc.view","alias":"views","position":{"start":{"line":5,"column":33,"offset":143},"end":{"line":5,"column":66,"offset":176},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"couchdb.design-doc.view"}},{"type":"wiki","from":{"fname":"couchdb","id":"g7ulqi8no93ezeocbesc3ll","vaultName":"tech"},"value":"db.distributed.replication","alias":"replication","position":{"start":{"line":13,"column":23,"offset":970},"end":{"line":13,"column":65,"offset":1012},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"db.distributed.replication"}},{"type":"wiki","from":{"fname":"couchdb","id":"g7ulqi8no93ezeocbesc3ll","vaultName":"tech"},"value":"couchdb.pouch","alias":"PouchDB","position":{"start":{"line":14,"column":28,"offset":1170},"end":{"line":14,"column":53,"offset":1195},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"couchdb.pouch"}},{"type":"wiki","from":{"fname":"couchdb","id":"g7ulqi8no93ezeocbesc3ll","vaultName":"tech"},"value":"git","position":{"start":{"line":14,"column":119,"offset":1261},"end":{"line":14,"column":126,"offset":1268},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"git"}},{"type":"wiki","from":{"fname":"couchdb","id":"g7ulqi8no93ezeocbesc3ll","vaultName":"tech"},"value":"CMS","alias":"CMSs","position":{"start":{"line":26,"column":177,"offset":1938},"end":{"line":26,"column":189,"offset":1950},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"CMS"}},{"type":"wiki","from":{"fname":"couchdb","id":"g7ulqi8no93ezeocbesc3ll","vaultName":"tech"},"value":"couchdb.replication","alias":"replication","position":{"start":{"line":29,"column":27,"offset":2085},"end":{"line":29,"column":62,"offset":2120},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"couchdb.replication"}},{"type":"wiki","from":{"fname":"couchdb","id":"g7ulqi8no93ezeocbesc3ll","vaultName":"tech"},"value":"deploy.scaling","alias":"scalability","position":{"start":{"line":29,"column":67,"offset":2125},"end":{"line":29,"column":97,"offset":2155},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"deploy.scaling"}},{"type":"wiki","from":{"fname":"couchdb","id":"g7ulqi8no93ezeocbesc3ll","vaultName":"tech"},"value":"db.distributed.replication.strategies","alias":"multi-master replication","position":{"start":{"line":30,"column":22,"offset":2177},"end":{"line":30,"column":124,"offset":2279},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"db.distributed.replication.strategies","anchorHeader":"multi-leader-based-replication,1:"}},{"type":"wiki","from":{"fname":"couchdb","id":"g7ulqi8no93ezeocbesc3ll","vaultName":"tech"},"value":"db.strategies.concurrency-control","alias":"MVCC","position":{"start":{"line":39,"column":32,"offset":2890},"end":{"line":39,"column":114,"offset":2972},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"db.strategies.concurrency-control","anchorHeader":"multiversion-concurrency-control-mvcc,1"}},{"type":"wiki","from":{"fname":"couchdb","id":"g7ulqi8no93ezeocbesc3ll","vaultName":"tech"},"value":"regex","position":{"start":{"line":67,"column":53,"offset":4530},"end":{"line":67,"column":62,"offset":4539},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"regex"}},{"from":{"fname":"couchdb.pouch","id":"8sahxg5gjs14yzwx9b77p1k","vaultName":"tech"},"type":"backlink","position":{"start":{"line":3,"column":18,"offset":102},"end":{"line":3,"column":37,"offset":121},"indent":[]},"value":"couchdb"},{"from":{"fname":"deploy.distributed.CAP-theorem","id":"ilOPfgNyiPSHOb9tNB6yL","vaultName":"tech"},"type":"backlink","position":{"start":{"line":75,"column":3,"offset":7307},"end":{"line":75,"column":14,"offset":7318},"indent":[]},"value":"couchdb"},{"from":{"fname":"db.distributed.replication.strategies","id":"wbs6c9snnonnyzm8vk2t4b9","vaultName":"tech"},"type":"backlink","position":{"start":{"line":123,"column":55,"offset":10856},"end":{"line":123,"column":74,"offset":10875},"indent":[]},"value":"couchdb"},{"from":{"fname":"general.lang.data-structs.tree.B","id":"UE8OS2s713jEk2CmjiAet","vaultName":"tech"},"type":"backlink","position":{"start":{"line":45,"column":23,"offset":3913},"end":{"line":45,"column":42,"offset":3932},"indent":[]},"value":"couchdb"}],"anchors":{"what-is-it":{"type":"header","text":"What is it?","value":"what-is-it","line":8,"column":0,"depth":2},"from-sql-to-couchdb":{"type":"header","text":"From SQL to CouchDB","value":"from-sql-to-couchdb","line":22,"column":0,"depth":3},"why-use-it":{"type":"header","text":"Why use it?","value":"why-use-it","line":31,"column":0,"depth":2},"conflict-resolution":{"type":"header","text":"Conflict resolution","value":"conflict-resolution","line":44,"column":0,"depth":3},"resources":{"type":"header","text":"Resources","value":"resources","line":62,"column":0,"depth":3},"querying-data":{"type":"header","text":"Querying data","value":"querying-data","line":69,"column":0,"depth":3},"security":{"type":"header","text":"Security","value":"security","line":76,"column":0,"depth":3},"hosting":{"type":"header","text":"Hosting","value":"hosting","line":87,"column":0,"depth":2}},"children":["486i1taa3ycarnraisgup32","57vhdkmrif0e4rdsokr4xyo","rdd992s4fbe931kqydfg252","8sahxg5gjs14yzwx9b77p1k","6b96d1cy19ooewp49vo4x5d"],"parent":"olZIVfSs2uLLr3BppFh4K","data":{}},"body":"<h1 id=\"couchdb\">CouchDB<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#couchdb\"></a></h1>\n<h2 id=\"what-is-it\">What is it?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what-is-it\"></a></h2>\n<p>CouchDB is a <a href=\"/notes/wo8h5ku40y6dzinkof9dx5x\">document database</a>, with each document represented as JSON. </p>\n<p>The documents are organised via <a href=\"/notes/vhyhna89umrxkmonh18di4y\">views</a>. </p>\n<ul>\n<li>Views are defined with aggregate functions and filters are computed in parallel, much like MapReduce.</li>\n</ul>\n<p>Each database is a collection of independent documents. Each document maintains its own data and self-contained schema. An application may access multiple databases, such as one stored on a user's mobile phone and another on a server. Document metadata contains revision information, making it possible to merge any differences that may have occurred while the databases were disconnected.</p>\n<p>Unlike other solutions, <code>databases</code> in CouchDB are cheap to make. They are more comparable to namespaces in other database systems.</p>\n<p>CouchDB was designed with sync in mind, and this is exactly what it excels at. Many of the rough edges of the API serve this larger purpose</p>\n<ul>\n<li>unlike other common <a href=\"/notes/gKVIPNGV7duiD0yRnld8J\">replication</a> systems, CouchDB doesn't use leader-follower replicationâ€” it uses multi-master, meaning any node can be read from and written to.</li>\n<li>By default, CouchDB (and <a href=\"/notes/8sahxg5gjs14yzwx9b77p1k\">PouchDB</a>) are designed to store all document revisions forever, just like <a href=\"/notes/4Dcp7gbEVoLLgfu7bXFai\">Git</a></li>\n</ul>\n<h3 id=\"from-sql-to-couchdb\">From SQL to CouchDB<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#from-sql-to-couchdb\"></a></h3>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>SQL</th><th>CouchDB</th></tr></thead><tbody><tr><td>Queries</td><td>HTTP requests with JSON</td></tr><tr><td>Each table has rows</td><td>Each database has documents</td></tr><tr><td>Each table has columns</td><td>Each document has fields</td></tr></tbody></table></div>\n<p>CouchDB config files are found in <code>ini</code>, and there are multiple <a href=\"https://docs.couchdb.org/en/3.2.0/config/intro.html#configuration-files\">options</a> for location.</p>\n<h2 id=\"why-use-it\">Why use it?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#why-use-it\"></a></h2>\n<p>CouchDB is well suited for applications with accumulating, occasionally changing data, on which pre-defined queries are to be run and where versioning is important (e.g. CRMs, <a href=\"/notes/IK6NOKemuDjhfstJBovKL\">CMSs</a>). </p>\n<ul>\n<li>Master-master replication is an especially interesting feature, allowing easy multi-site deployments.</li>\n</ul>\n<p>CouchDB is really good at <a href=\"/notes/6b96d1cy19ooewp49vo4x5d\">replication</a> and <a href=\"/notes/HZSth7yP1s7aPaPPZRJPm\">scalability</a></p>\n<ul>\n<li>Couchdb implements <a href=\"/notes/wbs6c9snnonnyzm8vk2t4b9#multi-leader-based-replication1\">multi-master replication</a></li>\n<li>Couchdb is designed with bi-directional replication (or synchronization) and off-line operation in mind. \n<ul>\n<li>That means multiple replicas can have their own copies of the same data, modify it, and then sync those changes at a later time.</li>\n</ul>\n</li>\n</ul>\n<p>Couchdb offers document-level ACID semantics by implementing a form of Multi-Version Concurrency Control, meaning that CouchDB can handle a high volume of concurrent readers and writers without conflict.</p>\n<p>CouchDB guarantees eventual consistency to be able to provide both availability and partition tolerance.</p>\n<h3 id=\"conflict-resolution\">Conflict resolution<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#conflict-resolution\"></a></h3>\n<p>instead of locks, Couchdb uses <a href=\"/notes/Mzsmv3XQV978L3jm2eumP#multiversion-concurrency-control-mvcc1\">MVCC</a></p>\n<p>Conflict resolutions are automatic and deterministic (since the contents of the document are hashed with MD5 and sorted alphanumerically)</p>\n<ul>\n<li>anal: this is like a CPU-cheap version of blockchain, but instead of solving some complex mathematical formula to prove your conflict is the correct one, a simple MD5 formula is used to make that determination.</li>\n<li>Custom (and even manual) resolution can be built into the app if we don't want to do this by sorting alphanumeric MD5 sums.</li>\n<li>In either case, both revisions are preserved.\n<ul>\n<li>actually \"deleting\" is only soft deleting in CouchDB, with a field of <code>_deleted</code>.</li>\n</ul>\n</li>\n</ul>\n<p>Each document in CouchDB is versioned (via its <code>_rev</code> field)</p>\n<ul>\n<li>the <code>_rev</code> is prefixed with an integer that increments with each new revision.</li>\n<li>if 2 people update the same document at the same time, then we will end up with two revisions prefixed with the next incremented number:\n<ul>\n<li><code>2-1583746</code> and <code>2-2583368</code>. In this case, the first would win, because of its alphanumerical position.</li>\n</ul>\n</li>\n</ul>\n<p>Resolving a conflict generally involves first merging data into one of the documents, then deleting the stale one.</p>\n<p>Couch uses MVVC instead of locks.</p>\n<h3 id=\"resources\">Resources<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#resources\"></a></h3>\n<p><code>http://&#x3C;host>:&#x3C;port>/&#x3C;database>/&#x3C;document>/&#x3C;attachments></code></p>\n<p>System endpoints/keys are prefixed with <code>_</code></p>\n<p>Fauxton dashboard: <code>http://localhost:5984/_utils</code></p>\n<h3 id=\"querying-data\">Querying data<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#querying-data\"></a></h3>\n<p>There are 3 ways to query data: MapReduce, Mango queries, and Full-text search (with Lucene).</p>\n<p>Mango queries are meant to resemble the MongoDB query language.</p>\n<ul>\n<li>allows us to do arbitrary searches with <code>=</code>, <code>></code>, <a href=\"/notes/yM2PJBdqJnHpD63cPA6sW\">Regex</a> etc.</li>\n<li>if we use Mango queries, the view is created for us automatically.</li>\n</ul>\n<h3 id=\"security\">Security<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#security\"></a></h3>\n<p>CouchDB's level of security is not as sophistocated as other database solutions.</p>\n<ul>\n<li>security is per database (via the <code>_security</code> endpoint), and we can specify read-only access, read/write access, or admin access.\n<ul>\n<li>admins can update indexes, views etc.</li>\n</ul>\n</li>\n</ul>\n<p>If finer grained control is needed, we can write custom <code>update</code> functions to implement our own business logic for determining when data should be accessible or not.</p>\n<hr>\n<p>CouchDB and PouchDB do not support transactions. A document is the smallest unit of operations.</p>\n<h2 id=\"hosting\">Hosting<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#hosting\"></a></h2>\n<ul>\n<li>A2 Hosting</li>\n<li>Cloudant (IBM managed CouchDB)</li>\n</ul>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/notes/486i1taa3ycarnraisgup32\">Authorization</a></li>\n<li><a href=\"/notes/57vhdkmrif0e4rdsokr4xyo\">Design Document</a></li>\n<li><a href=\"/notes/rdd992s4fbe931kqydfg252\">Document</a></li>\n<li><a href=\"/notes/8sahxg5gjs14yzwx9b77p1k\">PouchDB</a></li>\n<li><a href=\"/notes/6b96d1cy19ooewp49vo4x5d\">Replication</a></li>\n</ol>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/8sahxg5gjs14yzwx9b77p1k\">PouchDB</a></li>\n<li><a href=\"/notes/ilOPfgNyiPSHOb9tNB6yL\">CAP Theorem</a></li>\n<li><a href=\"/notes/wbs6c9snnonnyzm8vk2t4b9\">Strategies</a></li>\n<li><a href=\"/notes/UE8OS2s713jEk2CmjiAet\">B-tree</a></li>\n</ul>","noteIndex":{"id":"olZIVfSs2uLLr3BppFh4K","title":"Digital Garden","desc":"","updated":1674517603573,"created":1615482407722,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"effb007003ca6a91d7fd0c293e1d2436","links":[{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"testing.method.unit","alias":"unit testing","position":{"start":{"line":18,"column":121,"offset":1146},"end":{"line":18,"column":157,"offset":1182},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"testing.method.unit"}},{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"general.arch.microservice","alias":"microservices","position":{"start":{"line":18,"column":188,"offset":1213},"end":{"line":18,"column":231,"offset":1256},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.arch.microservice"}},{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"paradigm.oop","alias":"OOP","position":{"start":{"line":36,"column":227,"offset":2718},"end":{"line":36,"column":247,"offset":2738},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm.oop"}}],"anchors":{"tags":{"type":"header","text":"Tags","value":"tags","line":46,"column":0,"depth":3},"resources":{"type":"header","text":"Resources","value":"resources","line":55,"column":0,"depth":2},"ue-unexamined-resources":{"type":"header","text":"UE (Unexamined) Resources","value":"ue-unexamined-resources","line":56,"column":0,"depth":3},"e-examined-resources":{"type":"header","text":"E (Examined) Resources","value":"e-examined-resources","line":59,"column":0,"depth":3},"resources-1":{"type":"header","text":"Resources","value":"resources-1","line":62,"column":0,"depth":3}},"children":["40ubf88tephzbdjte8cdsa0","zFMjbn3xihVNHjUIdZCD1","IK6NOKemuDjhfstJBovKL","ZaTr28eWk1DrXOEsc1YVb","Vi0WYVLZunVM9iR8XZJn3","ngAbg7gluvbt1bY1UIRsi","RCPPXSakm5TvKka8kOmVp","LIcuGYV0DDt1VWbvH6Sed","MPx8ykTP57I40WTZvTP7f","ZU5WmdTG1bHoE8RcmZXZG","jqWiyYJff92RjXuUQt9PQ","KihijM8OQvZ4pASkkhqzL","F9vyqvls3OBCujtukqKhy","k6jxm2b3edgkhbordpuz6v1","facc2b01-755a-409f-99f6-57bef2d1501f","bZumdyapJ2H0wWWOmJ45i","elqpgoe2r951si4xrhujppj","m5ov42Vm6mR7RQWTvl1NW","cw8cerc0cos8lh871oz8rtf","PZxxZ4iESzSlbbHJKxuAZ","UDu62Pa6BaRqlG8uGoMhy","u3zcndycwqessho5h6x0nz9","ZgCUp366YrF2Tyky2NT73","DVpVUmavSoVDA7UIlPzLX","nMCtMXVvjBsJk3iw1zoIO","ANfx9Z4a6ZA0uJuSHtbIJ","BkG557LKUYbH1DnxprEVT","1TaH8zDTM98FZ9SYaeXLM","02v7ymc144e5c4pv3edkud7","dc79799f-a55d-48ab-a8be-c48adb1b19c0","f6feef57-b8f5-451f-a09a-7b63f6a07183","4sz47Y0LKs1Si73rWtyyh","g7ulqi8no93ezeocbesc3ll","5a9fb1df-478e-4687-9be0-5cb97e61ec57","1374e9e9-1cbc-4e1f-b1ca-66b8569533dd","D8Z3rjXkSj2EOymXQXF4Z","np3c1ykvnjqv5xoombpfwqz","f529cc34-aba0-45ca-ad7e-02ddda318941","0zcauha3il2NqtxZazIo7","9bbd6f68-03b2-41f4-92e4-2ca313e8b450","5a2ab598-fa7e-4471-8bda-9f5831b679ae","uV6w4mZPoohWyZV4Xaad0","QHXEIyeZGIGMVi5Q52UWI","RgE0mZLaUjPftFPZsiAoe","mytCOts26Pidush65tdRW","fwUzxfLSPMH1eL8oBoLWx","wazdsda6h25x66edvfmeuiv","TbW7PM9bg1y5TGkiWwQ8b","xiSIDeEtIc8X0lpUQlppI","0jxgntiLNHWFuCbzqtFGF","GkdMprLUe4QQULBxmGN6V","4SYc6v5hxY5g6Ip6kjpwO","czi7ilt2i1uoqm1f2otbntj","fqVQpS9FBiXgKsZX3R3sJ","L5JUZlGAGvTxrsEBB7DY8","ttyri4pwfyn5lcx0vp9804o","TeTedoeS2LdHPR632eCpM","ulicRRwo3lSFzh3tMfWH9","p7d24vyb8m00ombzn34t50c","e65188a1-177e-4ab2-99f9-75f85d537621","fajYnbVhCRDi74xn0H30R","bArGdGwqo3iFkyKMyE7qR","4Dcp7gbEVoLLgfu7bXFai","5d700782-fb81-416e-83f9-5dd88260e350","zubgzhNFE6KlTgXcjTz6O","8lpdfWa0cbSq1XJQbcYcY","2psluywdc416t7vrql0m058","17I8ZksXvqCH1mRtZDjHp","kF916Ow84qpJJeMRkWMIo","tMLkLcrIHHBz56xVmBLkP","CSePBQ6q7qhowKESqVwt7","laZ4OfLhZNK1Kuy6GaWUr","z5IJblOknQhMzZ5QZh4ye","N36FHxfxzwJfxDY3miWyX","3bb25f58-2b50-4fa3-af55-48ea9f88a081","7x07qjgbitozdfszqzuy7ix","u93Rz4fEWGu6VBR30Zraf","9hjMHnKvYT4jLKvuDSXaV","qC5GxCZBmNb4Ip6c0kU8x","LgW7mTIALODoXc54B3p6S","UYPxfHBFWX7fb6hHU5bB6","74lYtC8NKpCzcyFOZTfR1","sEoBNAEuaTxwSmTXDonZt","dj0jr9mpvs62e2pkg3zc3yy","z8ie0xjogb6ht7gzowav5xr","qxSOd6SPN8qf9ZUojVFDX","WQoMTf6VXBaxCgksXAVsj","2Mw4XgfyCHXHNOX5yoCIY","qcdt2f7jo51muquo5r95dpo","0XJqmcdtcMZu66glBI5O8","lK8r8BXS4ThiUTe4xKIZe","93de42ca-53ea-460a-baa7-b9ec5c47cb1e","Rxs2jaGpdFzqYtP7lAJFJ","aO8W81Z0PyIb6Hs7nOHPW","lhzisalkebu4w5n01np07i0","7b5l4b6fi65n7sv9org5q1l","I01hENHnh8Tqu3Ok8sLzG","03o3n0hz9v9jtb7j889zpd4","evqsPNutOaZ8hcBCqxFQu","zhhxcjZUHdU8uRLwGb9Zh","G1aFACZB2ooWGMGwyd3ZW","YWy1C4tgoaCcw1m8JJsr7","Szj3o5iaNxPpesiCqwrbu","613syb18hb3v0u1ydvor7ru","XhvCDW3fIw6h6MhY5ticq","Q70g7SusFZBQXzkuQifv4","AzfWDH3wp7jFpL2EYxBcW","y0fwpZ9qMqirsLiFyOciU","ZF8xj8wwDUqKlrwTrCFZ1","tAJvhqhdfyZZa87QHq1TU","4hRmipi8lxpBLyzWu5JVB","iTg0C7QjvnmqBZeEigJNs","3babc3d2-79ae-470a-9c06-ab8bba2e684e","bF3UsMFya3fMeXWDspVov","ULkfbL9WpktbVYnzhl6Jw","PpNOO8JYWe6dM8wruSa7x","di40pCxDn7IiqE8lFdD46","rmW0mkerqV35I8QPji6lM","3IFIK1ByzeIxZCByryGLN","iImkYAKfkw3beAl6pLbDn","ecDe8DNWrkeQTwpTEvHje","i2it5id8qwtg27n4usg8bo1","Yqhdd9mSJGN7OJOeyoSD2","Ws5tah8tpeyn9tK8VBTg8","gWAg15uBJgkS2B0wcpMAa","l7V3v2ep1YdDCt7DOr7Ci","yM2PJBdqJnHpD63cPA6sW","qn0bre7eLbi3QMbCfWkUi","fSu0KxFL41IRouotqmbHs","0gtg24Mj1a1bQFPRGQNlO","7iQPBMltLPLbFEz2qbjPu","yoh4pwoXcfELInGKRdYf6","dCGCWXgAmiOZXbdULT1m6","jMavlje07sNa6hSEIE8WA","Xxm0JE4dKHxrQAaZfzvxD","nRb6Im4Kcmc2ZWE7K1jZ1","PAEBZCyFBZJyR7OoMZ41E","PQ6km8RgRCuyICBPOYz8f","x5tm1nfjzyawwzedy3yitgd","2bhftt8rGuxYu4pFgNqru","hjYIZpHQWuXfeEoGeJEKW","K2M9bQqVq2eQfm29eslKL","X8obW1iKwYsvNgKWGyCzy","yJwSC7hqYIezTFHf5i0Ev","c4Z7ETcOHUILRMH32Sfjw","qiR6dIu857b9M9kTqjOyK","fc2coz74cnfy5czzofx4h5x","Ku1OgHMhELajzo61Gx7ye","LUrfhDWo8wuwZu7CN9TV8","osu6JGOnvXJ5gt3tpqWZY","1a6173cd-cf13-4b34-a522-8350bf9a364f","S2sBltrPfd8a7ICuD7CuH","GLQ2pmkJUNUa93THBDVsD","md6xitz4exia2joa06i490b","oWCuBXOg6JWfZzjmKxmNl","jOmhZ8ovLYTPbpM1vqSDx","p9bov84s0isgkl1ysaw93kk","FraC6xzLy1ei91l1ICyc9","6ceBas2RE9Q4787GDngH7","734cd78d-0bc9-426b-803d-1efc84dfffe5","k4Bb09px6r0FxIRs49SXV","oaG3H1S9IUBO644nGZigu","Ka7agQJkUMRSWN0uFdkWK","si3z090WsiLasMhJBa1Az","hs6rwzt4mogiicoc4gcykbi","ljKAVERmdEiKLK9hXGKBm","zxt3lhonfdhglvijd17ua8c","dd7dopve1dudqkoibkqvti4","923tgifqf59ovv5yldtyi0a","vrjwp01goqw47fqctm4f4lo","c99gdmmppju3r1tth8cb2jx","z2pvn5qxdz84zgygqzxage8"],"parent":null,"data":{},"body":"This Dendron vault of tech knowledge is organized according to domains and their sub-domains, along with specific implementation of those domains.\n\nFor instance, Git itself is a domain. Sub-domains of Git would include things like `commit`,\n`tags`, `reflog` etc. implementations of each of those could be `cli`, `strat`\n(strategies), `inner`, and so on.\n\nThe goal of the wiki is to present data in a manner that is from the perspective\nof a querying user. Here, a user is a programmer wanting to get key information\nfrom a specific domain. For instance, if a user wants to use postgres functions\nand hasn't done them in a while, they should be able to query\n`postgres.functions` to see what information is available to them.\n\nThis wiki has been written with myself in mind. While learning each of these\ndomains, I have been sensitive to the \"aha\" moments and have noted down my\ninsights as they arose. I have refrained from capturing information that I\nconsidered obvious or otherwise non-beneficial to my own understanding.\n\nAs a result, I have allowed myself to use potentially arcane concepts to explain other ones. For example, in my note on [[unit testing|testing.method.unit]], I have made reference to the [[microservices|general.arch.microservice]] note. If these notes were made with the public in mind, this would be a very bad strategy, given that you'd have to understand microservices to be able to draw that same parallel that I've already drawn. Since these notes are written for myself, I have been fine with taking these liberties.\n\nWhat I hope to gain from this wiki is the ability to step away from any\ngiven domain for a long period of time, and be able to be passably useful for\nwhatever my goals are within a short period of time. Of course this is all\nvague sounding, and really depends on the domain along with the ends I am\ntrying to reach.\n\nTo achieve this, the system should be steadfast to:\n- be able to put information in relatively easily, without too much thought\n\trequired to its location. While location is important, Dendron makes it easy\n\tto relocate notes, if it becomes apparent that a different place makes more\n\tsense.\n- be able to extract the information that is needed, meaning there is a\n\thigh-degree in confidence in the location of the information. The idea is\n\tthat information loses a large amount of its value when it is unfindable.\n\tTherefore, a relatively strict ideology should be used when determining\n\twhere a piece of information belongs.\n\t- Some concepts might realistically belong to multiple domains. For instance, the concept of *access modifiers* can be found in both `C#` and `Typescript`. Therefore, this note should be abstracted to a common place, such as [[OOP|paradigm.oop]].\n\nThis Dendron vault is the sister component to the [General Second Brain](https://tech.kyletycholiz.com).\n\n### Tags\nThroughout the garden, I have made use of tags, which give semantic meaning to the pieces of information.\n\n- `ex.` - Denotes an *example* of the preceding piece of information\n- `spec:` - Specifies that the preceding information has some degree of *speculation* to it, and may not be 100% factual. Ideally this gets clarified over time as my understanding develops.\n- `anal:` - Denotes an *analogy* of the preceding information. Often I will attempt to link concepts to others that I have previously learned.\n- `mn:` - Denotes a *mnemonic*\n- `expl:` - Denotes an *explanation*\n\n## Resources\n### UE (Unexamined) Resources\nOften, I come across sources of information that I believe to be high-quality. They may be recommendations or found in some other way. No matter their origin, I may be in a position where I don't have the time to fully examine them (and properly extract notes), or I may not require the information at that moment in time. In cases like these, I will add reference to a section of the note called **UE Resources**. The idea is that in the future when I am ready to examine them, I have a list of resources that I can start with. This is an alternative strategy to compiling browser bookmarks, which I've found can quickly become untenable.\n\n### E (Examined) Resources\nOnce a resource has been thoroughly examined and has been mined for notes, it will be moved from *UE Resources* to *E Resources*. This is to indicate that (in my own estimation), there is nothing more to be gained from the resource that is not already in the note.\n\n### Resources\nThis heading is for inexhaustible resources. \n- A prime example would be a quality website that continually posts articles.  - Another example would be a tool, such as software that measures frequencies in a room to help acoustically treat it.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"../main/tech","name":"tech"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"The Tech Digital Garden of Kyle Tycholiz"},"github":{"cname":"tech.kyletycholiz.com","enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://tech.kyletycholiz.com","duplicateNoteBehavior":{"action":"useVault","payload":["tech"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}