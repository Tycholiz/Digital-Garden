{"pageProps":{"note":{"id":"Skg9BUUhw2xIBmwrkEP4u","title":"Messaging Pattern","desc":"","updated":1686094358173,"created":1638567576513,"custom":{},"fname":"general.patterns.messaging","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"fe001ad84d19c7134a4d20a54a7524dd","links":[{"type":"wiki","from":{"fname":"general.patterns.messaging","id":"Skg9BUUhw2xIBmwrkEP4u","vaultName":"tech"},"value":"general.patterns.messaging.pubsub","alias":"Pub-Sub","position":{"start":{"line":13,"column":4,"offset":1111},"end":{"line":13,"column":49,"offset":1156},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.patterns.messaging.pubsub"}},{"type":"wiki","from":{"fname":"general.patterns.messaging","id":"Skg9BUUhw2xIBmwrkEP4u","vaultName":"tech"},"value":"general.arch.SOA.bus","alias":"bus","position":{"start":{"line":20,"column":57,"offset":1837},"end":{"line":20,"column":85,"offset":1865},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.arch.SOA.bus"}},{"type":"wiki","from":{"fname":"general.patterns.messaging","id":"Skg9BUUhw2xIBmwrkEP4u","vaultName":"tech"},"value":"aws.svc.SQS","alias":"SQS","position":{"start":{"line":29,"column":8,"offset":2584},"end":{"line":29,"column":27,"offset":2603},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.SQS"}},{"type":"wiki","from":{"fname":"general.patterns.messaging","id":"Skg9BUUhw2xIBmwrkEP4u","vaultName":"tech"},"value":"general.patterns.messaging.pubsub","alias":"Pub/Sub","position":{"start":{"line":30,"column":3,"offset":2606},"end":{"line":30,"column":48,"offset":2651},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.patterns.messaging.pubsub"}},{"type":"wiki","from":{"fname":"general.patterns.messaging","id":"Skg9BUUhw2xIBmwrkEP4u","vaultName":"tech"},"value":"aws.svc.SNS","alias":"SNS","position":{"start":{"line":31,"column":8,"offset":2659},"end":{"line":31,"column":27,"offset":2678},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.SNS"}},{"type":"wiki","from":{"fname":"general.patterns.messaging","id":"Skg9BUUhw2xIBmwrkEP4u","vaultName":"tech"},"value":"aws.svc.event-bridge","alias":"EventBridge","position":{"start":{"line":33,"column":8,"offset":2700},"end":{"line":33,"column":44,"offset":2736},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.event-bridge"}},{"type":"wiki","from":{"fname":"general.patterns.messaging","id":"Skg9BUUhw2xIBmwrkEP4u","vaultName":"tech"},"value":"general.patterns.messaging.pubsub","alias":"pub/sub","position":{"start":{"line":37,"column":35,"offset":2885},"end":{"line":37,"column":80,"offset":2930},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.patterns.messaging.pubsub"}},{"type":"wiki","from":{"fname":"general.patterns.messaging","id":"Skg9BUUhw2xIBmwrkEP4u","vaultName":"tech"},"value":"kafka","position":{"start":{"line":51,"column":3,"offset":3706},"end":{"line":51,"column":12,"offset":3715},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"kafka"}},{"from":{"fname":"deploy.distributed","id":"vutujFFWxQu6TshWVuMpI","vaultName":"tech"},"type":"backlink","position":{"start":{"line":6,"column":153,"offset":402},"end":{"line":6,"column":199,"offset":448},"indent":[]},"value":"general.patterns.messaging"},{"from":{"fname":"deploy.distributed","id":"vutujFFWxQu6TshWVuMpI","vaultName":"tech"},"type":"backlink","position":{"start":{"line":57,"column":131,"offset":4881},"end":{"line":57,"column":176,"offset":4926},"indent":[]},"value":"general.patterns.messaging"},{"from":{"fname":"os.process","id":"h4AAeyVt574EVXO3sy2X1","vaultName":"tech"},"type":"backlink","position":{"start":{"line":18,"column":89,"offset":1097},"end":{"line":18,"column":127,"offset":1135},"indent":[]},"value":"general.patterns.messaging"},{"from":{"fname":"general.arch.SOA.bus","id":"csPOCpGsdV9SQed4lZyWh","vaultName":"tech"},"type":"backlink","position":{"start":{"line":14,"column":153,"offset":1869},"end":{"line":14,"column":198,"offset":1914},"indent":[]},"value":"general.patterns.messaging"}],"anchors":{"overview":{"type":"header","text":"Overview","value":"overview","line":22,"column":0,"depth":1},"fan-out":{"type":"header","text":"Fan out","value":"fan-out","line":41,"column":0,"depth":2},"message-queue":{"type":"header","text":"Message Queue","value":"message-queue","line":47,"column":0,"depth":2},"message-broker":{"type":"header","text":"Message Broker","value":"message-broker","line":50,"column":0,"depth":2},"examples":{"type":"header","text":"Examples","value":"examples","line":56,"column":0,"depth":3}},"children":["0pUoWXrTC07Z9B1ijwosK","3fd9knqbt4wyg2267sxe3up","NpY4iv9TwpGJODbVesQYe"],"parent":"37d21937-a6a6-4ec9-a37f-f8df6425006f","data":{}},"body":"<h1 id=\"messaging-pattern\">Messaging Pattern<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#messaging-pattern\"></a></h1>\n<p>A messaging pattern describes how two different parts of an application (or different systems) connect and communicate with each other.</p>\n<ul>\n<li>In actuality, protocols like REST are indeed messaging protocols, but we don't think of them as such. Typically when we talk about messaging patterns, we are referring to situations where we have this third entity between the provider/consumer of the data.</li>\n</ul>\n<p>message-passing communication is usually one-way: a sender normally doesn't expect to receive a reply to its messages. It is possible for a process to send a response, but this would usually be done on a separate channel.</p>\n<p>a message is just a sequence of bytes with some metadata, so you can use any encoding format</p>\n<p>Two types of messaging patterns are available âˆ’ </p>\n<ol>\n<li>point to point \n<ul>\n<li>a particular message can be consumed by a maximum of one consumer only, and it disappears from the queue once a consumer reads it</li>\n<li>The typical example of this system is an Order Processing System, where each order will be processed by one Order Processor, but Multiple Order Processors can work as well at the same time.</li>\n</ul>\n</li>\n<li><a href=\"/notes/NpY4iv9TwpGJODbVesQYe\">Pub-Sub</a> \n<ul>\n<li>Most of the messaging patterns follow pub-sub.</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"overview\">Overview<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#overview\"></a></h1>\n<p>Imagine we have 2 services: OrderService and InvoiceService. In order to pass data from OrderService downstream to InvoiceService, we set up a message queue in the OrderService. Then, InvoiceService would read from it.</p>\n<p>If we need to add more downstream services, then we need to modify the upstream service (ie. OrderService) to instruct it to write a message queue. This creates more complex high-level service relationships that are hard to maintain, since future downstream services now become reliant on that upstream service to update its message queues.</p>\n<ul>\n<li>This burden is what causes people to go for more of a <a href=\"/notes/csPOCpGsdV9SQed4lZyWh\">bus</a>-based solution</li>\n</ul>\n<p>In a typical message-queueing implementation, a developer installs and configures message-queueing software (a queue manager or broker), and defines a named message queue. Or they register with a message queuing service.</p>\n<ul>\n<li>An application then registers a software routine that \"listens\" for messages placed onto the queue.</li>\n<li>Second and subsequent applications may connect to the queue and transfer a message onto it.</li>\n<li>The queue-manager software stores the messages until a receiving application connects and then calls the registered software routine. The receiving application then processes the message in an appropriate manner.</li>\n</ul>\n<p>Some patterns for implementing messages are:</p>\n<ul>\n<li>Message Queues\n<ul>\n<li>ex. <a href=\"/notes/Ha1umcNRHS8mEarVSMy5v\">SQS</a></li>\n</ul>\n</li>\n<li><a href=\"/notes/NpY4iv9TwpGJODbVesQYe\">Pub/Sub</a>\n<ul>\n<li>ex. <a href=\"/notes/3E2oC3PsnDWowLW9hK0eZ\">SNS</a></li>\n</ul>\n</li>\n<li>Event buses\n<ul>\n<li>ex. <a href=\"/notes/7n3tUhrwbvz8nNu0bTlWz\">EventBridge</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"fan-out\">Fan out<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#fan-out\"></a></h2>\n<p>Fan-out is a messaging pattern where messages are broadcast in parallel in a one-to-many arrangement.</p>\n<ul>\n<li>this pattern can be seen in the <a href=\"/notes/NpY4iv9TwpGJODbVesQYe\">pub/sub</a> messaging system, since a single sender can send messages to many receivers.</li>\n</ul>\n<p><img src=\"/assets/images/2022-04-07-21-41-28.png\"></p>\n<h2 id=\"message-queue\">Message Queue<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#message-queue\"></a></h2>\n<p>Message queues provide some guarantee of reliability, in that the number of incoming messages equals the number of outgoing messages</p>\n<h2 id=\"message-broker\">Message Broker<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#message-broker\"></a></h2>\n<p>A message broker is an intermediary computer program module that translates a message from the formal messaging protocol of the sender to the formal messaging protocol of the receiver.</p>\n<p>Message brokers are used as follows: one process sends a message to a named queue or topic, and the broker ensures that the message is delivered to one or more consumers of or subscribers to that queue or topic. </p>\n<ul>\n<li>There can be many producers and many consumers on the same topic.</li>\n</ul>\n<h3 id=\"examples\">Examples<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#examples\"></a></h3>\n<ul>\n<li><a href=\"/notes/WQoMTf6VXBaxCgksXAVsj\">Kafka</a>, though more of an event-streaming platform</li>\n<li>RabbitMQ</li>\n<li>AWS Kinesis</li>\n<li>Google Cloud Pub/Sub</li>\n<li>Redis (not a message broker per se, but rather has messaging brokering as one of its capabilities)</li>\n<li>NATS</li>\n</ul>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/notes/3fd9knqbt4wyg2267sxe3up\">Broker</a></li>\n<li><a href=\"/notes/0pUoWXrTC07Z9B1ijwosK\">Dead Letter Queue</a></li>\n<li><a href=\"/notes/NpY4iv9TwpGJODbVesQYe\">PubSub Pattern</a></li>\n</ol>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/vutujFFWxQu6TshWVuMpI\">Distributed Computing</a></li>\n<li><a href=\"/notes/h4AAeyVt574EVXO3sy2X1\">Process</a></li>\n<li><a href=\"/notes/csPOCpGsdV9SQed4lZyWh\">Enterprise Service Bus</a></li>\n</ul>","noteIndex":{"id":"olZIVfSs2uLLr3BppFh4K","title":"Digital Garden","desc":"","updated":1674517603573,"created":1615482407722,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"effb007003ca6a91d7fd0c293e1d2436","links":[{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"testing.method.unit","alias":"unit testing","position":{"start":{"line":18,"column":121,"offset":1146},"end":{"line":18,"column":157,"offset":1182},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"testing.method.unit"}},{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"general.arch.microservice","alias":"microservices","position":{"start":{"line":18,"column":188,"offset":1213},"end":{"line":18,"column":231,"offset":1256},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.arch.microservice"}},{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"paradigm.oop","alias":"OOP","position":{"start":{"line":36,"column":227,"offset":2718},"end":{"line":36,"column":247,"offset":2738},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm.oop"}}],"anchors":{"tags":{"type":"header","text":"Tags","value":"tags","line":46,"column":0,"depth":3},"resources":{"type":"header","text":"Resources","value":"resources","line":55,"column":0,"depth":2},"ue-unexamined-resources":{"type":"header","text":"UE (Unexamined) Resources","value":"ue-unexamined-resources","line":56,"column":0,"depth":3},"e-examined-resources":{"type":"header","text":"E (Examined) Resources","value":"e-examined-resources","line":59,"column":0,"depth":3},"resources-1":{"type":"header","text":"Resources","value":"resources-1","line":62,"column":0,"depth":3}},"children":["40ubf88tephzbdjte8cdsa0","zFMjbn3xihVNHjUIdZCD1","IK6NOKemuDjhfstJBovKL","ZaTr28eWk1DrXOEsc1YVb","Vi0WYVLZunVM9iR8XZJn3","ngAbg7gluvbt1bY1UIRsi","RCPPXSakm5TvKka8kOmVp","LIcuGYV0DDt1VWbvH6Sed","MPx8ykTP57I40WTZvTP7f","ZU5WmdTG1bHoE8RcmZXZG","jqWiyYJff92RjXuUQt9PQ","KihijM8OQvZ4pASkkhqzL","F9vyqvls3OBCujtukqKhy","k6jxm2b3edgkhbordpuz6v1","facc2b01-755a-409f-99f6-57bef2d1501f","bZumdyapJ2H0wWWOmJ45i","elqpgoe2r951si4xrhujppj","m5ov42Vm6mR7RQWTvl1NW","cw8cerc0cos8lh871oz8rtf","PZxxZ4iESzSlbbHJKxuAZ","UDu62Pa6BaRqlG8uGoMhy","u3zcndycwqessho5h6x0nz9","ZgCUp366YrF2Tyky2NT73","DVpVUmavSoVDA7UIlPzLX","nMCtMXVvjBsJk3iw1zoIO","ANfx9Z4a6ZA0uJuSHtbIJ","BkG557LKUYbH1DnxprEVT","1TaH8zDTM98FZ9SYaeXLM","02v7ymc144e5c4pv3edkud7","dc79799f-a55d-48ab-a8be-c48adb1b19c0","f6feef57-b8f5-451f-a09a-7b63f6a07183","4sz47Y0LKs1Si73rWtyyh","g7ulqi8no93ezeocbesc3ll","5a9fb1df-478e-4687-9be0-5cb97e61ec57","1374e9e9-1cbc-4e1f-b1ca-66b8569533dd","D8Z3rjXkSj2EOymXQXF4Z","np3c1ykvnjqv5xoombpfwqz","f529cc34-aba0-45ca-ad7e-02ddda318941","0zcauha3il2NqtxZazIo7","9bbd6f68-03b2-41f4-92e4-2ca313e8b450","5a2ab598-fa7e-4471-8bda-9f5831b679ae","uV6w4mZPoohWyZV4Xaad0","QHXEIyeZGIGMVi5Q52UWI","RgE0mZLaUjPftFPZsiAoe","mytCOts26Pidush65tdRW","fwUzxfLSPMH1eL8oBoLWx","wazdsda6h25x66edvfmeuiv","TbW7PM9bg1y5TGkiWwQ8b","xiSIDeEtIc8X0lpUQlppI","0jxgntiLNHWFuCbzqtFGF","GkdMprLUe4QQULBxmGN6V","4SYc6v5hxY5g6Ip6kjpwO","czi7ilt2i1uoqm1f2otbntj","fqVQpS9FBiXgKsZX3R3sJ","L5JUZlGAGvTxrsEBB7DY8","ttyri4pwfyn5lcx0vp9804o","TeTedoeS2LdHPR632eCpM","ulicRRwo3lSFzh3tMfWH9","p7d24vyb8m00ombzn34t50c","e65188a1-177e-4ab2-99f9-75f85d537621","fajYnbVhCRDi74xn0H30R","bArGdGwqo3iFkyKMyE7qR","4Dcp7gbEVoLLgfu7bXFai","5d700782-fb81-416e-83f9-5dd88260e350","zubgzhNFE6KlTgXcjTz6O","8lpdfWa0cbSq1XJQbcYcY","2psluywdc416t7vrql0m058","17I8ZksXvqCH1mRtZDjHp","kF916Ow84qpJJeMRkWMIo","tMLkLcrIHHBz56xVmBLkP","CSePBQ6q7qhowKESqVwt7","laZ4OfLhZNK1Kuy6GaWUr","z5IJblOknQhMzZ5QZh4ye","N36FHxfxzwJfxDY3miWyX","3bb25f58-2b50-4fa3-af55-48ea9f88a081","7x07qjgbitozdfszqzuy7ix","u93Rz4fEWGu6VBR30Zraf","9hjMHnKvYT4jLKvuDSXaV","qC5GxCZBmNb4Ip6c0kU8x","LgW7mTIALODoXc54B3p6S","UYPxfHBFWX7fb6hHU5bB6","74lYtC8NKpCzcyFOZTfR1","sEoBNAEuaTxwSmTXDonZt","dj0jr9mpvs62e2pkg3zc3yy","z8ie0xjogb6ht7gzowav5xr","qxSOd6SPN8qf9ZUojVFDX","WQoMTf6VXBaxCgksXAVsj","2Mw4XgfyCHXHNOX5yoCIY","qcdt2f7jo51muquo5r95dpo","0XJqmcdtcMZu66glBI5O8","lK8r8BXS4ThiUTe4xKIZe","93de42ca-53ea-460a-baa7-b9ec5c47cb1e","Rxs2jaGpdFzqYtP7lAJFJ","aO8W81Z0PyIb6Hs7nOHPW","lhzisalkebu4w5n01np07i0","7b5l4b6fi65n7sv9org5q1l","I01hENHnh8Tqu3Ok8sLzG","03o3n0hz9v9jtb7j889zpd4","evqsPNutOaZ8hcBCqxFQu","zhhxcjZUHdU8uRLwGb9Zh","G1aFACZB2ooWGMGwyd3ZW","YWy1C4tgoaCcw1m8JJsr7","Szj3o5iaNxPpesiCqwrbu","613syb18hb3v0u1ydvor7ru","XhvCDW3fIw6h6MhY5ticq","Q70g7SusFZBQXzkuQifv4","AzfWDH3wp7jFpL2EYxBcW","y0fwpZ9qMqirsLiFyOciU","ZF8xj8wwDUqKlrwTrCFZ1","tAJvhqhdfyZZa87QHq1TU","4hRmipi8lxpBLyzWu5JVB","iTg0C7QjvnmqBZeEigJNs","3babc3d2-79ae-470a-9c06-ab8bba2e684e","bF3UsMFya3fMeXWDspVov","ULkfbL9WpktbVYnzhl6Jw","PpNOO8JYWe6dM8wruSa7x","di40pCxDn7IiqE8lFdD46","rmW0mkerqV35I8QPji6lM","3IFIK1ByzeIxZCByryGLN","iImkYAKfkw3beAl6pLbDn","ecDe8DNWrkeQTwpTEvHje","i2it5id8qwtg27n4usg8bo1","Yqhdd9mSJGN7OJOeyoSD2","Ws5tah8tpeyn9tK8VBTg8","gWAg15uBJgkS2B0wcpMAa","l7V3v2ep1YdDCt7DOr7Ci","yM2PJBdqJnHpD63cPA6sW","qn0bre7eLbi3QMbCfWkUi","fSu0KxFL41IRouotqmbHs","0gtg24Mj1a1bQFPRGQNlO","7iQPBMltLPLbFEz2qbjPu","yoh4pwoXcfELInGKRdYf6","dCGCWXgAmiOZXbdULT1m6","jMavlje07sNa6hSEIE8WA","Xxm0JE4dKHxrQAaZfzvxD","nRb6Im4Kcmc2ZWE7K1jZ1","PAEBZCyFBZJyR7OoMZ41E","PQ6km8RgRCuyICBPOYz8f","x5tm1nfjzyawwzedy3yitgd","2bhftt8rGuxYu4pFgNqru","hjYIZpHQWuXfeEoGeJEKW","K2M9bQqVq2eQfm29eslKL","X8obW1iKwYsvNgKWGyCzy","yJwSC7hqYIezTFHf5i0Ev","c4Z7ETcOHUILRMH32Sfjw","qiR6dIu857b9M9kTqjOyK","fc2coz74cnfy5czzofx4h5x","Ku1OgHMhELajzo61Gx7ye","LUrfhDWo8wuwZu7CN9TV8","osu6JGOnvXJ5gt3tpqWZY","1a6173cd-cf13-4b34-a522-8350bf9a364f","S2sBltrPfd8a7ICuD7CuH","GLQ2pmkJUNUa93THBDVsD","md6xitz4exia2joa06i490b","oWCuBXOg6JWfZzjmKxmNl","jOmhZ8ovLYTPbpM1vqSDx","p9bov84s0isgkl1ysaw93kk","FraC6xzLy1ei91l1ICyc9","6ceBas2RE9Q4787GDngH7","734cd78d-0bc9-426b-803d-1efc84dfffe5","k4Bb09px6r0FxIRs49SXV","oaG3H1S9IUBO644nGZigu","Ka7agQJkUMRSWN0uFdkWK","si3z090WsiLasMhJBa1Az","hs6rwzt4mogiicoc4gcykbi","ljKAVERmdEiKLK9hXGKBm","zxt3lhonfdhglvijd17ua8c","dd7dopve1dudqkoibkqvti4","923tgifqf59ovv5yldtyi0a","vrjwp01goqw47fqctm4f4lo","c99gdmmppju3r1tth8cb2jx","z2pvn5qxdz84zgygqzxage8"],"parent":null,"data":{},"body":"This Dendron vault of tech knowledge is organized according to domains and their sub-domains, along with specific implementation of those domains.\n\nFor instance, Git itself is a domain. Sub-domains of Git would include things like `commit`,\n`tags`, `reflog` etc. implementations of each of those could be `cli`, `strat`\n(strategies), `inner`, and so on.\n\nThe goal of the wiki is to present data in a manner that is from the perspective\nof a querying user. Here, a user is a programmer wanting to get key information\nfrom a specific domain. For instance, if a user wants to use postgres functions\nand hasn't done them in a while, they should be able to query\n`postgres.functions` to see what information is available to them.\n\nThis wiki has been written with myself in mind. While learning each of these\ndomains, I have been sensitive to the \"aha\" moments and have noted down my\ninsights as they arose. I have refrained from capturing information that I\nconsidered obvious or otherwise non-beneficial to my own understanding.\n\nAs a result, I have allowed myself to use potentially arcane concepts to explain other ones. For example, in my note on [[unit testing|testing.method.unit]], I have made reference to the [[microservices|general.arch.microservice]] note. If these notes were made with the public in mind, this would be a very bad strategy, given that you'd have to understand microservices to be able to draw that same parallel that I've already drawn. Since these notes are written for myself, I have been fine with taking these liberties.\n\nWhat I hope to gain from this wiki is the ability to step away from any\ngiven domain for a long period of time, and be able to be passably useful for\nwhatever my goals are within a short period of time. Of course this is all\nvague sounding, and really depends on the domain along with the ends I am\ntrying to reach.\n\nTo achieve this, the system should be steadfast to:\n- be able to put information in relatively easily, without too much thought\n\trequired to its location. While location is important, Dendron makes it easy\n\tto relocate notes, if it becomes apparent that a different place makes more\n\tsense.\n- be able to extract the information that is needed, meaning there is a\n\thigh-degree in confidence in the location of the information. The idea is\n\tthat information loses a large amount of its value when it is unfindable.\n\tTherefore, a relatively strict ideology should be used when determining\n\twhere a piece of information belongs.\n\t- Some concepts might realistically belong to multiple domains. For instance, the concept of *access modifiers* can be found in both `C#` and `Typescript`. Therefore, this note should be abstracted to a common place, such as [[OOP|paradigm.oop]].\n\nThis Dendron vault is the sister component to the [General Second Brain](https://tech.kyletycholiz.com).\n\n### Tags\nThroughout the garden, I have made use of tags, which give semantic meaning to the pieces of information.\n\n- `ex.` - Denotes an *example* of the preceding piece of information\n- `spec:` - Specifies that the preceding information has some degree of *speculation* to it, and may not be 100% factual. Ideally this gets clarified over time as my understanding develops.\n- `anal:` - Denotes an *analogy* of the preceding information. Often I will attempt to link concepts to others that I have previously learned.\n- `mn:` - Denotes a *mnemonic*\n- `expl:` - Denotes an *explanation*\n\n## Resources\n### UE (Unexamined) Resources\nOften, I come across sources of information that I believe to be high-quality. They may be recommendations or found in some other way. No matter their origin, I may be in a position where I don't have the time to fully examine them (and properly extract notes), or I may not require the information at that moment in time. In cases like these, I will add reference to a section of the note called **UE Resources**. The idea is that in the future when I am ready to examine them, I have a list of resources that I can start with. This is an alternative strategy to compiling browser bookmarks, which I've found can quickly become untenable.\n\n### E (Examined) Resources\nOnce a resource has been thoroughly examined and has been mined for notes, it will be moved from *UE Resources* to *E Resources*. This is to indicate that (in my own estimation), there is nothing more to be gained from the resource that is not already in the note.\n\n### Resources\nThis heading is for inexhaustible resources. \n- A prime example would be a quality website that continually posts articles.  - Another example would be a tool, such as software that measures frequencies in a room to help acoustically treat it.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"../main/tech","name":"tech"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"The Tech Digital Garden of Kyle Tycholiz"},"github":{"cname":"tech.kyletycholiz.com","enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://tech.kyletycholiz.com","duplicateNoteBehavior":{"action":"useVault","payload":["tech"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}