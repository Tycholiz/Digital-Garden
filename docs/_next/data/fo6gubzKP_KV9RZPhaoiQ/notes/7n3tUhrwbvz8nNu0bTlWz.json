{"pageProps":{"note":{"id":"7n3tUhrwbvz8nNu0bTlWz","title":"EventBridge","desc":"","updated":1653932758721,"created":1637621757050,"custom":{},"fname":"aws.svc.event-bridge","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"dff4fb0b2e93f370c51469dfff0ea36d","links":[{"type":"wiki","from":{"fname":"aws.svc.event-bridge","id":"7n3tUhrwbvz8nNu0bTlWz","vaultName":"tech"},"value":"general.arch.SOA.bus","alias":"event bus","position":{"start":{"line":2,"column":29,"offset":29},"end":{"line":2,"column":63,"offset":63},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.arch.SOA.bus"}},{"type":"wiki","from":{"fname":"aws.svc.event-bridge","id":"7n3tUhrwbvz8nNu0bTlWz","vaultName":"tech"},"value":"general.patterns.messaging.pubsub","alias":"pub/sub","position":{"start":{"line":2,"column":82,"offset":82},"end":{"line":2,"column":127,"offset":127},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.patterns.messaging.pubsub"}},{"type":"wiki","from":{"fname":"aws.svc.event-bridge","id":"7n3tUhrwbvz8nNu0bTlWz","vaultName":"tech"},"value":"aws.svc.lambda","alias":"Lambdas","position":{"start":{"line":7,"column":72,"offset":588},"end":{"line":7,"column":98,"offset":614},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.lambda"}},{"type":"wiki","from":{"fname":"aws.svc.event-bridge","id":"7n3tUhrwbvz8nNu0bTlWz","vaultName":"tech"},"value":"general.arch.event","alias":"Event-driven architecture","position":{"start":{"line":10,"column":49,"offset":747},"end":{"line":10,"column":97,"offset":795},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.arch.event"}},{"type":"wiki","from":{"fname":"aws.svc.event-bridge","id":"7n3tUhrwbvz8nNu0bTlWz","vaultName":"tech"},"value":"aws.svc.lambda","alias":"Lambdas","position":{"start":{"line":20,"column":47,"offset":1201},"end":{"line":20,"column":73,"offset":1227},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.lambda"}},{"type":"wiki","from":{"fname":"aws.svc.event-bridge","id":"7n3tUhrwbvz8nNu0bTlWz","vaultName":"tech"},"value":"aws.svc.cloudwatch","alias":"Cloudwatch","position":{"start":{"line":20,"column":75,"offset":1229},"end":{"line":20,"column":108,"offset":1262},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.cloudwatch"}},{"type":"wiki","from":{"fname":"aws.svc.event-bridge","id":"7n3tUhrwbvz8nNu0bTlWz","vaultName":"tech"},"value":"aws.svc.EC2","alias":"EC2","position":{"start":{"line":33,"column":16,"offset":2175},"end":{"line":33,"column":35,"offset":2194},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.EC2"}},{"type":"wiki","from":{"fname":"aws.svc.event-bridge","id":"7n3tUhrwbvz8nNu0bTlWz","vaultName":"tech"},"value":"kafka","position":{"start":{"line":40,"column":37,"offset":2702},"end":{"line":40,"column":46,"offset":2711},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"kafka"}},{"type":"wiki","from":{"fname":"aws.svc.event-bridge","id":"7n3tUhrwbvz8nNu0bTlWz","vaultName":"tech"},"value":"aws.svc.step-functions","alias":"step function","position":{"start":{"line":45,"column":74,"offset":2842},"end":{"line":45,"column":114,"offset":2882},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.step-functions"}},{"type":"wiki","from":{"fname":"aws.svc.event-bridge","id":"7n3tUhrwbvz8nNu0bTlWz","vaultName":"tech"},"value":"aws.svc.ECS","alias":"ESC","position":{"start":{"line":45,"column":134,"offset":2902},"end":{"line":45,"column":153,"offset":2921},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.ECS"}},{"type":"wiki","from":{"fname":"aws.svc.event-bridge","id":"7n3tUhrwbvz8nNu0bTlWz","vaultName":"tech"},"value":"aws.svc.fargate","alias":"Fargate","position":{"start":{"line":45,"column":157,"offset":2925},"end":{"line":45,"column":184,"offset":2952},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.fargate"}},{"type":"wiki","from":{"fname":"aws.svc.event-bridge","id":"7n3tUhrwbvz8nNu0bTlWz","vaultName":"tech"},"value":"general.arch.SOA.rules-engine","alias":"rules engine","position":{"start":{"line":49,"column":5,"offset":3078},"end":{"line":49,"column":51,"offset":3124},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.arch.SOA.rules-engine"}},{"from":{"fname":"serverless-framework","id":"nRb6Im4Kcmc2ZWE7K1jZ1","vaultName":"tech"},"type":"backlink","position":{"start":{"line":9,"column":78,"offset":538},"end":{"line":9,"column":112,"offset":572},"indent":[]},"value":"aws.svc.event-bridge"},{"from":{"fname":"aws.SDK","id":"2cSifsJxXSKuWR8JiGxJe","vaultName":"tech"},"type":"backlink","position":{"start":{"line":15,"column":200,"offset":1013},"end":{"line":15,"column":236,"offset":1049},"indent":[]},"value":"aws.svc.event-bridge"},{"from":{"fname":"aws.svc","id":"QukN1H4jrogOyBjotZd7U","vaultName":"tech"},"type":"backlink","position":{"start":{"line":6,"column":3,"offset":112},"end":{"line":6,"column":39,"offset":148},"indent":[]},"value":"aws.svc.event-bridge"},{"from":{"fname":"aws.svc.SNS","id":"3E2oC3PsnDWowLW9hK0eZ","vaultName":"tech"},"type":"backlink","position":{"start":{"line":22,"column":8,"offset":1224},"end":{"line":22,"column":44,"offset":1260},"indent":[]},"value":"aws.svc.event-bridge"},{"from":{"fname":"general.patterns.messaging","id":"Skg9BUUhw2xIBmwrkEP4u","vaultName":"tech"},"type":"backlink","position":{"start":{"line":33,"column":8,"offset":2700},"end":{"line":33,"column":44,"offset":2736},"indent":[]},"value":"aws.svc.event-bridge"},{"from":{"fname":"general.patterns.messaging.DLQ","id":"0pUoWXrTC07Z9B1ijwosK","vaultName":"tech"},"type":"backlink","position":{"start":{"line":10,"column":43,"offset":453},"end":{"line":10,"column":79,"offset":489},"indent":[]},"value":"aws.svc.event-bridge"},{"from":{"fname":"general.patterns.messaging.DLQ","id":"0pUoWXrTC07Z9B1ijwosK","vaultName":"tech"},"type":"backlink","position":{"start":{"line":11,"column":3,"offset":546},"end":{"line":11,"column":39,"offset":582},"indent":[]},"value":"aws.svc.event-bridge"}],"anchors":{"how-it-works":{"type":"header","text":"How it works","value":"how-it-works","line":33,"column":0,"depth":3},"targets":{"type":"header","text":"Targets","value":"targets","line":50,"column":0,"depth":3},"rules":{"type":"header","text":"Rules","value":"rules","line":57,"column":0,"depth":3},"schema-registry":{"type":"header","text":"Schema Registry","value":"schema-registry","line":69,"column":0,"depth":3},"competing-solutions":{"type":"header","text":"Competing Solutions","value":"competing-solutions","line":72,"column":0,"depth":3}},"children":["oumG4nMOhqwkG8i87ei2J"],"parent":"QukN1H4jrogOyBjotZd7U","data":{}},"body":"<h1 id=\"eventbridge\">EventBridge<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#eventbridge\"></a></h1>\n<p>EventBridge is a serverless <a href=\"/notes/csPOCpGsdV9SQed4lZyWh\">event bus</a>, implementing the <a href=\"/notes/NpY4iv9TwpGJODbVesQYe\">pub/sub</a> architectural pattern.</p>\n<ul>\n<li>goal is to make it easier to build event-driven apps at scale using events originating from our applications.</li>\n</ul>\n<p>EventBridge logically separates routing using event buses, and you implement the routing logic using rules (ie. it has a built-in rules engine).</p>\n<ul>\n<li>You can filter and transform incoming messages at the service level, and route events to multiple targets\n<ul>\n<li>Matched events can be sent to a host of target destination, such as <a href=\"/notes/OSdV9FvBG3wDbRNLllg0V\">Lambdas</a>, other Event Bridges, or even HTTP endpoints.</li>\n</ul>\n</li>\n<li>It also comes with schema registry</li>\n</ul>\n<p>EventBridge may be used to help us implement an <a href=\"/notes/D40foBDBtVWxx0BmKPDLJ\">Event-driven architecture</a></p>\n<p>Data Sources may include:</p>\n<ul>\n<li>our own applications</li>\n<li>SaaS applications (<a href=\"https://aws.amazon.com/eventbridge/integrations/\">list of 3rd party integrations</a>)\n<ul>\n<li>meaning we can authorize supported SaaS providers to send events directly from their EventBridge event bus to partner event buses in your account.</li>\n</ul>\n</li>\n<li>AWS services</li>\n</ul>\n<p>Targets may include:</p>\n<ul>\n<li>HTTP endpoints</li>\n<li>other AWS services (e.g. other event buses, <a href=\"/notes/OSdV9FvBG3wDbRNLllg0V\">Lambdas</a>, <a href=\"/notes/gJBzCsQsFbZ0AESictJ8g\">Cloudwatch</a>)</li>\n</ul>\n<p>A single bus of EventBridge can handle tens of thousands of concurrent events, so it is conceivable that you'd only have a single bus for one business case.</p>\n<ul>\n<li>In other words, each user of your application wouldn't need have their own associated bus; all events no matter which users they are associated with can exist within a single bus.</li>\n</ul>\n<p>EventBridge provides at-least-once event delivery to targets, including retry with exponential backoff for up to 24 hours.</p>\n<h3 id=\"how-it-works\">How it works<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how-it-works\"></a></h3>\n<p>EventBridge receives an event and applies a rule to route the event to a target.</p>\n<ul>\n<li>Each event contains a json event body, as well as several metadata fields.</li>\n</ul>\n<p>We the programmer provide EventBridge with a list of rules, which it uses to match events to targets</p>\n<ul>\n<li>These matches are made based on either <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html\">event patterns</a>, or schedules.\n<ul>\n<li>ex. when an <a href=\"/notes/T3myEQpNJczlAwIZCMpQB\">EC2</a> instance changes from pending to running, you can have a rule that sends the event to a Lambda function.</li>\n</ul>\n</li>\n</ul>\n<p>All events that arrive at the doorstep of EventBridge will be associated with a particular <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-bus.html\">event bus</a></p>\n<ul>\n<li>rules are tied to one specific event bus.</li>\n<li>EventBridge comes with a default event bus out of the box, which receives events from AWS services.</li>\n</ul>\n<p>Event bridge doesn't enforce ordering.</p>\n<ul>\n<li>if ordering is something we need, <a href=\"/notes/WQoMTf6VXBaxCgksXAVsj\">Kafka</a> might be a more suitable alternative</li>\n</ul>\n<hr>\n<h3 id=\"targets\">Targets<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#targets\"></a></h3>\n<p>Targets allow us to do things like invoke a Lambda, start execution on a <a href=\"/notes/JzPLtwqCbwO0vc2SqmxAE\">step function</a>, start a task with <a href=\"/notes/eW5X2mPVNTsXtgjdLpyEk\">ESC</a> or <a href=\"/notes/03HDpnWl7zMR8KAWFSJ9B\">Fargate</a></p>\n<p>The event bridge can be provisioned and manipulated programmatically to route incoming events to various destinations.</p>\n<p>The <a href=\"/notes/ffzLi2LmzZDiaqhpuOUDh\">rules engine</a> allows for advanced pattern matching based on source, subject, version, or any key of the JSON body. Matched events can then be sent to a host of target destinations including Lambdas, other EventBridges, or even HTTP endpoints.</p>\n<h3 id=\"rules\">Rules<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#rules\"></a></h3>\n<p>The rules engine provides the business logic of our EventBridge. This is where we (the configurer of EventBridge) can create rules that match selected events in the stream and route them to targets to take action.</p>\n<p>This is where we the configurer of EventBridge determine which events we are interested in, and what we will do when we encounter those events.</p>\n<ul>\n<li>namely, the event is routed to the target(s) associated with that rule.</li>\n</ul>\n<p>You can also use rules to take action on a predetermined schedule. For example, you can configure rules to:</p>\n<ul>\n<li>Automatically invoke an Lambda function to update DNS entries when an event notifies you that Amazon EC2 instance enters the running state.</li>\n<li>Direct specific API records from CloudTrail to an Amazon Kinesis data stream for detailed analysis of potential security or availability risks.</li>\n<li>Periodically invoke a built-in target to create a snapshot of an Amazon EBS volume.</li>\n</ul>\n<h3 id=\"schema-registry\">Schema Registry<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#schema-registry\"></a></h3>\n<p>EventBridge has a built-in <a href=\"https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-schema.html\">schema registry</a></p>\n<h3 id=\"competing-solutions\">Competing Solutions<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#competing-solutions\"></a></h3>\n<ul>\n<li>Google PubSub</li>\n</ul>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/notes/oumG4nMOhqwkG8i87ei2J\">EventBridge Testing</a></li>\n</ol>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/nRb6Im4Kcmc2ZWE7K1jZ1\">Serverless Framework</a></li>\n<li><a href=\"/notes/2cSifsJxXSKuWR8JiGxJe\">SDK</a></li>\n<li><a href=\"/notes/QukN1H4jrogOyBjotZd7U\">AWS Services</a></li>\n<li><a href=\"/notes/3E2oC3PsnDWowLW9hK0eZ\">SNS (Simple Notification Service)</a></li>\n<li><a href=\"/notes/Skg9BUUhw2xIBmwrkEP4u\">Messaging Pattern</a></li>\n<li><a href=\"/notes/0pUoWXrTC07Z9B1ijwosK\">Dead Letter Queue</a></li>\n</ul>","noteIndex":{"id":"olZIVfSs2uLLr3BppFh4K","title":"Digital Garden","desc":"","updated":1674517603573,"created":1615482407722,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"effb007003ca6a91d7fd0c293e1d2436","links":[{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"testing.method.unit","alias":"unit testing","position":{"start":{"line":18,"column":121,"offset":1146},"end":{"line":18,"column":157,"offset":1182},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"testing.method.unit"}},{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"general.arch.microservice","alias":"microservices","position":{"start":{"line":18,"column":188,"offset":1213},"end":{"line":18,"column":231,"offset":1256},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.arch.microservice"}},{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"paradigm.oop","alias":"OOP","position":{"start":{"line":36,"column":227,"offset":2718},"end":{"line":36,"column":247,"offset":2738},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm.oop"}}],"anchors":{"tags":{"type":"header","text":"Tags","value":"tags","line":46,"column":0,"depth":3},"resources":{"type":"header","text":"Resources","value":"resources","line":55,"column":0,"depth":2},"ue-unexamined-resources":{"type":"header","text":"UE (Unexamined) Resources","value":"ue-unexamined-resources","line":56,"column":0,"depth":3},"e-examined-resources":{"type":"header","text":"E (Examined) Resources","value":"e-examined-resources","line":59,"column":0,"depth":3},"resources-1":{"type":"header","text":"Resources","value":"resources-1","line":62,"column":0,"depth":3}},"children":["40ubf88tephzbdjte8cdsa0","zFMjbn3xihVNHjUIdZCD1","IK6NOKemuDjhfstJBovKL","ZaTr28eWk1DrXOEsc1YVb","Vi0WYVLZunVM9iR8XZJn3","ngAbg7gluvbt1bY1UIRsi","RCPPXSakm5TvKka8kOmVp","LIcuGYV0DDt1VWbvH6Sed","MPx8ykTP57I40WTZvTP7f","ZU5WmdTG1bHoE8RcmZXZG","jqWiyYJff92RjXuUQt9PQ","KihijM8OQvZ4pASkkhqzL","F9vyqvls3OBCujtukqKhy","k6jxm2b3edgkhbordpuz6v1","facc2b01-755a-409f-99f6-57bef2d1501f","bZumdyapJ2H0wWWOmJ45i","elqpgoe2r951si4xrhujppj","m5ov42Vm6mR7RQWTvl1NW","cw8cerc0cos8lh871oz8rtf","PZxxZ4iESzSlbbHJKxuAZ","UDu62Pa6BaRqlG8uGoMhy","u3zcndycwqessho5h6x0nz9","ZgCUp366YrF2Tyky2NT73","DVpVUmavSoVDA7UIlPzLX","nMCtMXVvjBsJk3iw1zoIO","ANfx9Z4a6ZA0uJuSHtbIJ","BkG557LKUYbH1DnxprEVT","1TaH8zDTM98FZ9SYaeXLM","02v7ymc144e5c4pv3edkud7","dc79799f-a55d-48ab-a8be-c48adb1b19c0","f6feef57-b8f5-451f-a09a-7b63f6a07183","4sz47Y0LKs1Si73rWtyyh","g7ulqi8no93ezeocbesc3ll","5a9fb1df-478e-4687-9be0-5cb97e61ec57","1374e9e9-1cbc-4e1f-b1ca-66b8569533dd","D8Z3rjXkSj2EOymXQXF4Z","np3c1ykvnjqv5xoombpfwqz","f529cc34-aba0-45ca-ad7e-02ddda318941","0zcauha3il2NqtxZazIo7","9bbd6f68-03b2-41f4-92e4-2ca313e8b450","5a2ab598-fa7e-4471-8bda-9f5831b679ae","uV6w4mZPoohWyZV4Xaad0","QHXEIyeZGIGMVi5Q52UWI","RgE0mZLaUjPftFPZsiAoe","mytCOts26Pidush65tdRW","fwUzxfLSPMH1eL8oBoLWx","wazdsda6h25x66edvfmeuiv","TbW7PM9bg1y5TGkiWwQ8b","xiSIDeEtIc8X0lpUQlppI","0jxgntiLNHWFuCbzqtFGF","GkdMprLUe4QQULBxmGN6V","4SYc6v5hxY5g6Ip6kjpwO","czi7ilt2i1uoqm1f2otbntj","fqVQpS9FBiXgKsZX3R3sJ","L5JUZlGAGvTxrsEBB7DY8","ttyri4pwfyn5lcx0vp9804o","TeTedoeS2LdHPR632eCpM","ulicRRwo3lSFzh3tMfWH9","p7d24vyb8m00ombzn34t50c","e65188a1-177e-4ab2-99f9-75f85d537621","fajYnbVhCRDi74xn0H30R","bArGdGwqo3iFkyKMyE7qR","4Dcp7gbEVoLLgfu7bXFai","5d700782-fb81-416e-83f9-5dd88260e350","zubgzhNFE6KlTgXcjTz6O","8lpdfWa0cbSq1XJQbcYcY","2psluywdc416t7vrql0m058","17I8ZksXvqCH1mRtZDjHp","kF916Ow84qpJJeMRkWMIo","tMLkLcrIHHBz56xVmBLkP","CSePBQ6q7qhowKESqVwt7","laZ4OfLhZNK1Kuy6GaWUr","z5IJblOknQhMzZ5QZh4ye","N36FHxfxzwJfxDY3miWyX","3bb25f58-2b50-4fa3-af55-48ea9f88a081","7x07qjgbitozdfszqzuy7ix","u93Rz4fEWGu6VBR30Zraf","9hjMHnKvYT4jLKvuDSXaV","qC5GxCZBmNb4Ip6c0kU8x","LgW7mTIALODoXc54B3p6S","UYPxfHBFWX7fb6hHU5bB6","74lYtC8NKpCzcyFOZTfR1","sEoBNAEuaTxwSmTXDonZt","dj0jr9mpvs62e2pkg3zc3yy","z8ie0xjogb6ht7gzowav5xr","qxSOd6SPN8qf9ZUojVFDX","WQoMTf6VXBaxCgksXAVsj","2Mw4XgfyCHXHNOX5yoCIY","qcdt2f7jo51muquo5r95dpo","0XJqmcdtcMZu66glBI5O8","lK8r8BXS4ThiUTe4xKIZe","93de42ca-53ea-460a-baa7-b9ec5c47cb1e","Rxs2jaGpdFzqYtP7lAJFJ","aO8W81Z0PyIb6Hs7nOHPW","lhzisalkebu4w5n01np07i0","7b5l4b6fi65n7sv9org5q1l","I01hENHnh8Tqu3Ok8sLzG","03o3n0hz9v9jtb7j889zpd4","evqsPNutOaZ8hcBCqxFQu","zhhxcjZUHdU8uRLwGb9Zh","G1aFACZB2ooWGMGwyd3ZW","YWy1C4tgoaCcw1m8JJsr7","Szj3o5iaNxPpesiCqwrbu","613syb18hb3v0u1ydvor7ru","XhvCDW3fIw6h6MhY5ticq","Q70g7SusFZBQXzkuQifv4","AzfWDH3wp7jFpL2EYxBcW","y0fwpZ9qMqirsLiFyOciU","ZF8xj8wwDUqKlrwTrCFZ1","tAJvhqhdfyZZa87QHq1TU","4hRmipi8lxpBLyzWu5JVB","iTg0C7QjvnmqBZeEigJNs","3babc3d2-79ae-470a-9c06-ab8bba2e684e","bF3UsMFya3fMeXWDspVov","ULkfbL9WpktbVYnzhl6Jw","PpNOO8JYWe6dM8wruSa7x","di40pCxDn7IiqE8lFdD46","rmW0mkerqV35I8QPji6lM","3IFIK1ByzeIxZCByryGLN","iImkYAKfkw3beAl6pLbDn","ecDe8DNWrkeQTwpTEvHje","i2it5id8qwtg27n4usg8bo1","Yqhdd9mSJGN7OJOeyoSD2","Ws5tah8tpeyn9tK8VBTg8","gWAg15uBJgkS2B0wcpMAa","l7V3v2ep1YdDCt7DOr7Ci","yM2PJBdqJnHpD63cPA6sW","qn0bre7eLbi3QMbCfWkUi","fSu0KxFL41IRouotqmbHs","0gtg24Mj1a1bQFPRGQNlO","7iQPBMltLPLbFEz2qbjPu","yoh4pwoXcfELInGKRdYf6","dCGCWXgAmiOZXbdULT1m6","jMavlje07sNa6hSEIE8WA","Xxm0JE4dKHxrQAaZfzvxD","nRb6Im4Kcmc2ZWE7K1jZ1","PAEBZCyFBZJyR7OoMZ41E","PQ6km8RgRCuyICBPOYz8f","x5tm1nfjzyawwzedy3yitgd","2bhftt8rGuxYu4pFgNqru","hjYIZpHQWuXfeEoGeJEKW","K2M9bQqVq2eQfm29eslKL","X8obW1iKwYsvNgKWGyCzy","yJwSC7hqYIezTFHf5i0Ev","c4Z7ETcOHUILRMH32Sfjw","qiR6dIu857b9M9kTqjOyK","fc2coz74cnfy5czzofx4h5x","Ku1OgHMhELajzo61Gx7ye","LUrfhDWo8wuwZu7CN9TV8","osu6JGOnvXJ5gt3tpqWZY","1a6173cd-cf13-4b34-a522-8350bf9a364f","S2sBltrPfd8a7ICuD7CuH","GLQ2pmkJUNUa93THBDVsD","md6xitz4exia2joa06i490b","oWCuBXOg6JWfZzjmKxmNl","jOmhZ8ovLYTPbpM1vqSDx","p9bov84s0isgkl1ysaw93kk","FraC6xzLy1ei91l1ICyc9","6ceBas2RE9Q4787GDngH7","734cd78d-0bc9-426b-803d-1efc84dfffe5","k4Bb09px6r0FxIRs49SXV","oaG3H1S9IUBO644nGZigu","Ka7agQJkUMRSWN0uFdkWK","si3z090WsiLasMhJBa1Az","hs6rwzt4mogiicoc4gcykbi","ljKAVERmdEiKLK9hXGKBm","zxt3lhonfdhglvijd17ua8c","dd7dopve1dudqkoibkqvti4","923tgifqf59ovv5yldtyi0a","vrjwp01goqw47fqctm4f4lo","c99gdmmppju3r1tth8cb2jx","z2pvn5qxdz84zgygqzxage8"],"parent":null,"data":{},"body":"This Dendron vault of tech knowledge is organized according to domains and their sub-domains, along with specific implementation of those domains.\n\nFor instance, Git itself is a domain. Sub-domains of Git would include things like `commit`,\n`tags`, `reflog` etc. implementations of each of those could be `cli`, `strat`\n(strategies), `inner`, and so on.\n\nThe goal of the wiki is to present data in a manner that is from the perspective\nof a querying user. Here, a user is a programmer wanting to get key information\nfrom a specific domain. For instance, if a user wants to use postgres functions\nand hasn't done them in a while, they should be able to query\n`postgres.functions` to see what information is available to them.\n\nThis wiki has been written with myself in mind. While learning each of these\ndomains, I have been sensitive to the \"aha\" moments and have noted down my\ninsights as they arose. I have refrained from capturing information that I\nconsidered obvious or otherwise non-beneficial to my own understanding.\n\nAs a result, I have allowed myself to use potentially arcane concepts to explain other ones. For example, in my note on [[unit testing|testing.method.unit]], I have made reference to the [[microservices|general.arch.microservice]] note. If these notes were made with the public in mind, this would be a very bad strategy, given that you'd have to understand microservices to be able to draw that same parallel that I've already drawn. Since these notes are written for myself, I have been fine with taking these liberties.\n\nWhat I hope to gain from this wiki is the ability to step away from any\ngiven domain for a long period of time, and be able to be passably useful for\nwhatever my goals are within a short period of time. Of course this is all\nvague sounding, and really depends on the domain along with the ends I am\ntrying to reach.\n\nTo achieve this, the system should be steadfast to:\n- be able to put information in relatively easily, without too much thought\n\trequired to its location. While location is important, Dendron makes it easy\n\tto relocate notes, if it becomes apparent that a different place makes more\n\tsense.\n- be able to extract the information that is needed, meaning there is a\n\thigh-degree in confidence in the location of the information. The idea is\n\tthat information loses a large amount of its value when it is unfindable.\n\tTherefore, a relatively strict ideology should be used when determining\n\twhere a piece of information belongs.\n\t- Some concepts might realistically belong to multiple domains. For instance, the concept of *access modifiers* can be found in both `C#` and `Typescript`. Therefore, this note should be abstracted to a common place, such as [[OOP|paradigm.oop]].\n\nThis Dendron vault is the sister component to the [General Second Brain](https://tech.kyletycholiz.com).\n\n### Tags\nThroughout the garden, I have made use of tags, which give semantic meaning to the pieces of information.\n\n- `ex.` - Denotes an *example* of the preceding piece of information\n- `spec:` - Specifies that the preceding information has some degree of *speculation* to it, and may not be 100% factual. Ideally this gets clarified over time as my understanding develops.\n- `anal:` - Denotes an *analogy* of the preceding information. Often I will attempt to link concepts to others that I have previously learned.\n- `mn:` - Denotes a *mnemonic*\n- `expl:` - Denotes an *explanation*\n\n## Resources\n### UE (Unexamined) Resources\nOften, I come across sources of information that I believe to be high-quality. They may be recommendations or found in some other way. No matter their origin, I may be in a position where I don't have the time to fully examine them (and properly extract notes), or I may not require the information at that moment in time. In cases like these, I will add reference to a section of the note called **UE Resources**. The idea is that in the future when I am ready to examine them, I have a list of resources that I can start with. This is an alternative strategy to compiling browser bookmarks, which I've found can quickly become untenable.\n\n### E (Examined) Resources\nOnce a resource has been thoroughly examined and has been mined for notes, it will be moved from *UE Resources* to *E Resources*. This is to indicate that (in my own estimation), there is nothing more to be gained from the resource that is not already in the note.\n\n### Resources\nThis heading is for inexhaustible resources. \n- A prime example would be a quality website that continually posts articles.  - Another example would be a tool, such as software that measures frequencies in a room to help acoustically treat it.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"../main/tech","name":"tech"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"The Tech Digital Garden of Kyle Tycholiz"},"github":{"cname":"tech.kyletycholiz.com","enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://tech.kyletycholiz.com","duplicateNoteBehavior":{"action":"useVault","payload":["tech"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}