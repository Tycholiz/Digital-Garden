{"pageProps":{"note":{"id":"gEztUcJYazBs8J8k0gi7o","title":"DynamoDB","desc":"","updated":1690256991729,"created":1637621687603,"custom":{},"fname":"aws.svc.dynamo","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"f1ad538edbd1cafa5befcf7fac5df5cb","links":[{"type":"wiki","from":{"fname":"aws.svc.dynamo","id":"gEztUcJYazBs8J8k0gi7o","vaultName":"tech"},"value":"aws.svc.dynamo","alias":"GSIs","position":{"start":{"line":7,"column":101,"offset":395},"end":{"line":7,"column":156,"offset":450},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.dynamo","anchorHeader":"global-secondary-index-gsi,1:"}},{"type":"wiki","from":{"fname":"aws.svc.dynamo","id":"gEztUcJYazBs8J8k0gi7o","vaultName":"tech"},"value":"general.lang.data-structs.tree.B","position":{"start":{"line":22,"column":33,"offset":1603},"end":{"line":22,"column":69,"offset":1639},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.lang.data-structs.tree.B"}},{"type":"wiki","from":{"fname":"aws.svc.dynamo","id":"gEztUcJYazBs8J8k0gi7o","vaultName":"tech"},"value":"redis","position":{"start":{"line":27,"column":8,"offset":2046},"end":{"line":27,"column":17,"offset":2055},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"redis"}},{"type":"wiki","from":{"fname":"aws.svc.dynamo","id":"gEztUcJYazBs8J8k0gi7o","vaultName":"tech"},"value":"aws.svc.dynamo.expression","position":{"start":{"line":59,"column":1,"offset":3317},"end":{"line":59,"column":30,"offset":3346},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"aws.svc.dynamo.expression"}},{"from":{"fname":"flink","id":"ulicRRwo3lSFzh3tMfWH9","vaultName":"tech"},"type":"backlink","position":{"start":{"line":15,"column":179,"offset":1283},"end":{"line":15,"column":206,"offset":1310},"indent":[]},"value":"aws.svc.dynamo"},{"from":{"fname":"nosql","id":"ZF8xj8wwDUqKlrwTrCFZ1","vaultName":"tech"},"type":"backlink","position":{"start":{"line":59,"column":1,"offset":4439},"end":{"line":59,"column":20,"offset":4458},"indent":[]},"value":"aws.svc.dynamo"},{"from":{"fname":"aws.CDK","id":"KutlqQVGLBAdLTslz3D9A","vaultName":"tech"},"type":"backlink","position":{"start":{"line":10,"column":37,"offset":496},"end":{"line":10,"column":64,"offset":523},"indent":[]},"value":"aws.svc.dynamo"},{"from":{"fname":"aws.svc.dynamo","id":"gEztUcJYazBs8J8k0gi7o","vaultName":"tech"},"type":"backlink","position":{"start":{"line":7,"column":101,"offset":395},"end":{"line":7,"column":156,"offset":450},"indent":[]},"value":"aws.svc.dynamo"},{"from":{"fname":"aws.svc.lambda","id":"OSdV9FvBG3wDbRNLllg0V","vaultName":"tech"},"type":"backlink","position":{"start":{"line":78,"column":55,"offset":4142},"end":{"line":78,"column":81,"offset":4168},"indent":[]},"value":"aws.svc.dynamo"},{"from":{"fname":"deploy.distributed.CAP-theorem","id":"ilOPfgNyiPSHOb9tNB6yL","vaultName":"tech"},"type":"backlink","position":{"start":{"line":77,"column":3,"offset":7439},"end":{"line":77,"column":21,"offset":7457},"indent":[]},"value":"aws.svc.dynamo"},{"from":{"fname":"db.distributed.replication.strategies","id":"wbs6c9snnonnyzm8vk2t4b9","vaultName":"tech"},"type":"backlink","position":{"start":{"line":123,"column":9,"offset":10810},"end":{"line":123,"column":36,"offset":10837},"indent":[]},"value":"aws.svc.dynamo"}],"anchors":{"when-to-use-dynamo":{"type":"header","text":"When to use Dynamo","value":"when-to-use-dynamo","line":19,"column":0,"depth":3},"data-is-stored-as-partitions":{"type":"header","text":"Data is stored as partitions","value":"data-is-stored-as-partitions","line":27,"column":0,"depth":2},"terms":{"type":"header","text":"Terms","value":"terms","line":36,"column":0,"depth":2},"items":{"type":"header","text":"Items","value":"items","line":37,"column":0,"depth":3},"attribute":{"type":"header","text":"Attribute","value":"attribute","line":40,"column":0,"depth":3},"marshalling":{"type":"header","text":"Marshalling","value":"marshalling","line":43,"column":0,"depth":3},"example":{"type":"header","text":"Example","value":"example","line":47,"column":0,"depth":4},"expression":{"type":"header","text":"Expression","value":"expression","line":64,"column":0,"depth":2},"dynamodb-in-practice":{"type":"header","text":"DynamoDB in practice","value":"dynamodb-in-practice","line":69,"column":0,"depth":2},"ue-resources":{"type":"header","text":"UE Resources","value":"ue-resources","line":89,"column":0,"depth":2}},"children":["hC9DXmocwzmceqrXwVm3a","ju2bxxwj4ma3dr4wbtesq21","0idz4fvzgfj8npryf13eelb","5uuohllUAxCmbMFJb8Pj9"],"parent":"QukN1H4jrogOyBjotZd7U","data":{}},"body":"<h1 id=\"dynamodb\">DynamoDB<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dynamodb\"></a></h1>\n<p>Dynamo is a fully-managed, highly available schemaless NoSQL database.</p>\n<ul>\n<li>The DB engine can manage structured or semi-structured data, including JSON documents.</li>\n<li>supports key–value and document data structures</li>\n</ul>\n<p>Uses tables, though this concept is loosely related to how tables are used in SQL.</p>\n<ul>\n<li>essentially, we would include all domain primitives of a single domain in a Dynamo table, and use <a href=\"/notes/gEztUcJYazBs8J8k0gi7o#global-secondary-index-gsi1\">GSIs</a> as our means of \"JOINing\" the domain primitives together.\n<ul>\n<li>each GSI should represent an access pattern (ie. how that data is accessed, such as \"get all people by gender\", \"get all last names by country\")</li>\n</ul>\n</li>\n<li>One of the biggest mistakes people make with dynamo is thinking that it's just a relational database with no relations. It's not.</li>\n</ul>\n<p>To get the full benefits of Dynamo, and it requires you often to design your data layer very well up-front. Dynamo is not recommended for a system that hasn't mostly stabilized in design.</p>\n<h3 id=\"when-to-use-dynamo\">When to use Dynamo<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#when-to-use-dynamo\"></a></h3>\n<p>Dynamo is really good for high read:write ratio (at least 4:1), meaning Dynamo is a good candidate for high-read applications.</p>\n<ul>\n<li>By default each DynamoDB table is allocated 40,000 read units and 40,000 write units of capacity per second. </li>\n</ul>\n<p>Dynamo may support large, complex schemas but it gets more difficult to maintain and understand. Dynamo is a better candidate for applications with simpler schemas.</p>\n<p>Dynamo offers effortless cross-region replication. Therefore, it is a good candidate for apps that distributed geographically.</p>\n<h2 id=\"data-is-stored-as-partitions\">Data is stored as partitions<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#data-is-stored-as-partitions\"></a></h2>\n<p>Data is stored as a partitioned <a href=\"/notes/UE8OS2s713jEk2CmjiAet\">B-tree</a>.</p>\n<ul>\n<li>Items are distributed across 10-GB storage units, called partitions (physical storage internal to DynamoDB)</li>\n<li>Each table has one or more partitions</li>\n<li>DynamoDB uses the partition key’s value as an input to an internal hash function. The output from the hash function determines the partition in which the item is stored. Each item’s location is determined by the hash value of its partition key.</li>\n</ul>\n<p>Unlike <a href=\"/notes/gWAg15uBJgkS2B0wcpMAa\">Redis</a>, in that it is immediately consistent and highly-durable, centered around that single data structure.</p>\n<ul>\n<li>If you put something into DynamoDB, you’ll be able to read it back immediately and, for all practical purposes, you can assume that what you have put will never get lost.</li>\n</ul>\n<h2 id=\"terms\">Terms<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#terms\"></a></h2>\n<h3 id=\"items\">Items<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#items\"></a></h3>\n<p>Analogous with row of a SQL table</p>\n<h3 id=\"attribute\">Attribute<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#attribute\"></a></h3>\n<p>Analogous with column name of a SQL table</p>\n<h3 id=\"marshalling\">Marshalling<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#marshalling\"></a></h3>\n<p>Before we can Create/Update a record in DynamoDB, a plain JS Object needs to be converted into a DynamoDB Record.</p>\n<ul>\n<li>Marshalling refers to our ability to convert a Javascript object into a DynamoDB Record.</li>\n</ul>\n<h4 id=\"example\">Example<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#example\"></a></h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">AWS</span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">DynamoDB</span></span><span class=\"token punctuation\">.</span><span class=\"token property-access\"><span class=\"token maybe-class-name\">Converter</span></span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">unmarshall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"updated_at\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"N\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"146548182\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"uuid\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"S\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"status\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">{</span><span class=\"token string-property property\">\"S\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"new\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// { updated_at: 146548182, uuid: 'foo', status: 'new' }</span>\n</code></pre>\n<hr>\n<p>Dynamo provides seamless integration with services such as Redshift (large scale data analysis), Cognito (identity pools), Elastic Map Reduce (EMR), Data Pipeline, Kinesis, and S3. Also, has tight integration with AWS lambda via Streams and aligns with the server-less philosophy; automatic scaling according to your application load, pay-per-what-you-use pricing, easy to get started with, and no servers to manage.</p>\n<hr>\n<h2 id=\"expression\">Expression<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#expression\"></a></h2>\n<p><a href=\"/notes/ju2bxxwj4ma3dr4wbtesq21\">Expression</a></p>\n<hr>\n<h2 id=\"dynamodb-in-practice\">DynamoDB in practice<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dynamodb-in-practice\"></a></h2>\n<p>The general rule of thumb is to choose Dynamo for low throughput apps as writes are expensive and consistent reads are twice the cost of eventually consistent reads</p>\n<p>When to use DynamoDB?</p>\n<ul>\n<li>In case you are looking for a database that can handle simple key-value queries but those queries are very large in number</li>\n<li>In case you are working with OLTP workload like online ticket booking or banking where the data needs to be highly consistent</li>\n</ul>\n<p>When not use DynamoDB?</p>\n<ul>\n<li>In cases where you have to do computations on the data.\n<ul>\n<li>Relational databases run their queries close to the data, so if you’re trying to calculate the sum total value of orders per customer, then that rollup gets done while reading the data, and only the final summary (one row per customer) gets sent over the network. However, if you were to do this with DynamoDB, you’d have to get all the customer orders (one row per order), which involves a lot more data over the network, and then you have to do the rollup in your application, which is far away from the data.</li>\n</ul>\n</li>\n<li>If worried about high vendor lock-in.</li>\n</ul>\n<p>Pricing\n$256/TB/month</p>\n<p>By default, you should start with DynamoDB’s on-demand pricing and only consider the provisioned capacity as cost optimization. On-demand costs $1.25 per million writes, and $0.25 per million reads.</p>\n<ul>\n<li>Then, if your usage grows significantly, you will almost always want to consider moving to provisioned capacity (significant cost savings).</li>\n<li>if you believe that on-demand pricing is too expensive, then DynamoDB will very likely be too expensive, even with provisioned capacity. In that case, you might want to consider a relational database.</li>\n</ul>\n<h2 id=\"ue-resources\">UE Resources<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#ue-resources\"></a></h2>\n<ul>\n<li><a href=\"https://docs.aws.amazon.com/prescriptive-guidance/latest/dynamodb-data-modeling/steps.html\">Determining your data model in Dynamo</a></li>\n<li><a href=\"https://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf\">Dynamo whitepaper</a></li>\n</ul>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/notes/hC9DXmocwzmceqrXwVm3a\">Dynamo CLI</a></li>\n<li><a href=\"/notes/5uuohllUAxCmbMFJb8Pj9\">Dynamo Streams</a></li>\n<li><a href=\"/notes/ju2bxxwj4ma3dr4wbtesq21\">Expression</a></li>\n<li><a href=\"/notes/0idz4fvzgfj8npryf13eelb\">Keys</a></li>\n</ol>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/ulicRRwo3lSFzh3tMfWH9\">Apache Flink</a></li>\n<li><a href=\"/notes/ZF8xj8wwDUqKlrwTrCFZ1\">Nosql</a></li>\n<li><a href=\"/notes/KutlqQVGLBAdLTslz3D9A\">CDK</a></li>\n<li><a href=\"/notes/gEztUcJYazBs8J8k0gi7o\">DynamoDB</a></li>\n<li><a href=\"/notes/OSdV9FvBG3wDbRNLllg0V\">AWS Lambda</a></li>\n<li><a href=\"/notes/ilOPfgNyiPSHOb9tNB6yL\">CAP Theorem</a></li>\n<li><a href=\"/notes/wbs6c9snnonnyzm8vk2t4b9\">Strategies</a></li>\n</ul>","noteIndex":{"id":"olZIVfSs2uLLr3BppFh4K","title":"Digital Garden","desc":"","updated":1674517603573,"created":1615482407722,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"../main/tech","name":"tech"},"contentHash":"effb007003ca6a91d7fd0c293e1d2436","links":[{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"testing.method.unit","alias":"unit testing","position":{"start":{"line":18,"column":121,"offset":1146},"end":{"line":18,"column":157,"offset":1182},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"testing.method.unit"}},{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"general.arch.microservice","alias":"microservices","position":{"start":{"line":18,"column":188,"offset":1213},"end":{"line":18,"column":231,"offset":1256},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"general.arch.microservice"}},{"type":"wiki","from":{"fname":"root","id":"olZIVfSs2uLLr3BppFh4K","vaultName":"tech"},"value":"paradigm.oop","alias":"OOP","position":{"start":{"line":36,"column":227,"offset":2718},"end":{"line":36,"column":247,"offset":2738},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"paradigm.oop"}}],"anchors":{"tags":{"type":"header","text":"Tags","value":"tags","line":46,"column":0,"depth":3},"resources":{"type":"header","text":"Resources","value":"resources","line":55,"column":0,"depth":2},"ue-unexamined-resources":{"type":"header","text":"UE (Unexamined) Resources","value":"ue-unexamined-resources","line":56,"column":0,"depth":3},"e-examined-resources":{"type":"header","text":"E (Examined) Resources","value":"e-examined-resources","line":59,"column":0,"depth":3},"resources-1":{"type":"header","text":"Resources","value":"resources-1","line":62,"column":0,"depth":3}},"children":["40ubf88tephzbdjte8cdsa0","zFMjbn3xihVNHjUIdZCD1","IK6NOKemuDjhfstJBovKL","ZaTr28eWk1DrXOEsc1YVb","Vi0WYVLZunVM9iR8XZJn3","ngAbg7gluvbt1bY1UIRsi","RCPPXSakm5TvKka8kOmVp","LIcuGYV0DDt1VWbvH6Sed","MPx8ykTP57I40WTZvTP7f","ZU5WmdTG1bHoE8RcmZXZG","jqWiyYJff92RjXuUQt9PQ","KihijM8OQvZ4pASkkhqzL","F9vyqvls3OBCujtukqKhy","k6jxm2b3edgkhbordpuz6v1","facc2b01-755a-409f-99f6-57bef2d1501f","bZumdyapJ2H0wWWOmJ45i","elqpgoe2r951si4xrhujppj","m5ov42Vm6mR7RQWTvl1NW","cw8cerc0cos8lh871oz8rtf","PZxxZ4iESzSlbbHJKxuAZ","UDu62Pa6BaRqlG8uGoMhy","u3zcndycwqessho5h6x0nz9","ZgCUp366YrF2Tyky2NT73","DVpVUmavSoVDA7UIlPzLX","nMCtMXVvjBsJk3iw1zoIO","ANfx9Z4a6ZA0uJuSHtbIJ","BkG557LKUYbH1DnxprEVT","1TaH8zDTM98FZ9SYaeXLM","02v7ymc144e5c4pv3edkud7","dc79799f-a55d-48ab-a8be-c48adb1b19c0","f6feef57-b8f5-451f-a09a-7b63f6a07183","4sz47Y0LKs1Si73rWtyyh","g7ulqi8no93ezeocbesc3ll","5a9fb1df-478e-4687-9be0-5cb97e61ec57","1374e9e9-1cbc-4e1f-b1ca-66b8569533dd","D8Z3rjXkSj2EOymXQXF4Z","np3c1ykvnjqv5xoombpfwqz","f529cc34-aba0-45ca-ad7e-02ddda318941","0zcauha3il2NqtxZazIo7","9bbd6f68-03b2-41f4-92e4-2ca313e8b450","5a2ab598-fa7e-4471-8bda-9f5831b679ae","uV6w4mZPoohWyZV4Xaad0","QHXEIyeZGIGMVi5Q52UWI","RgE0mZLaUjPftFPZsiAoe","mytCOts26Pidush65tdRW","fwUzxfLSPMH1eL8oBoLWx","wazdsda6h25x66edvfmeuiv","TbW7PM9bg1y5TGkiWwQ8b","xiSIDeEtIc8X0lpUQlppI","0jxgntiLNHWFuCbzqtFGF","GkdMprLUe4QQULBxmGN6V","4SYc6v5hxY5g6Ip6kjpwO","czi7ilt2i1uoqm1f2otbntj","fqVQpS9FBiXgKsZX3R3sJ","L5JUZlGAGvTxrsEBB7DY8","ttyri4pwfyn5lcx0vp9804o","TeTedoeS2LdHPR632eCpM","ulicRRwo3lSFzh3tMfWH9","p7d24vyb8m00ombzn34t50c","e65188a1-177e-4ab2-99f9-75f85d537621","fajYnbVhCRDi74xn0H30R","bArGdGwqo3iFkyKMyE7qR","4Dcp7gbEVoLLgfu7bXFai","5d700782-fb81-416e-83f9-5dd88260e350","zubgzhNFE6KlTgXcjTz6O","8lpdfWa0cbSq1XJQbcYcY","2psluywdc416t7vrql0m058","17I8ZksXvqCH1mRtZDjHp","kF916Ow84qpJJeMRkWMIo","tMLkLcrIHHBz56xVmBLkP","CSePBQ6q7qhowKESqVwt7","laZ4OfLhZNK1Kuy6GaWUr","z5IJblOknQhMzZ5QZh4ye","N36FHxfxzwJfxDY3miWyX","3bb25f58-2b50-4fa3-af55-48ea9f88a081","7x07qjgbitozdfszqzuy7ix","u93Rz4fEWGu6VBR30Zraf","9hjMHnKvYT4jLKvuDSXaV","qC5GxCZBmNb4Ip6c0kU8x","LgW7mTIALODoXc54B3p6S","UYPxfHBFWX7fb6hHU5bB6","74lYtC8NKpCzcyFOZTfR1","sEoBNAEuaTxwSmTXDonZt","dj0jr9mpvs62e2pkg3zc3yy","z8ie0xjogb6ht7gzowav5xr","qxSOd6SPN8qf9ZUojVFDX","WQoMTf6VXBaxCgksXAVsj","2Mw4XgfyCHXHNOX5yoCIY","qcdt2f7jo51muquo5r95dpo","0XJqmcdtcMZu66glBI5O8","lK8r8BXS4ThiUTe4xKIZe","93de42ca-53ea-460a-baa7-b9ec5c47cb1e","Rxs2jaGpdFzqYtP7lAJFJ","aO8W81Z0PyIb6Hs7nOHPW","lhzisalkebu4w5n01np07i0","7b5l4b6fi65n7sv9org5q1l","I01hENHnh8Tqu3Ok8sLzG","03o3n0hz9v9jtb7j889zpd4","evqsPNutOaZ8hcBCqxFQu","zhhxcjZUHdU8uRLwGb9Zh","G1aFACZB2ooWGMGwyd3ZW","YWy1C4tgoaCcw1m8JJsr7","Szj3o5iaNxPpesiCqwrbu","613syb18hb3v0u1ydvor7ru","XhvCDW3fIw6h6MhY5ticq","Q70g7SusFZBQXzkuQifv4","AzfWDH3wp7jFpL2EYxBcW","y0fwpZ9qMqirsLiFyOciU","ZF8xj8wwDUqKlrwTrCFZ1","tAJvhqhdfyZZa87QHq1TU","4hRmipi8lxpBLyzWu5JVB","iTg0C7QjvnmqBZeEigJNs","3babc3d2-79ae-470a-9c06-ab8bba2e684e","bF3UsMFya3fMeXWDspVov","ULkfbL9WpktbVYnzhl6Jw","PpNOO8JYWe6dM8wruSa7x","di40pCxDn7IiqE8lFdD46","rmW0mkerqV35I8QPji6lM","3IFIK1ByzeIxZCByryGLN","iImkYAKfkw3beAl6pLbDn","ecDe8DNWrkeQTwpTEvHje","i2it5id8qwtg27n4usg8bo1","Yqhdd9mSJGN7OJOeyoSD2","Ws5tah8tpeyn9tK8VBTg8","gWAg15uBJgkS2B0wcpMAa","l7V3v2ep1YdDCt7DOr7Ci","yM2PJBdqJnHpD63cPA6sW","qn0bre7eLbi3QMbCfWkUi","fSu0KxFL41IRouotqmbHs","0gtg24Mj1a1bQFPRGQNlO","7iQPBMltLPLbFEz2qbjPu","yoh4pwoXcfELInGKRdYf6","dCGCWXgAmiOZXbdULT1m6","jMavlje07sNa6hSEIE8WA","Xxm0JE4dKHxrQAaZfzvxD","nRb6Im4Kcmc2ZWE7K1jZ1","PAEBZCyFBZJyR7OoMZ41E","PQ6km8RgRCuyICBPOYz8f","x5tm1nfjzyawwzedy3yitgd","2bhftt8rGuxYu4pFgNqru","hjYIZpHQWuXfeEoGeJEKW","K2M9bQqVq2eQfm29eslKL","X8obW1iKwYsvNgKWGyCzy","yJwSC7hqYIezTFHf5i0Ev","c4Z7ETcOHUILRMH32Sfjw","qiR6dIu857b9M9kTqjOyK","fc2coz74cnfy5czzofx4h5x","Ku1OgHMhELajzo61Gx7ye","LUrfhDWo8wuwZu7CN9TV8","osu6JGOnvXJ5gt3tpqWZY","1a6173cd-cf13-4b34-a522-8350bf9a364f","S2sBltrPfd8a7ICuD7CuH","GLQ2pmkJUNUa93THBDVsD","md6xitz4exia2joa06i490b","oWCuBXOg6JWfZzjmKxmNl","jOmhZ8ovLYTPbpM1vqSDx","p9bov84s0isgkl1ysaw93kk","FraC6xzLy1ei91l1ICyc9","6ceBas2RE9Q4787GDngH7","734cd78d-0bc9-426b-803d-1efc84dfffe5","k4Bb09px6r0FxIRs49SXV","oaG3H1S9IUBO644nGZigu","Ka7agQJkUMRSWN0uFdkWK","si3z090WsiLasMhJBa1Az","hs6rwzt4mogiicoc4gcykbi","ljKAVERmdEiKLK9hXGKBm","zxt3lhonfdhglvijd17ua8c","dd7dopve1dudqkoibkqvti4","923tgifqf59ovv5yldtyi0a","vrjwp01goqw47fqctm4f4lo","c99gdmmppju3r1tth8cb2jx","z2pvn5qxdz84zgygqzxage8"],"parent":null,"data":{},"body":"This Dendron vault of tech knowledge is organized according to domains and their sub-domains, along with specific implementation of those domains.\n\nFor instance, Git itself is a domain. Sub-domains of Git would include things like `commit`,\n`tags`, `reflog` etc. implementations of each of those could be `cli`, `strat`\n(strategies), `inner`, and so on.\n\nThe goal of the wiki is to present data in a manner that is from the perspective\nof a querying user. Here, a user is a programmer wanting to get key information\nfrom a specific domain. For instance, if a user wants to use postgres functions\nand hasn't done them in a while, they should be able to query\n`postgres.functions` to see what information is available to them.\n\nThis wiki has been written with myself in mind. While learning each of these\ndomains, I have been sensitive to the \"aha\" moments and have noted down my\ninsights as they arose. I have refrained from capturing information that I\nconsidered obvious or otherwise non-beneficial to my own understanding.\n\nAs a result, I have allowed myself to use potentially arcane concepts to explain other ones. For example, in my note on [[unit testing|testing.method.unit]], I have made reference to the [[microservices|general.arch.microservice]] note. If these notes were made with the public in mind, this would be a very bad strategy, given that you'd have to understand microservices to be able to draw that same parallel that I've already drawn. Since these notes are written for myself, I have been fine with taking these liberties.\n\nWhat I hope to gain from this wiki is the ability to step away from any\ngiven domain for a long period of time, and be able to be passably useful for\nwhatever my goals are within a short period of time. Of course this is all\nvague sounding, and really depends on the domain along with the ends I am\ntrying to reach.\n\nTo achieve this, the system should be steadfast to:\n- be able to put information in relatively easily, without too much thought\n\trequired to its location. While location is important, Dendron makes it easy\n\tto relocate notes, if it becomes apparent that a different place makes more\n\tsense.\n- be able to extract the information that is needed, meaning there is a\n\thigh-degree in confidence in the location of the information. The idea is\n\tthat information loses a large amount of its value when it is unfindable.\n\tTherefore, a relatively strict ideology should be used when determining\n\twhere a piece of information belongs.\n\t- Some concepts might realistically belong to multiple domains. For instance, the concept of *access modifiers* can be found in both `C#` and `Typescript`. Therefore, this note should be abstracted to a common place, such as [[OOP|paradigm.oop]].\n\nThis Dendron vault is the sister component to the [General Second Brain](https://tech.kyletycholiz.com).\n\n### Tags\nThroughout the garden, I have made use of tags, which give semantic meaning to the pieces of information.\n\n- `ex.` - Denotes an *example* of the preceding piece of information\n- `spec:` - Specifies that the preceding information has some degree of *speculation* to it, and may not be 100% factual. Ideally this gets clarified over time as my understanding develops.\n- `anal:` - Denotes an *analogy* of the preceding information. Often I will attempt to link concepts to others that I have previously learned.\n- `mn:` - Denotes a *mnemonic*\n- `expl:` - Denotes an *explanation*\n\n## Resources\n### UE (Unexamined) Resources\nOften, I come across sources of information that I believe to be high-quality. They may be recommendations or found in some other way. No matter their origin, I may be in a position where I don't have the time to fully examine them (and properly extract notes), or I may not require the information at that moment in time. In cases like these, I will add reference to a section of the note called **UE Resources**. The idea is that in the future when I am ready to examine them, I have a list of resources that I can start with. This is an alternative strategy to compiling browser bookmarks, which I've found can quickly become untenable.\n\n### E (Examined) Resources\nOnce a resource has been thoroughly examined and has been mined for notes, it will be moved from *UE Resources* to *E Resources*. This is to indicate that (in my own estimation), there is nothing more to be gained from the resource that is not already in the note.\n\n### Resources\nThis heading is for inexhaustible resources. \n- A prime example would be a quality website that continually posts articles.  - Another example would be a tool, such as software that measures frequencies in a room to help acoustically treat it.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"../main/tech","name":"tech"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"The Tech Digital Garden of Kyle Tycholiz"},"github":{"cname":"tech.kyletycholiz.com","enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://tech.kyletycholiz.com","duplicateNoteBehavior":{"action":"useVault","payload":["tech"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}